
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.8.0.115.3

// ldbanno -n Verilog -o Motorcontrollerfinal_controller_vo.vo -w -neg -gui -msgset C:/Users/gebruiker/workspace/lattice/Final code software/promote.xml Motorcontrollerfinal_controller.ncd 
// Netlist created on Fri Nov 18 14:17:05 2016
// Netlist written on Fri Nov 18 14:17:18 2016
// Design is for device LCMXO2-7000HE
// Design is for package TQFP144
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module SPI_loopback_Top ( CS, SCK, MOSI, MISO, LED1, LED2, LED3, LED4, clkout, 
                          H_A_m1, H_B_m1, H_C_m1, MA_m1, MB_m1, MC_m1, H_A_m2, 
                          H_B_m2, H_C_m2, MA_m2, MB_m2, MC_m2, H_A_m3, H_B_m3, 
                          H_C_m3, MA_m3, MB_m3, MC_m3, H_A_m4, H_B_m4, H_C_m4, 
                          MA_m4, MB_m4, MC_m4 );
  input  CS, SCK, MOSI, H_A_m1, H_B_m1, H_C_m1, H_A_m2, H_B_m2, H_C_m2, H_A_m3, 
         H_B_m3, H_C_m3, H_A_m4, H_B_m4, H_C_m4;
  output MISO, LED1, LED2, LED3, LED4, clkout;
  output [1:0] MA_m1;
  output [1:0] MB_m1;
  output [1:0] MC_m1;
  output [1:0] MA_m2;
  output [1:0] MB_m2;
  output [1:0] MC_m2;
  output [1:0] MA_m3;
  output [1:0] MB_m3;
  output [1:0] MC_m3;
  output [1:0] MA_m4;
  output [1:0] MB_m4;
  output [1:0] MC_m4;
  wire   \HALL_I_M1/count_19 , \HALL_I_M1/speed_19_N_640_19 , 
         \HALL_I_M1/clk_1mhz_enable_9 , clk_1mhz, \HALL_I_M1/n2220 , 
         \HALL_I_M1/count_18 , \HALL_I_M1/count_17 , 
         \HALL_I_M1/speed_19_N_640_18 , \HALL_I_M1/speed_19_N_640_17 , 
         \HALL_I_M1/n2219 , \HALL_I_M1/count_0 , \HALL_I_M1/speed_19_N_640_0 , 
         \HALL_I_M1/n2211 , \HALL_I_M1/count_16 , \HALL_I_M1/count_15 , 
         \HALL_I_M1/speed_19_N_640_16 , \HALL_I_M1/speed_19_N_640_15 , 
         \HALL_I_M1/n2218 , \HALL_I_M1/count_8 , \HALL_I_M1/count_7 , 
         \HALL_I_M1/speed_19_N_640_8 , \HALL_I_M1/speed_19_N_640_7 , 
         \HALL_I_M1/n2214 , \HALL_I_M1/n2215 , \HALL_I_M1/count_14 , 
         \HALL_I_M1/count_13 , \HALL_I_M1/speed_19_N_640_14 , 
         \HALL_I_M1/speed_19_N_640_13 , \HALL_I_M1/n2217 , \HALL_I_M1/count_2 , 
         \HALL_I_M1/count_1 , \HALL_I_M1/speed_19_N_640_2 , 
         \HALL_I_M1/speed_19_N_640_1 , \HALL_I_M1/n2212 , \HALL_I_M1/count_12 , 
         \HALL_I_M1/count_11 , \HALL_I_M1/speed_19_N_640_12 , 
         \HALL_I_M1/speed_19_N_640_11 , \HALL_I_M1/n2216 , \HALL_I_M1/count_6 , 
         \HALL_I_M1/count_5 , \HALL_I_M1/speed_19_N_640_6 , 
         \HALL_I_M1/speed_19_N_640_5 , \HALL_I_M1/n2213 , \HALL_I_M1/count_10 , 
         \HALL_I_M1/count_9 , \HALL_I_M1/speed_19_N_640_10 , 
         \HALL_I_M1/speed_19_N_640_9 , \HALL_I_M1/count_4 , 
         \HALL_I_M1/count_3 , \HALL_I_M1/speed_19_N_640_4 , 
         \HALL_I_M1/speed_19_N_640_3 , \HALL_I_M4/count_19 , 
         \HALL_I_M4/speed_19_N_640_19 , \HALL_I_M4/clk_1mhz_enable_7 , 
         \HALL_I_M4/n2250 , \HALL_I_M4/count_18 , \HALL_I_M4/count_17 , 
         \HALL_I_M4/speed_19_N_640_18 , \HALL_I_M4/speed_19_N_640_17 , 
         \HALL_I_M4/n2249 , \HALL_I_M4/count_16 , \HALL_I_M4/count_15 , 
         \HALL_I_M4/speed_19_N_640_16 , \HALL_I_M4/speed_19_N_640_15 , 
         \HALL_I_M4/n2248 , \HALL_I_M4/count_14 , \HALL_I_M4/count_13 , 
         \HALL_I_M4/speed_19_N_640_14 , \HALL_I_M4/speed_19_N_640_13 , 
         \HALL_I_M4/n2247 , \HALL_I_M4/count_12 , \HALL_I_M4/count_11 , 
         \HALL_I_M4/speed_19_N_640_12 , \HALL_I_M4/speed_19_N_640_11 , 
         \HALL_I_M4/n2246 , \HALL_I_M4/count_10 , \HALL_I_M4/count_9 , 
         \HALL_I_M4/speed_19_N_640_10 , \HALL_I_M4/speed_19_N_640_9 , 
         \HALL_I_M4/n2245 , \HALL_I_M4/count_8 , \HALL_I_M4/count_7 , 
         \HALL_I_M4/speed_19_N_640_8 , \HALL_I_M4/speed_19_N_640_7 , 
         \HALL_I_M4/n2244 , \HALL_I_M4/count_6 , \HALL_I_M4/count_5 , 
         \HALL_I_M4/speed_19_N_640_6 , \HALL_I_M4/speed_19_N_640_5 , 
         \HALL_I_M4/n2243 , \HALL_I_M4/count_4 , \HALL_I_M4/count_3 , 
         \HALL_I_M4/speed_19_N_640_4 , \HALL_I_M4/speed_19_N_640_3 , 
         \HALL_I_M4/n2242 , \HALL_I_M4/count_2 , \HALL_I_M4/count_1 , 
         \HALL_I_M4/speed_19_N_640_2 , \HALL_I_M4/speed_19_N_640_1 , 
         \HALL_I_M4/n2241 , \HALL_I_M4/count_0 , \HALL_I_M4/speed_19_N_640_0 , 
         \HALL_I_M2/count_0 , \HALL_I_M2/speed_19_N_640_0 , \HALL_I_M2/n1485 , 
         \HALL_I_M2/n2221 , \HALL_I_M2/count_10 , \HALL_I_M2/count_9 , 
         \HALL_I_M2/speed_19_N_640_10 , \HALL_I_M2/speed_19_N_640_9 , 
         \HALL_I_M2/n2225 , \HALL_I_M2/n2226 , \HALL_I_M2/count_8 , 
         \HALL_I_M2/count_7 , \HALL_I_M2/speed_19_N_640_8 , 
         \HALL_I_M2/speed_19_N_640_7 , \HALL_I_M2/n2224 , \HALL_I_M2/count_6 , 
         \HALL_I_M2/count_5 , \HALL_I_M2/speed_19_N_640_6 , 
         \HALL_I_M2/speed_19_N_640_5 , \HALL_I_M2/n2223 , \HALL_I_M2/count_4 , 
         \HALL_I_M2/count_3 , \HALL_I_M2/speed_19_N_640_4 , 
         \HALL_I_M2/speed_19_N_640_3 , \HALL_I_M2/n2222 , \HALL_I_M2/count_2 , 
         \HALL_I_M2/count_1 , \HALL_I_M2/speed_19_N_640_2 , 
         \HALL_I_M2/speed_19_N_640_1 , \HALL_I_M2/count_19 , 
         \HALL_I_M2/speed_19_N_640_19 , \HALL_I_M2/n2230 , 
         \HALL_I_M2/count_18 , \HALL_I_M2/count_17 , 
         \HALL_I_M2/speed_19_N_640_18 , \HALL_I_M2/speed_19_N_640_17 , 
         \HALL_I_M2/n2229 , \HALL_I_M2/count_16 , \HALL_I_M2/count_15 , 
         \HALL_I_M2/speed_19_N_640_16 , \HALL_I_M2/speed_19_N_640_15 , 
         \HALL_I_M2/n2228 , \HALL_I_M2/count_14 , \HALL_I_M2/count_13 , 
         \HALL_I_M2/speed_19_N_640_14 , \HALL_I_M2/speed_19_N_640_13 , 
         \HALL_I_M2/n2227 , \HALL_I_M2/count_12 , \HALL_I_M2/count_11 , 
         \HALL_I_M2/speed_19_N_640_12 , \HALL_I_M2/speed_19_N_640_11 , 
         \HALL_I_M3/count_19 , \HALL_I_M3/speed_19_N_640_19 , 
         \HALL_I_M3/clk_1mhz_enable_8 , \HALL_I_M3/n2240 , 
         \HALL_I_M3/count_18 , \HALL_I_M3/count_17 , 
         \HALL_I_M3/speed_19_N_640_18 , \HALL_I_M3/speed_19_N_640_17 , 
         \HALL_I_M3/n2239 , \HALL_I_M3/count_16 , \HALL_I_M3/count_15 , 
         \HALL_I_M3/speed_19_N_640_16 , \HALL_I_M3/speed_19_N_640_15 , 
         \HALL_I_M3/n2238 , \HALL_I_M3/count_14 , \HALL_I_M3/count_13 , 
         \HALL_I_M3/speed_19_N_640_14 , \HALL_I_M3/speed_19_N_640_13 , 
         \HALL_I_M3/n2237 , \HALL_I_M3/count_12 , \HALL_I_M3/count_11 , 
         \HALL_I_M3/speed_19_N_640_12 , \HALL_I_M3/speed_19_N_640_11 , 
         \HALL_I_M3/n2236 , \HALL_I_M3/count_10 , \HALL_I_M3/count_9 , 
         \HALL_I_M3/speed_19_N_640_10 , \HALL_I_M3/speed_19_N_640_9 , 
         \HALL_I_M3/n2235 , \HALL_I_M3/count_8 , \HALL_I_M3/count_7 , 
         \HALL_I_M3/speed_19_N_640_8 , \HALL_I_M3/speed_19_N_640_7 , 
         \HALL_I_M3/n2234 , \HALL_I_M3/count_6 , \HALL_I_M3/count_5 , 
         \HALL_I_M3/speed_19_N_640_6 , \HALL_I_M3/speed_19_N_640_5 , 
         \HALL_I_M3/n2233 , \HALL_I_M3/count_4 , \HALL_I_M3/count_3 , 
         \HALL_I_M3/speed_19_N_640_4 , \HALL_I_M3/speed_19_N_640_3 , 
         \HALL_I_M3/n2232 , \HALL_I_M3/count_2 , \HALL_I_M3/count_1 , 
         \HALL_I_M3/speed_19_N_640_2 , \HALL_I_M3/speed_19_N_640_1 , 
         \HALL_I_M3/n2231 , \HALL_I_M3/count_0 , \HALL_I_M3/speed_19_N_640_0 , 
         \PWM_I_M1/cnt_9 , \PWM_I_M1/n46 , \PWM_I_M1/n1494 , pwm_clk, 
         \PWM_I_M1/n2255 , \PWM_I_M1/cnt_8 , \PWM_I_M1/cnt_7 , \PWM_I_M1/n47 , 
         \PWM_I_M1/n48 , \PWM_I_M1/n2254 , \PWM_I_M1/cnt_6 , \PWM_I_M1/cnt_5 , 
         \PWM_I_M1/n49 , \PWM_I_M1/n50 , \PWM_I_M1/n2253 , \PWM_I_M1/cnt_4 , 
         \PWM_I_M1/cnt_3 , \PWM_I_M1/n51 , \PWM_I_M1/n52 , \PWM_I_M1/n2252 , 
         \PWM_I_M1/cnt_2 , \PWM_I_M1/cnt_1 , \PWM_I_M1/n53 , \PWM_I_M1/n54 , 
         \PWM_I_M1/n2251 , \PWM_I_M1/cnt_0 , \PWM_I_M1/n55 , 
         \CLKDIV_I/count_0 , \CLKDIV_I/count_1 , \CLKDIV_I/n29 , 
         \CLKDIV_I/n30 , \CLKDIV_I/n1495 , clkout_c, \CLKDIV_I/count_2 , 
         \CLKDIV_I/count_3 , \CLKDIV_I/n27 , \CLKDIV_I/n28 , \CLKDIV_I/n2947 , 
         \CLKDIV_I/count_4 , \CLKDIV_I/n26 , \CLKDIV_I/n6 , \CLKDIV_I/mhz_buf , 
         \CLKDIV_I/mhz_buf_N_14 , \CLKDIV_I/pwm_buf , \CLKDIV_I/pwm_buf_N_13 , 
         PWM_m1, hall1_old, hall3_old, \COM_I_M1/MospairA_1_N_699_0 , 
         MA_m1_c_0, hall3_old_adj_737, hall1_old_adj_735, 
         \COM_I_M2/MospairA_1_N_699_1 , n3029, LED2_c, MA_m2_c_0, MA_m2_c_1, 
         hall3_old_adj_740, hall1_old_adj_738, \COM_I_M3/MospairA_1_N_699_1 , 
         \n3029\001/BUF1 , LED3_c, MA_m3_c_0, MA_m3_c_1, hall3_old_adj_743, 
         hall1_old_adj_741, \COM_I_M4/MospairA_1_N_699_1 , \n3029\000/BUF1 , 
         LED4_c, MA_m4_c_0, MA_m4_c_1, hall2_old, 
         \COM_I_M1/MospairB_1_N_703_0 , MB_m1_c_0, \COM_I_M1/n6 , MB_m1_c_1, 
         hall2_old_adj_736, \COM_I_M2/MospairB_1_N_703_1 , MB_m2_c_1, 
         hall2_old_adj_739, \COM_I_M3/MospairB_1_N_703_1 , MB_m3_c_1, 
         hall2_old_adj_742, \COM_I_M4/MospairB_1_N_703_1 , MB_m4_c_1, 
         \COM_I_M1/MospairC_1_N_707_0 , MC_m1_c_0, \COM_I_M1/n2 , MC_m1_c_1, 
         \COM_I_M2/MospairC_1_N_707_1 , MC_m2_c_1, 
         \COM_I_M3/MospairC_1_N_707_1 , MC_m3_c_1, 
         \COM_I_M4/MospairC_1_N_707_1 , MC_m4_c_1, \SPI_I/CSlatched , 
         \SPI_I/n3030 , \SPI_I/send_buffer_1 , \SPI_I/n2949 , \SPI_I/n2950 , 
         \SPI_I/MISOb , \SPI_I/MISOb_N_590 , MISO_N_569, \PWM_I_M1/n2770 , 
         \PWM_I_M1/n2772 , \SPI_I/SCKlatched , \SPI_I/SCKold , \SPI_I/n2948 , 
         SCK_c, \SPI_I/MISO_N_570 , \SPI_I/CSold , \SPI_I/MISOb_N_585 , 
         \SPI_I/send_buffer_2 , \SPI_I/send_buffer_95_N_291_1 , 
         \SPI_I/send_buffer_3 , \SPI_I/send_buffer_95_N_291_2 , \SPI_I/n99 , 
         \SPI_I/n100 , \SPI_I/n101 , \SPI_I/send_buffer_95_N_291_4 , 
         \SPI_I/send_buffer_95_N_291_3 , \SPI_I/send_buffer_4 , \SPI_I/n98 , 
         \SPI_I/n97 , \SPI_I/send_buffer_95_N_291_6 , 
         \SPI_I/send_buffer_95_N_291_5 , \SPI_I/send_buffer_5 , 
         \SPI_I/send_buffer_6 , \SPI_I/n96 , \SPI_I/n95 , 
         \SPI_I/send_buffer_95_N_291_8 , \SPI_I/send_buffer_95_N_291_7 , 
         \SPI_I/send_buffer_7 , \SPI_I/send_buffer_8 , \SPI_I/n94 , 
         \SPI_I/n93 , \SPI_I/send_buffer_95_N_291_10 , 
         \SPI_I/send_buffer_95_N_291_9 , \SPI_I/send_buffer_9 , 
         \SPI_I/send_buffer_10 , \SPI_I/n91 , \SPI_I/n92 , 
         \SPI_I/send_buffer_95_N_291_12 , \SPI_I/send_buffer_95_N_291_11 , 
         \SPI_I/send_buffer_11 , \SPI_I/send_buffer_12 , \SPI_I/n90 , 
         \SPI_I/n89 , \SPI_I/send_buffer_95_N_291_14 , 
         \SPI_I/send_buffer_95_N_291_13 , \SPI_I/send_buffer_13 , 
         \SPI_I/send_buffer_14 , \SPI_I/n88 , \SPI_I/n87 , 
         \SPI_I/send_buffer_95_N_291_16 , \SPI_I/send_buffer_95_N_291_15 , 
         \SPI_I/send_buffer_15 , \SPI_I/send_buffer_16 , \SPI_I/n85 , 
         \SPI_I/n86 , \SPI_I/send_buffer_95_N_291_18 , 
         \SPI_I/send_buffer_95_N_291_17 , \SPI_I/send_buffer_17 , 
         \SPI_I/send_buffer_18 , \SPI_I/n84 , \SPI_I/n83 , 
         \SPI_I/send_buffer_95_N_291_20 , \SPI_I/send_buffer_95_N_291_19 , 
         \SPI_I/send_buffer_19 , \SPI_I/send_buffer_20 , \SPI_I/n82 , 
         \SPI_I/n81 , \SPI_I/send_buffer_95_N_291_22 , 
         \SPI_I/send_buffer_95_N_291_21 , \SPI_I/send_buffer_21 , 
         \SPI_I/send_buffer_22 , \SPI_I/n80 , \SPI_I/n79 , 
         \SPI_I/send_buffer_95_N_291_24 , \SPI_I/send_buffer_95_N_291_23 , 
         \SPI_I/send_buffer_23 , \SPI_I/send_buffer_24 , \SPI_I/n78 , 
         \SPI_I/n1700 , \SPI_I/send_buffer_95_N_291_26 , 
         \SPI_I/send_buffer_95_N_291_25 , \SPI_I/send_buffer_25 , 
         \SPI_I/send_buffer_26 , \SPI_I/n75 , \SPI_I/n76 , 
         \SPI_I/send_buffer_95_N_291_28 , \SPI_I/send_buffer_95_N_291_27 , 
         \SPI_I/send_buffer_27 , \SPI_I/send_buffer_28 , \SPI_I/n73 , 
         \SPI_I/n74 , \SPI_I/send_buffer_95_N_291_30 , 
         \SPI_I/send_buffer_95_N_291_29 , \SPI_I/send_buffer_29 , 
         \SPI_I/send_buffer_30 , \SPI_I/n71 , \SPI_I/n72 , 
         \SPI_I/send_buffer_95_N_291_32 , \SPI_I/send_buffer_95_N_291_31 , 
         \SPI_I/send_buffer_31 , \SPI_I/send_buffer_32 , \SPI_I/n70 , 
         \SPI_I/n69 , \SPI_I/send_buffer_95_N_291_34 , 
         \SPI_I/send_buffer_95_N_291_33 , \SPI_I/send_buffer_33 , 
         \SPI_I/send_buffer_34 , \SPI_I/n67 , \SPI_I/n68 , 
         \SPI_I/send_buffer_95_N_291_36 , \SPI_I/send_buffer_95_N_291_35 , 
         \SPI_I/send_buffer_35 , \SPI_I/send_buffer_36 , \SPI_I/n66 , 
         \SPI_I/n65 , \SPI_I/send_buffer_95_N_291_38 , 
         \SPI_I/send_buffer_95_N_291_37 , \SPI_I/send_buffer_37 , 
         \SPI_I/send_buffer_38 , \SPI_I/n64 , \SPI_I/n63 , 
         \SPI_I/send_buffer_95_N_291_40 , \SPI_I/send_buffer_95_N_291_39 , 
         \SPI_I/send_buffer_39 , \SPI_I/send_buffer_40 , \SPI_I/n62 , 
         \SPI_I/n61 , \SPI_I/send_buffer_95_N_291_42 , 
         \SPI_I/send_buffer_95_N_291_41 , \SPI_I/send_buffer_41 , 
         \SPI_I/send_buffer_42 , \SPI_I/n60 , \SPI_I/n59 , 
         \SPI_I/send_buffer_95_N_291_44 , \SPI_I/send_buffer_95_N_291_43 , 
         \SPI_I/send_buffer_43 , \SPI_I/send_buffer_44 , \SPI_I/n58 , 
         \SPI_I/n57 , \SPI_I/send_buffer_95_N_291_46 , 
         \SPI_I/send_buffer_95_N_291_45 , \SPI_I/send_buffer_45 , 
         \SPI_I/send_buffer_46 , \SPI_I/n55 , \SPI_I/n56 , 
         \SPI_I/send_buffer_95_N_291_48 , \SPI_I/send_buffer_95_N_291_47 , 
         \SPI_I/send_buffer_47 , \SPI_I/send_buffer_48 , \SPI_I/n53 , 
         \SPI_I/n54 , \SPI_I/send_buffer_95_N_291_50 , 
         \SPI_I/send_buffer_95_N_291_49 , \SPI_I/send_buffer_49 , 
         \SPI_I/send_buffer_50 , \SPI_I/n51 , \SPI_I/n52 , 
         \SPI_I/send_buffer_95_N_291_52 , \SPI_I/send_buffer_95_N_291_51 , 
         \SPI_I/send_buffer_51 , \SPI_I/send_buffer_52 , \SPI_I/n50 , 
         \SPI_I/n49 , \SPI_I/send_buffer_95_N_291_54 , 
         \SPI_I/send_buffer_95_N_291_53 , \SPI_I/send_buffer_53 , 
         \SPI_I/send_buffer_54 , \SPI_I/n47 , \SPI_I/n48 , 
         \SPI_I/send_buffer_95_N_291_56 , \SPI_I/send_buffer_95_N_291_55 , 
         \SPI_I/send_buffer_55 , \SPI_I/send_buffer_56 , \SPI_I/n46 , 
         \SPI_I/n45 , \SPI_I/send_buffer_95_N_291_58 , 
         \SPI_I/send_buffer_95_N_291_57 , \SPI_I/send_buffer_57 , 
         \SPI_I/send_buffer_58 , \SPI_I/n43 , \SPI_I/n44 , 
         \SPI_I/send_buffer_95_N_291_60 , \SPI_I/send_buffer_95_N_291_59 , 
         \SPI_I/send_buffer_59 , \SPI_I/send_buffer_60 , \SPI_I/n41 , 
         \SPI_I/n1743 , \SPI_I/send_buffer_95_N_291_62 , 
         \SPI_I/send_buffer_95_N_291_61 , \SPI_I/send_buffer_61 , 
         \SPI_I/send_buffer_62 , \SPI_I/n39 , \SPI_I/n40 , 
         \SPI_I/send_buffer_95_N_291_64 , \SPI_I/send_buffer_95_N_291_63 , 
         \SPI_I/send_buffer_63 , \SPI_I/send_buffer_64 , \SPI_I/n38 , 
         \SPI_I/n37 , \SPI_I/send_buffer_95_N_291_66 , 
         \SPI_I/send_buffer_95_N_291_65 , \SPI_I/send_buffer_65 , 
         \SPI_I/send_buffer_66 , \SPI_I/n35 , \SPI_I/n36 , 
         \SPI_I/send_buffer_95_N_291_68 , \SPI_I/send_buffer_95_N_291_67 , 
         \SPI_I/send_buffer_67 , \SPI_I/send_buffer_68 , \SPI_I/n33 , 
         \SPI_I/n34 , \SPI_I/send_buffer_95_N_291_70 , 
         \SPI_I/send_buffer_95_N_291_69 , \SPI_I/send_buffer_69 , 
         \SPI_I/send_buffer_70 , \SPI_I/n32 , \SPI_I/n1786 , 
         \SPI_I/send_buffer_95_N_291_72 , \SPI_I/send_buffer_95_N_291_71 , 
         \SPI_I/send_buffer_71 , \SPI_I/send_buffer_72 , \SPI_I/n30 , 
         \SPI_I/n29 , \SPI_I/send_buffer_95_N_291_74 , 
         \SPI_I/send_buffer_95_N_291_73 , \SPI_I/send_buffer_73 , 
         \SPI_I/send_buffer_74 , \SPI_I/n27 , \SPI_I/n28 , 
         \SPI_I/send_buffer_95_N_291_76 , \SPI_I/send_buffer_95_N_291_75 , 
         \SPI_I/send_buffer_75 , \SPI_I/send_buffer_76 , \SPI_I/n26 , 
         \SPI_I/n25 , \SPI_I/send_buffer_95_N_291_78 , 
         \SPI_I/send_buffer_95_N_291_77 , \SPI_I/send_buffer_77 , 
         \SPI_I/send_buffer_78 , \SPI_I/n23 , \SPI_I/n24 , 
         \SPI_I/send_buffer_95_N_291_80 , \SPI_I/send_buffer_95_N_291_79 , 
         \SPI_I/send_buffer_79 , \SPI_I/send_buffer_80 , \SPI_I/n22 , 
         \SPI_I/n21 , \SPI_I/send_buffer_95_N_291_82 , 
         \SPI_I/send_buffer_95_N_291_81 , \SPI_I/send_buffer_81 , 
         \SPI_I/send_buffer_82 , \SPI_I/n19 , \SPI_I/n20 , 
         \SPI_I/send_buffer_95_N_291_84 , \SPI_I/send_buffer_95_N_291_83 , 
         \SPI_I/send_buffer_83 , \SPI_I/send_buffer_84 , \SPI_I/n17 , 
         \SPI_I/n18 , \SPI_I/send_buffer_95_N_291_86 , 
         \SPI_I/send_buffer_95_N_291_85 , \SPI_I/send_buffer_85 , 
         \SPI_I/send_buffer_86 , \SPI_I/n16 , \SPI_I/n15 , 
         \SPI_I/send_buffer_95_N_291_88 , \SPI_I/send_buffer_95_N_291_87 , 
         \SPI_I/send_buffer_87 , \SPI_I/send_buffer_88 , \SPI_I/n14 , 
         \SPI_I/n13 , \SPI_I/send_buffer_95_N_291_90 , 
         \SPI_I/send_buffer_95_N_291_89 , \SPI_I/send_buffer_89 , 
         \SPI_I/send_buffer_90 , \SPI_I/n12 , \SPI_I/n11 , 
         \SPI_I/send_buffer_95_N_291_92 , \SPI_I/send_buffer_95_N_291_91 , 
         \SPI_I/send_buffer_91 , \SPI_I/send_buffer_92 , speed_m1_18, 
         \SPI_I/send_buffer_93 , \SPI_I/n10 , \SPI_I/send_buffer_95_N_291_93 , 
         speed_m3_11, \SPI_I/send_buffer_94 , speed_m1_19, \SPI_I/n2941 , 
         \HALL_I_M1/n2938 , \HALL_I_M1/n2942 , \HALL_I_M1/speed_19_N_598_0 , 
         speed_m1_0, speed_m1_2, speed_m1_1, \HALL_I_M1/n1272 , 
         \HALL_I_M1/n1270 , speed_m1_4, speed_m1_3, \HALL_I_M1/n1268 , 
         \HALL_I_M1/n1276 , speed_m1_6, speed_m1_5, \HALL_I_M1/n1256 , 
         \HALL_I_M1/n1274 , speed_m1_8, speed_m1_7, \HALL_I_M1/n1244 , 
         \HALL_I_M1/n1210 , speed_m1_10, speed_m1_9, \HALL_I_M1/n1204 , 
         \HALL_I_M1/n1200 , speed_m1_12, speed_m1_11, \HALL_I_M1/n1242 , 
         \HALL_I_M1/n1206 , speed_m1_14, speed_m1_13, \HALL_I_M1/n1246 , 
         \HALL_I_M1/n1230 , speed_m1_16, speed_m1_15, \HALL_I_M1/n1208 , 
         \HALL_I_M1/n1218 , speed_m1_17, \HALL_I_M1/n1238 , \HALL_I_M1/n1202 , 
         \HALL_I_M1/n4 , \HALL_I_M1/hall3_lat , \HALL_I_M1/n1258 , H_C_m1_c, 
         \HALL_I_M2/n2939 , \HALL_I_M2/n2944 , speed_m2_1, speed_m2_0, 
         \HALL_I_M2/n1260 , \HALL_I_M2/n1196 , speed_m2_3, speed_m2_2, 
         \HALL_I_M2/n1220 , \HALL_I_M2/n1250 , speed_m2_5, speed_m2_4, 
         \HALL_I_M2/n1236 , \HALL_I_M2/n1224 , speed_m2_7, speed_m2_6, 
         \HALL_I_M2/n1216 , \HALL_I_M2/n1222 , speed_m2_9, speed_m2_8, 
         \HALL_I_M2/n1226 , \HALL_I_M2/n1232 , speed_m2_11, speed_m2_10, 
         \HALL_I_M2/n1234 , \HALL_I_M2/n1214 , speed_m2_13, speed_m2_12, 
         \HALL_I_M2/n1192 , \HALL_I_M2/n1212 , speed_m2_15, speed_m2_14, 
         \HALL_I_M2/n1190 , \HALL_I_M2/n1266 , speed_m2_17, speed_m2_16, 
         \HALL_I_M2/n1262 , \HALL_I_M2/n1188 , speed_m2_19, speed_m2_18, 
         \HALL_I_M2/n1186 , \HALL_I_M2/n1194 , \HALL_I_M3/n2943 , 
         \HALL_I_M3/n39 , \HALL_I_M3/speed_19_N_598_0 , speed_m3_0, speed_m3_2, 
         speed_m3_1, \HALL_I_M3/n1184 , \HALL_I_M3/n1264 , 
         \HALL_I_M3/speed_19_N_598_3 , speed_m3_3, speed_m3_4, 
         \HALL_I_M3/n1252 , \HALL_I_M3/speed_19_N_598_6 , 
         \HALL_I_M3/speed_19_N_598_5 , speed_m3_5, speed_m3_6, 
         \HALL_I_M3/speed_19_N_598_7 , speed_m3_7, \HALL_I_M4/n15 , speed_m3_9, 
         speed_m3_8, \HALL_I_M3/n1282 , \HALL_I_M3/n1332 , speed_m3_10, 
         \HALL_I_M3/n1278 , \HALL_I_M3/n1280 , \HALL_I_M3/n2780 , 
         \HALL_I_M3/n2774 , speed_m3_12, \HALL_I_M3/n1198 , 
         \HALL_I_M3/speed_19_N_598_14 , \HALL_I_M3/speed_19_N_598_13 , 
         speed_m3_13, speed_m3_14, speed_m3_16, speed_m3_15, \HALL_I_M3/n1406 , 
         \HALL_I_M3/n1408 , speed_m3_18, speed_m3_17, \HALL_I_M3/n1402 , 
         \HALL_I_M3/n1404 , \HALL_I_M3/hall3_lat , \HALL_I_M3/n4 , speed_m3_19, 
         \HALL_I_M3/n1400 , \HALL_I_M4/n2262 , \HALL_I_M4/n13 , 
         \HALL_I_M4/n14 , \HALL_I_M4/n2937 , \HALL_I_M4/n2940 , 
         \HALL_I_M4/speed_19_N_598_0 , speed_m4_0, speed_m4_2, speed_m4_1, 
         \HALL_I_M4/n1396 , \HALL_I_M4/n1398 , speed_m4_4, speed_m4_3, 
         \HALL_I_M4/n1392 , \HALL_I_M4/n1394 , speed_m4_6, speed_m4_5, 
         \HALL_I_M4/n1388 , \HALL_I_M4/n1390 , speed_m4_8, speed_m4_7, 
         \HALL_I_M4/n1384 , \HALL_I_M4/n1386 , speed_m4_10, speed_m4_9, 
         \HALL_I_M4/n1380 , \HALL_I_M4/n1382 , speed_m4_12, speed_m4_11, 
         \HALL_I_M4/n1376 , \HALL_I_M4/n1378 , speed_m4_14, speed_m4_13, 
         \HALL_I_M4/n1372 , \HALL_I_M4/n1374 , speed_m4_16, speed_m4_15, 
         \HALL_I_M4/n1290 , \HALL_I_M4/n1330 , speed_m4_18, speed_m4_17, 
         \HALL_I_M4/n1286 , \HALL_I_M4/n1288 , \HALL_I_M4/hall3_lat , 
         \HALL_I_M4/n4 , speed_m4_19, \HALL_I_M4/n1284 , \HALL_I_M1/n15 , 
         \HALL_I_M1/n13 , \HALL_I_M1/n14 , \HALL_I_M1/n2263 , 
         \HALL_I_M1/hall1_lat , H_A_m1_c, \HALL_I_M1/n20 , \HALL_I_M1/n16 , 
         MA_m1_c_1, \HALL_I_M1/n18 , \HALL_I_M1/hall2_lat , H_B_m1_c, 
         \SPI_I/recv_buffer_8 , \SPI_I/recv_buffer_9 , \SPI_I/enable_m1_N_573 , 
         \HALL_I_M4/hall2_lat , \HALL_I_M4/hall1_lat , H_B_m4_c, 
         \HALL_I_M4/n20 , \HALL_I_M4/n16 , H_A_m4_c, \HALL_I_M4/n18 , 
         \HALL_I_M2/hall1_lat , \HALL_I_M2/hall2_lat , \HALL_I_M2/hall3_lat , 
         \HALL_I_M2/n4 , H_C_m2_c, \HALL_I_M2/n2782 , \HALL_I_M2/n2776 , 
         H_B_m2_c, \HALL_I_M2/n16 , \HALL_I_M2/n2790 , \HALL_I_M2/n17 , 
         \HALL_I_M2/n2264 , H_A_m2_c, \HALL_I_M3/hall2_lat , 
         \HALL_I_M3/hall1_lat , H_A_m3_c, \HALL_I_M3/n2792 , \HALL_I_M3/n17 , 
         \HALL_I_M3/n16 , \HALL_I_M3/n2265 , H_B_m3_c, \PWM_I_M1/n2788 , 
         \SPI_I/recv_buffer_33 , \SPI_I/recv_buffer_32 , 
         \SPI_I/clkout_c_enable_88 , \SPI_I/recv_buffer_31 , CS_c, 
         \SPI_I/recv_buffer_37 , \SPI_I/recv_buffer_36 , 
         \SPI_I/recv_buffer_35 , \SPI_I/recv_buffer_34 , 
         \SPI_I/recv_buffer_60 , \SPI_I/recv_buffer_59 , 
         \SPI_I/recv_buffer_58 , \SPI_I/recv_buffer_29 , 
         \SPI_I/recv_buffer_28 , \SPI_I/recv_buffer_27 , 
         \SPI_I/recv_buffer_18 , \SPI_I/recv_buffer_17 , LED1_c, 
         \SPI_I/recv_buffer_13 , \SPI_I/recv_buffer_12 , 
         \SPI_I/recv_buffer_57 , \SPI_I/recv_buffer_56 , 
         \SPI_I/recv_buffer_55 , \SPI_I/recv_buffer_62 , 
         \SPI_I/recv_buffer_61 , \SPI_I/recv_buffer_54 , 
         \SPI_I/recv_buffer_53 , \SPI_I/recv_buffer_52 , 
         \SPI_I/recv_buffer_51 , \SPI_I/recv_buffer_10 , 
         \SPI_I/recv_buffer_26 , \SPI_I/recv_buffer_50 , 
         \SPI_I/recv_buffer_49 , \SPI_I/recv_buffer_48 , 
         \SPI_I/recv_buffer_47 , \SPI_I/recv_buffer_46 , 
         \SPI_I/recv_buffer_11 , \SPI_I/recv_buffer_30 , 
         \SPI_I/recv_buffer_45 , \SPI_I/recv_buffer_44 , MOSI_c, 
         \SPI_I/recv_buffer_95 , \SPI_I/recv_buffer_16 , 
         \SPI_I/recv_buffer_94 , \SPI_I/recv_buffer_93 , 
         \SPI_I/recv_buffer_92 , \SPI_I/recv_buffer_91 , 
         \SPI_I/recv_buffer_20 , \SPI_I/recv_buffer_19 , 
         \SPI_I/recv_buffer_90 , \SPI_I/recv_buffer_89 , 
         \SPI_I/recv_buffer_88 , \SPI_I/recv_buffer_87 , 
         \SPI_I/recv_buffer_86 , \SPI_I/recv_buffer_15 , 
         \SPI_I/recv_buffer_85 , \SPI_I/recv_buffer_84 , 
         \SPI_I/recv_buffer_83 , \SPI_I/recv_buffer_82 , 
         \SPI_I/recv_buffer_81 , \SPI_I/recv_buffer_80 , 
         \SPI_I/recv_buffer_79 , \SPI_I/recv_buffer_78 , 
         \SPI_I/recv_buffer_14 , \SPI_I/recv_buffer_77 , 
         \SPI_I/recv_buffer_76 , \SPI_I/recv_buffer_75 , 
         \SPI_I/recv_buffer_74 , \SPI_I/recv_buffer_73 , 
         \SPI_I/recv_buffer_72 , \SPI_I/recv_buffer_71 , 
         \SPI_I/recv_buffer_70 , \SPI_I/recv_buffer_69 , 
         \SPI_I/recv_buffer_68 , \SPI_I/recv_buffer_67 , 
         \SPI_I/recv_buffer_66 , \SPI_I/recv_buffer_25 , 
         \SPI_I/recv_buffer_24 , \SPI_I/recv_buffer_43 , 
         \SPI_I/recv_buffer_42 , \SPI_I/recv_buffer_22 , 
         \SPI_I/recv_buffer_21 , \SPI_I/recv_buffer_41 , 
         \SPI_I/recv_buffer_40 , \SPI_I/recv_buffer_39 , 
         \SPI_I/recv_buffer_38 , \SPI_I/recv_buffer_23 , 
         \SPI_I/recv_buffer_65 , \SPI_I/recv_buffer_64 , 
         \SPI_I/recv_buffer_63 , H_C_m3_c, H_C_m4_c, VCCI;

  HALL_I_M1_SLICE_0 \HALL_I_M1/SLICE_0 ( .A0(\HALL_I_M1/count_19 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_19 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2220 ), 
    .F0(\HALL_I_M1/speed_19_N_640_19 ), .Q0(\HALL_I_M1/count_19 ));
  HALL_I_M1_SLICE_1 \HALL_I_M1/SLICE_1 ( .A1(\HALL_I_M1/count_18 ), 
    .A0(\HALL_I_M1/count_17 ), .DI1(\HALL_I_M1/speed_19_N_640_18 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_17 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2219 ), 
    .F0(\HALL_I_M1/speed_19_N_640_17 ), .Q0(\HALL_I_M1/count_17 ), 
    .F1(\HALL_I_M1/speed_19_N_640_18 ), .Q1(\HALL_I_M1/count_18 ), 
    .FCO(\HALL_I_M1/n2220 ));
  HALL_I_M1_SLICE_2 \HALL_I_M1/SLICE_2 ( .A1(\HALL_I_M1/count_0 ), 
    .DI1(\HALL_I_M1/speed_19_N_640_0 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .F1(\HALL_I_M1/speed_19_N_640_0 ), 
    .Q1(\HALL_I_M1/count_0 ), .FCO(\HALL_I_M1/n2211 ));
  HALL_I_M1_SLICE_3 \HALL_I_M1/SLICE_3 ( .A1(\HALL_I_M1/count_16 ), 
    .A0(\HALL_I_M1/count_15 ), .DI1(\HALL_I_M1/speed_19_N_640_16 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_15 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2218 ), 
    .F0(\HALL_I_M1/speed_19_N_640_15 ), .Q0(\HALL_I_M1/count_15 ), 
    .F1(\HALL_I_M1/speed_19_N_640_16 ), .Q1(\HALL_I_M1/count_16 ), 
    .FCO(\HALL_I_M1/n2219 ));
  HALL_I_M1_SLICE_4 \HALL_I_M1/SLICE_4 ( .A1(\HALL_I_M1/count_8 ), 
    .A0(\HALL_I_M1/count_7 ), .DI1(\HALL_I_M1/speed_19_N_640_8 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_7 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2214 ), .F0(\HALL_I_M1/speed_19_N_640_7 ), 
    .Q0(\HALL_I_M1/count_7 ), .F1(\HALL_I_M1/speed_19_N_640_8 ), 
    .Q1(\HALL_I_M1/count_8 ), .FCO(\HALL_I_M1/n2215 ));
  HALL_I_M1_SLICE_5 \HALL_I_M1/SLICE_5 ( .A1(\HALL_I_M1/count_14 ), 
    .A0(\HALL_I_M1/count_13 ), .DI1(\HALL_I_M1/speed_19_N_640_14 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_13 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2217 ), 
    .F0(\HALL_I_M1/speed_19_N_640_13 ), .Q0(\HALL_I_M1/count_13 ), 
    .F1(\HALL_I_M1/speed_19_N_640_14 ), .Q1(\HALL_I_M1/count_14 ), 
    .FCO(\HALL_I_M1/n2218 ));
  HALL_I_M1_SLICE_6 \HALL_I_M1/SLICE_6 ( .A1(\HALL_I_M1/count_2 ), 
    .A0(\HALL_I_M1/count_1 ), .DI1(\HALL_I_M1/speed_19_N_640_2 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_1 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2211 ), .F0(\HALL_I_M1/speed_19_N_640_1 ), 
    .Q0(\HALL_I_M1/count_1 ), .F1(\HALL_I_M1/speed_19_N_640_2 ), 
    .Q1(\HALL_I_M1/count_2 ), .FCO(\HALL_I_M1/n2212 ));
  HALL_I_M1_SLICE_7 \HALL_I_M1/SLICE_7 ( .A1(\HALL_I_M1/count_12 ), 
    .A0(\HALL_I_M1/count_11 ), .DI1(\HALL_I_M1/speed_19_N_640_12 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_11 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2216 ), 
    .F0(\HALL_I_M1/speed_19_N_640_11 ), .Q0(\HALL_I_M1/count_11 ), 
    .F1(\HALL_I_M1/speed_19_N_640_12 ), .Q1(\HALL_I_M1/count_12 ), 
    .FCO(\HALL_I_M1/n2217 ));
  HALL_I_M1_SLICE_8 \HALL_I_M1/SLICE_8 ( .A1(\HALL_I_M1/count_6 ), 
    .A0(\HALL_I_M1/count_5 ), .DI1(\HALL_I_M1/speed_19_N_640_6 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_5 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2213 ), .F0(\HALL_I_M1/speed_19_N_640_5 ), 
    .Q0(\HALL_I_M1/count_5 ), .F1(\HALL_I_M1/speed_19_N_640_6 ), 
    .Q1(\HALL_I_M1/count_6 ), .FCO(\HALL_I_M1/n2214 ));
  HALL_I_M1_SLICE_9 \HALL_I_M1/SLICE_9 ( .A1(\HALL_I_M1/count_10 ), 
    .A0(\HALL_I_M1/count_9 ), .DI1(\HALL_I_M1/speed_19_N_640_10 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_9 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2215 ), .F0(\HALL_I_M1/speed_19_N_640_9 ), 
    .Q0(\HALL_I_M1/count_9 ), .F1(\HALL_I_M1/speed_19_N_640_10 ), 
    .Q1(\HALL_I_M1/count_10 ), .FCO(\HALL_I_M1/n2216 ));
  HALL_I_M1_SLICE_10 \HALL_I_M1/SLICE_10 ( .A1(\HALL_I_M1/count_4 ), 
    .A0(\HALL_I_M1/count_3 ), .DI1(\HALL_I_M1/speed_19_N_640_4 ), 
    .DI0(\HALL_I_M1/speed_19_N_640_3 ), .LSR(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M1/n2212 ), .F0(\HALL_I_M1/speed_19_N_640_3 ), 
    .Q0(\HALL_I_M1/count_3 ), .F1(\HALL_I_M1/speed_19_N_640_4 ), 
    .Q1(\HALL_I_M1/count_4 ), .FCO(\HALL_I_M1/n2213 ));
  HALL_I_M4_SLICE_11 \HALL_I_M4/SLICE_11 ( .A0(\HALL_I_M4/count_19 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_19 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2250 ), 
    .F0(\HALL_I_M4/speed_19_N_640_19 ), .Q0(\HALL_I_M4/count_19 ));
  HALL_I_M4_SLICE_12 \HALL_I_M4/SLICE_12 ( .A1(\HALL_I_M4/count_18 ), 
    .A0(\HALL_I_M4/count_17 ), .DI1(\HALL_I_M4/speed_19_N_640_18 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_17 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2249 ), 
    .F0(\HALL_I_M4/speed_19_N_640_17 ), .Q0(\HALL_I_M4/count_17 ), 
    .F1(\HALL_I_M4/speed_19_N_640_18 ), .Q1(\HALL_I_M4/count_18 ), 
    .FCO(\HALL_I_M4/n2250 ));
  HALL_I_M4_SLICE_13 \HALL_I_M4/SLICE_13 ( .A1(\HALL_I_M4/count_16 ), 
    .A0(\HALL_I_M4/count_15 ), .DI1(\HALL_I_M4/speed_19_N_640_16 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_15 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2248 ), 
    .F0(\HALL_I_M4/speed_19_N_640_15 ), .Q0(\HALL_I_M4/count_15 ), 
    .F1(\HALL_I_M4/speed_19_N_640_16 ), .Q1(\HALL_I_M4/count_16 ), 
    .FCO(\HALL_I_M4/n2249 ));
  HALL_I_M4_SLICE_14 \HALL_I_M4/SLICE_14 ( .A1(\HALL_I_M4/count_14 ), 
    .A0(\HALL_I_M4/count_13 ), .DI1(\HALL_I_M4/speed_19_N_640_14 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_13 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2247 ), 
    .F0(\HALL_I_M4/speed_19_N_640_13 ), .Q0(\HALL_I_M4/count_13 ), 
    .F1(\HALL_I_M4/speed_19_N_640_14 ), .Q1(\HALL_I_M4/count_14 ), 
    .FCO(\HALL_I_M4/n2248 ));
  HALL_I_M4_SLICE_15 \HALL_I_M4/SLICE_15 ( .A1(\HALL_I_M4/count_12 ), 
    .A0(\HALL_I_M4/count_11 ), .DI1(\HALL_I_M4/speed_19_N_640_12 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_11 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2246 ), 
    .F0(\HALL_I_M4/speed_19_N_640_11 ), .Q0(\HALL_I_M4/count_11 ), 
    .F1(\HALL_I_M4/speed_19_N_640_12 ), .Q1(\HALL_I_M4/count_12 ), 
    .FCO(\HALL_I_M4/n2247 ));
  HALL_I_M4_SLICE_16 \HALL_I_M4/SLICE_16 ( .A1(\HALL_I_M4/count_10 ), 
    .A0(\HALL_I_M4/count_9 ), .DI1(\HALL_I_M4/speed_19_N_640_10 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_9 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2245 ), .F0(\HALL_I_M4/speed_19_N_640_9 ), 
    .Q0(\HALL_I_M4/count_9 ), .F1(\HALL_I_M4/speed_19_N_640_10 ), 
    .Q1(\HALL_I_M4/count_10 ), .FCO(\HALL_I_M4/n2246 ));
  HALL_I_M4_SLICE_17 \HALL_I_M4/SLICE_17 ( .A1(\HALL_I_M4/count_8 ), 
    .A0(\HALL_I_M4/count_7 ), .DI1(\HALL_I_M4/speed_19_N_640_8 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_7 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2244 ), .F0(\HALL_I_M4/speed_19_N_640_7 ), 
    .Q0(\HALL_I_M4/count_7 ), .F1(\HALL_I_M4/speed_19_N_640_8 ), 
    .Q1(\HALL_I_M4/count_8 ), .FCO(\HALL_I_M4/n2245 ));
  HALL_I_M4_SLICE_18 \HALL_I_M4/SLICE_18 ( .A1(\HALL_I_M4/count_6 ), 
    .A0(\HALL_I_M4/count_5 ), .DI1(\HALL_I_M4/speed_19_N_640_6 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_5 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2243 ), .F0(\HALL_I_M4/speed_19_N_640_5 ), 
    .Q0(\HALL_I_M4/count_5 ), .F1(\HALL_I_M4/speed_19_N_640_6 ), 
    .Q1(\HALL_I_M4/count_6 ), .FCO(\HALL_I_M4/n2244 ));
  HALL_I_M4_SLICE_19 \HALL_I_M4/SLICE_19 ( .A1(\HALL_I_M4/count_4 ), 
    .A0(\HALL_I_M4/count_3 ), .DI1(\HALL_I_M4/speed_19_N_640_4 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_3 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2242 ), .F0(\HALL_I_M4/speed_19_N_640_3 ), 
    .Q0(\HALL_I_M4/count_3 ), .F1(\HALL_I_M4/speed_19_N_640_4 ), 
    .Q1(\HALL_I_M4/count_4 ), .FCO(\HALL_I_M4/n2243 ));
  HALL_I_M4_SLICE_20 \HALL_I_M4/SLICE_20 ( .A1(\HALL_I_M4/count_2 ), 
    .A0(\HALL_I_M4/count_1 ), .DI1(\HALL_I_M4/speed_19_N_640_2 ), 
    .DI0(\HALL_I_M4/speed_19_N_640_1 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M4/n2241 ), .F0(\HALL_I_M4/speed_19_N_640_1 ), 
    .Q0(\HALL_I_M4/count_1 ), .F1(\HALL_I_M4/speed_19_N_640_2 ), 
    .Q1(\HALL_I_M4/count_2 ), .FCO(\HALL_I_M4/n2242 ));
  HALL_I_M4_SLICE_21 \HALL_I_M4/SLICE_21 ( .A1(\HALL_I_M4/count_0 ), 
    .DI1(\HALL_I_M4/speed_19_N_640_0 ), .LSR(\HALL_I_M4/clk_1mhz_enable_7 ), 
    .CLK(clk_1mhz), .F1(\HALL_I_M4/speed_19_N_640_0 ), 
    .Q1(\HALL_I_M4/count_0 ), .FCO(\HALL_I_M4/n2241 ));
  HALL_I_M2_SLICE_22 \HALL_I_M2/SLICE_22 ( .A1(\HALL_I_M2/count_0 ), 
    .DI1(\HALL_I_M2/speed_19_N_640_0 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .F1(\HALL_I_M2/speed_19_N_640_0 ), 
    .Q1(\HALL_I_M2/count_0 ), .FCO(\HALL_I_M2/n2221 ));
  HALL_I_M2_SLICE_23 \HALL_I_M2/SLICE_23 ( .A1(\HALL_I_M2/count_10 ), 
    .A0(\HALL_I_M2/count_9 ), .DI1(\HALL_I_M2/speed_19_N_640_10 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_9 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2225 ), .F0(\HALL_I_M2/speed_19_N_640_9 ), 
    .Q0(\HALL_I_M2/count_9 ), .F1(\HALL_I_M2/speed_19_N_640_10 ), 
    .Q1(\HALL_I_M2/count_10 ), .FCO(\HALL_I_M2/n2226 ));
  HALL_I_M2_SLICE_24 \HALL_I_M2/SLICE_24 ( .A1(\HALL_I_M2/count_8 ), 
    .A0(\HALL_I_M2/count_7 ), .DI1(\HALL_I_M2/speed_19_N_640_8 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_7 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2224 ), .F0(\HALL_I_M2/speed_19_N_640_7 ), 
    .Q0(\HALL_I_M2/count_7 ), .F1(\HALL_I_M2/speed_19_N_640_8 ), 
    .Q1(\HALL_I_M2/count_8 ), .FCO(\HALL_I_M2/n2225 ));
  HALL_I_M2_SLICE_25 \HALL_I_M2/SLICE_25 ( .A1(\HALL_I_M2/count_6 ), 
    .A0(\HALL_I_M2/count_5 ), .DI1(\HALL_I_M2/speed_19_N_640_6 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_5 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2223 ), .F0(\HALL_I_M2/speed_19_N_640_5 ), 
    .Q0(\HALL_I_M2/count_5 ), .F1(\HALL_I_M2/speed_19_N_640_6 ), 
    .Q1(\HALL_I_M2/count_6 ), .FCO(\HALL_I_M2/n2224 ));
  HALL_I_M2_SLICE_26 \HALL_I_M2/SLICE_26 ( .A1(\HALL_I_M2/count_4 ), 
    .A0(\HALL_I_M2/count_3 ), .DI1(\HALL_I_M2/speed_19_N_640_4 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_3 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2222 ), .F0(\HALL_I_M2/speed_19_N_640_3 ), 
    .Q0(\HALL_I_M2/count_3 ), .F1(\HALL_I_M2/speed_19_N_640_4 ), 
    .Q1(\HALL_I_M2/count_4 ), .FCO(\HALL_I_M2/n2223 ));
  HALL_I_M2_SLICE_27 \HALL_I_M2/SLICE_27 ( .A1(\HALL_I_M2/count_2 ), 
    .A0(\HALL_I_M2/count_1 ), .DI1(\HALL_I_M2/speed_19_N_640_2 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_1 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2221 ), .F0(\HALL_I_M2/speed_19_N_640_1 ), 
    .Q0(\HALL_I_M2/count_1 ), .F1(\HALL_I_M2/speed_19_N_640_2 ), 
    .Q1(\HALL_I_M2/count_2 ), .FCO(\HALL_I_M2/n2222 ));
  HALL_I_M2_SLICE_28 \HALL_I_M2/SLICE_28 ( .A0(\HALL_I_M2/count_19 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_19 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2230 ), 
    .F0(\HALL_I_M2/speed_19_N_640_19 ), .Q0(\HALL_I_M2/count_19 ));
  HALL_I_M2_SLICE_29 \HALL_I_M2/SLICE_29 ( .A1(\HALL_I_M2/count_18 ), 
    .A0(\HALL_I_M2/count_17 ), .DI1(\HALL_I_M2/speed_19_N_640_18 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_17 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2229 ), 
    .F0(\HALL_I_M2/speed_19_N_640_17 ), .Q0(\HALL_I_M2/count_17 ), 
    .F1(\HALL_I_M2/speed_19_N_640_18 ), .Q1(\HALL_I_M2/count_18 ), 
    .FCO(\HALL_I_M2/n2230 ));
  HALL_I_M2_SLICE_30 \HALL_I_M2/SLICE_30 ( .A1(\HALL_I_M2/count_16 ), 
    .A0(\HALL_I_M2/count_15 ), .DI1(\HALL_I_M2/speed_19_N_640_16 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_15 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2228 ), 
    .F0(\HALL_I_M2/speed_19_N_640_15 ), .Q0(\HALL_I_M2/count_15 ), 
    .F1(\HALL_I_M2/speed_19_N_640_16 ), .Q1(\HALL_I_M2/count_16 ), 
    .FCO(\HALL_I_M2/n2229 ));
  HALL_I_M2_SLICE_31 \HALL_I_M2/SLICE_31 ( .A1(\HALL_I_M2/count_14 ), 
    .A0(\HALL_I_M2/count_13 ), .DI1(\HALL_I_M2/speed_19_N_640_14 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_13 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2227 ), 
    .F0(\HALL_I_M2/speed_19_N_640_13 ), .Q0(\HALL_I_M2/count_13 ), 
    .F1(\HALL_I_M2/speed_19_N_640_14 ), .Q1(\HALL_I_M2/count_14 ), 
    .FCO(\HALL_I_M2/n2228 ));
  HALL_I_M2_SLICE_32 \HALL_I_M2/SLICE_32 ( .A1(\HALL_I_M2/count_12 ), 
    .A0(\HALL_I_M2/count_11 ), .DI1(\HALL_I_M2/speed_19_N_640_12 ), 
    .DI0(\HALL_I_M2/speed_19_N_640_11 ), .LSR(\HALL_I_M2/n1485 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M2/n2226 ), 
    .F0(\HALL_I_M2/speed_19_N_640_11 ), .Q0(\HALL_I_M2/count_11 ), 
    .F1(\HALL_I_M2/speed_19_N_640_12 ), .Q1(\HALL_I_M2/count_12 ), 
    .FCO(\HALL_I_M2/n2227 ));
  HALL_I_M3_SLICE_33 \HALL_I_M3/SLICE_33 ( .A0(\HALL_I_M3/count_19 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_19 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2240 ), 
    .F0(\HALL_I_M3/speed_19_N_640_19 ), .Q0(\HALL_I_M3/count_19 ));
  HALL_I_M3_SLICE_34 \HALL_I_M3/SLICE_34 ( .A1(\HALL_I_M3/count_18 ), 
    .A0(\HALL_I_M3/count_17 ), .DI1(\HALL_I_M3/speed_19_N_640_18 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_17 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2239 ), 
    .F0(\HALL_I_M3/speed_19_N_640_17 ), .Q0(\HALL_I_M3/count_17 ), 
    .F1(\HALL_I_M3/speed_19_N_640_18 ), .Q1(\HALL_I_M3/count_18 ), 
    .FCO(\HALL_I_M3/n2240 ));
  HALL_I_M3_SLICE_35 \HALL_I_M3/SLICE_35 ( .A1(\HALL_I_M3/count_16 ), 
    .A0(\HALL_I_M3/count_15 ), .DI1(\HALL_I_M3/speed_19_N_640_16 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_15 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2238 ), 
    .F0(\HALL_I_M3/speed_19_N_640_15 ), .Q0(\HALL_I_M3/count_15 ), 
    .F1(\HALL_I_M3/speed_19_N_640_16 ), .Q1(\HALL_I_M3/count_16 ), 
    .FCO(\HALL_I_M3/n2239 ));
  HALL_I_M3_SLICE_36 \HALL_I_M3/SLICE_36 ( .A1(\HALL_I_M3/count_14 ), 
    .A0(\HALL_I_M3/count_13 ), .DI1(\HALL_I_M3/speed_19_N_640_14 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_13 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2237 ), 
    .F0(\HALL_I_M3/speed_19_N_640_13 ), .Q0(\HALL_I_M3/count_13 ), 
    .F1(\HALL_I_M3/speed_19_N_640_14 ), .Q1(\HALL_I_M3/count_14 ), 
    .FCO(\HALL_I_M3/n2238 ));
  HALL_I_M3_SLICE_37 \HALL_I_M3/SLICE_37 ( .A1(\HALL_I_M3/count_12 ), 
    .A0(\HALL_I_M3/count_11 ), .DI1(\HALL_I_M3/speed_19_N_640_12 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_11 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2236 ), 
    .F0(\HALL_I_M3/speed_19_N_640_11 ), .Q0(\HALL_I_M3/count_11 ), 
    .F1(\HALL_I_M3/speed_19_N_640_12 ), .Q1(\HALL_I_M3/count_12 ), 
    .FCO(\HALL_I_M3/n2237 ));
  HALL_I_M3_SLICE_38 \HALL_I_M3/SLICE_38 ( .A1(\HALL_I_M3/count_10 ), 
    .A0(\HALL_I_M3/count_9 ), .DI1(\HALL_I_M3/speed_19_N_640_10 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_9 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2235 ), .F0(\HALL_I_M3/speed_19_N_640_9 ), 
    .Q0(\HALL_I_M3/count_9 ), .F1(\HALL_I_M3/speed_19_N_640_10 ), 
    .Q1(\HALL_I_M3/count_10 ), .FCO(\HALL_I_M3/n2236 ));
  HALL_I_M3_SLICE_39 \HALL_I_M3/SLICE_39 ( .A1(\HALL_I_M3/count_8 ), 
    .A0(\HALL_I_M3/count_7 ), .DI1(\HALL_I_M3/speed_19_N_640_8 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_7 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2234 ), .F0(\HALL_I_M3/speed_19_N_640_7 ), 
    .Q0(\HALL_I_M3/count_7 ), .F1(\HALL_I_M3/speed_19_N_640_8 ), 
    .Q1(\HALL_I_M3/count_8 ), .FCO(\HALL_I_M3/n2235 ));
  HALL_I_M3_SLICE_40 \HALL_I_M3/SLICE_40 ( .A1(\HALL_I_M3/count_6 ), 
    .A0(\HALL_I_M3/count_5 ), .DI1(\HALL_I_M3/speed_19_N_640_6 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_5 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2233 ), .F0(\HALL_I_M3/speed_19_N_640_5 ), 
    .Q0(\HALL_I_M3/count_5 ), .F1(\HALL_I_M3/speed_19_N_640_6 ), 
    .Q1(\HALL_I_M3/count_6 ), .FCO(\HALL_I_M3/n2234 ));
  HALL_I_M3_SLICE_41 \HALL_I_M3/SLICE_41 ( .A1(\HALL_I_M3/count_4 ), 
    .A0(\HALL_I_M3/count_3 ), .DI1(\HALL_I_M3/speed_19_N_640_4 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_3 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2232 ), .F0(\HALL_I_M3/speed_19_N_640_3 ), 
    .Q0(\HALL_I_M3/count_3 ), .F1(\HALL_I_M3/speed_19_N_640_4 ), 
    .Q1(\HALL_I_M3/count_4 ), .FCO(\HALL_I_M3/n2233 ));
  HALL_I_M3_SLICE_42 \HALL_I_M3/SLICE_42 ( .A1(\HALL_I_M3/count_2 ), 
    .A0(\HALL_I_M3/count_1 ), .DI1(\HALL_I_M3/speed_19_N_640_2 ), 
    .DI0(\HALL_I_M3/speed_19_N_640_1 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .FCI(\HALL_I_M3/n2231 ), .F0(\HALL_I_M3/speed_19_N_640_1 ), 
    .Q0(\HALL_I_M3/count_1 ), .F1(\HALL_I_M3/speed_19_N_640_2 ), 
    .Q1(\HALL_I_M3/count_2 ), .FCO(\HALL_I_M3/n2232 ));
  HALL_I_M3_SLICE_43 \HALL_I_M3/SLICE_43 ( .A1(\HALL_I_M3/count_0 ), 
    .DI1(\HALL_I_M3/speed_19_N_640_0 ), .LSR(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .F1(\HALL_I_M3/speed_19_N_640_0 ), 
    .Q1(\HALL_I_M3/count_0 ), .FCO(\HALL_I_M3/n2231 ));
  PWM_I_M1_SLICE_44 \PWM_I_M1/SLICE_44 ( .A0(\PWM_I_M1/cnt_9 ), 
    .DI0(\PWM_I_M1/n46 ), .LSR(\PWM_I_M1/n1494 ), .CLK(pwm_clk), 
    .FCI(\PWM_I_M1/n2255 ), .F0(\PWM_I_M1/n46 ), .Q0(\PWM_I_M1/cnt_9 ));
  PWM_I_M1_SLICE_45 \PWM_I_M1/SLICE_45 ( .A1(\PWM_I_M1/cnt_8 ), 
    .A0(\PWM_I_M1/cnt_7 ), .DI1(\PWM_I_M1/n47 ), .DI0(\PWM_I_M1/n48 ), 
    .LSR(\PWM_I_M1/n1494 ), .CLK(pwm_clk), .FCI(\PWM_I_M1/n2254 ), 
    .F0(\PWM_I_M1/n48 ), .Q0(\PWM_I_M1/cnt_7 ), .F1(\PWM_I_M1/n47 ), 
    .Q1(\PWM_I_M1/cnt_8 ), .FCO(\PWM_I_M1/n2255 ));
  PWM_I_M1_SLICE_46 \PWM_I_M1/SLICE_46 ( .A1(\PWM_I_M1/cnt_6 ), 
    .A0(\PWM_I_M1/cnt_5 ), .DI1(\PWM_I_M1/n49 ), .DI0(\PWM_I_M1/n50 ), 
    .LSR(\PWM_I_M1/n1494 ), .CLK(pwm_clk), .FCI(\PWM_I_M1/n2253 ), 
    .F0(\PWM_I_M1/n50 ), .Q0(\PWM_I_M1/cnt_5 ), .F1(\PWM_I_M1/n49 ), 
    .Q1(\PWM_I_M1/cnt_6 ), .FCO(\PWM_I_M1/n2254 ));
  PWM_I_M1_SLICE_47 \PWM_I_M1/SLICE_47 ( .A1(\PWM_I_M1/cnt_4 ), 
    .A0(\PWM_I_M1/cnt_3 ), .DI1(\PWM_I_M1/n51 ), .DI0(\PWM_I_M1/n52 ), 
    .LSR(\PWM_I_M1/n1494 ), .CLK(pwm_clk), .FCI(\PWM_I_M1/n2252 ), 
    .F0(\PWM_I_M1/n52 ), .Q0(\PWM_I_M1/cnt_3 ), .F1(\PWM_I_M1/n51 ), 
    .Q1(\PWM_I_M1/cnt_4 ), .FCO(\PWM_I_M1/n2253 ));
  PWM_I_M1_SLICE_48 \PWM_I_M1/SLICE_48 ( .A1(\PWM_I_M1/cnt_2 ), 
    .A0(\PWM_I_M1/cnt_1 ), .DI1(\PWM_I_M1/n53 ), .DI0(\PWM_I_M1/n54 ), 
    .LSR(\PWM_I_M1/n1494 ), .CLK(pwm_clk), .FCI(\PWM_I_M1/n2251 ), 
    .F0(\PWM_I_M1/n54 ), .Q0(\PWM_I_M1/cnt_1 ), .F1(\PWM_I_M1/n53 ), 
    .Q1(\PWM_I_M1/cnt_2 ), .FCO(\PWM_I_M1/n2252 ));
  PWM_I_M1_SLICE_49 \PWM_I_M1/SLICE_49 ( .A1(\PWM_I_M1/cnt_0 ), 
    .DI1(\PWM_I_M1/n55 ), .LSR(\PWM_I_M1/n1494 ), .CLK(pwm_clk), 
    .F1(\PWM_I_M1/n55 ), .Q1(\PWM_I_M1/cnt_0 ), .FCO(\PWM_I_M1/n2251 ));
  CLKDIV_I_SLICE_50 \CLKDIV_I/SLICE_50 ( .D1(\CLKDIV_I/count_0 ), 
    .A1(\CLKDIV_I/count_1 ), .A0(\CLKDIV_I/count_0 ), .DI1(\CLKDIV_I/n29 ), 
    .DI0(\CLKDIV_I/n30 ), .LSR(\CLKDIV_I/n1495 ), .CLK(clkout_c), 
    .F0(\CLKDIV_I/n30 ), .Q0(\CLKDIV_I/count_0 ), .F1(\CLKDIV_I/n29 ), 
    .Q1(\CLKDIV_I/count_1 ));
  CLKDIV_I_SLICE_51 \CLKDIV_I/SLICE_51 ( .D1(\CLKDIV_I/count_0 ), 
    .C1(\CLKDIV_I/count_2 ), .B1(\CLKDIV_I/count_1 ), .A1(\CLKDIV_I/count_3 ), 
    .D0(\CLKDIV_I/count_0 ), .B0(\CLKDIV_I/count_1 ), .A0(\CLKDIV_I/count_2 ), 
    .DI1(\CLKDIV_I/n27 ), .DI0(\CLKDIV_I/n28 ), .LSR(\CLKDIV_I/n1495 ), 
    .CLK(clkout_c), .F0(\CLKDIV_I/n28 ), .Q0(\CLKDIV_I/count_2 ), 
    .F1(\CLKDIV_I/n27 ), .Q1(\CLKDIV_I/count_3 ));
  CLKDIV_I_SLICE_52 \CLKDIV_I/SLICE_52 ( .D1(\CLKDIV_I/count_0 ), 
    .B1(\CLKDIV_I/count_1 ), .D0(\CLKDIV_I/count_2 ), .C0(\CLKDIV_I/n2947 ), 
    .B0(\CLKDIV_I/count_4 ), .A0(\CLKDIV_I/count_3 ), .DI0(\CLKDIV_I/n26 ), 
    .LSR(\CLKDIV_I/n1495 ), .CLK(clkout_c), .F0(\CLKDIV_I/n26 ), 
    .Q0(\CLKDIV_I/count_4 ), .F1(\CLKDIV_I/n2947 ));
  CLKDIV_I_SLICE_53 \CLKDIV_I/SLICE_53 ( .D1(\CLKDIV_I/count_2 ), 
    .C1(\CLKDIV_I/n6 ), .B1(\CLKDIV_I/count_1 ), .A1(\CLKDIV_I/count_4 ), 
    .B0(\CLKDIV_I/n1495 ), .A0(\CLKDIV_I/mhz_buf ), 
    .DI0(\CLKDIV_I/mhz_buf_N_14 ), .M1(\CLKDIV_I/mhz_buf ), .CLK(clkout_c), 
    .F0(\CLKDIV_I/mhz_buf_N_14 ), .Q0(\CLKDIV_I/mhz_buf ), 
    .F1(\CLKDIV_I/n1495 ), .Q1(clk_1mhz));
  CLKDIV_I_SLICE_54 \CLKDIV_I/SLICE_54 ( .A0(\CLKDIV_I/pwm_buf ), 
    .DI0(\CLKDIV_I/pwm_buf_N_13 ), .CLK(clkout_c), 
    .F0(\CLKDIV_I/pwm_buf_N_13 ), .Q0(\CLKDIV_I/pwm_buf ));
  COM_I_M1_SLICE_71 \COM_I_M1/SLICE_71 ( .D0(PWM_m1), .C0(hall1_old), 
    .A0(hall3_old), .DI0(\COM_I_M1/MospairA_1_N_699_0 ), .CLK(clkout_c), 
    .F0(\COM_I_M1/MospairA_1_N_699_0 ), .Q0(MA_m1_c_0));
  SLICE_73 SLICE_73( .C1(hall3_old_adj_737), .A1(hall1_old_adj_735), 
    .DI1(\COM_I_M2/MospairA_1_N_699_1 ), .DI0(n3029), .LSR(LED2_c), 
    .CLK(clkout_c), .F0(n3029), .Q0(MA_m2_c_0), 
    .F1(\COM_I_M2/MospairA_1_N_699_1 ), .Q1(MA_m2_c_1));
  COM_I_M3_SLICE_74 \COM_I_M3/SLICE_74 ( .D1(hall3_old_adj_740), 
    .B1(hall1_old_adj_738), .DI1(\COM_I_M3/MospairA_1_N_699_1 ), 
    .DI0(\n3029\001/BUF1 ), .LSR(LED3_c), .CLK(clkout_c), 
    .F0(\n3029\001/BUF1 ), .Q0(MA_m3_c_0), .F1(\COM_I_M3/MospairA_1_N_699_1 ), 
    .Q1(MA_m3_c_1));
  COM_I_M4_SLICE_75 \COM_I_M4/SLICE_75 ( .C1(hall3_old_adj_743), 
    .B1(hall1_old_adj_741), .DI1(\COM_I_M4/MospairA_1_N_699_1 ), 
    .DI0(\n3029\000/BUF1 ), .LSR(LED4_c), .CLK(clkout_c), 
    .F0(\n3029\000/BUF1 ), .Q0(MA_m4_c_0), .F1(\COM_I_M4/MospairA_1_N_699_1 ), 
    .Q1(MA_m4_c_1));
  COM_I_M1_SLICE_76 \COM_I_M1/SLICE_76 ( .C0(PWM_m1), .B0(hall2_old), 
    .A0(hall1_old), .DI0(\COM_I_M1/MospairB_1_N_703_0 ), .CLK(clkout_c), 
    .F0(\COM_I_M1/MospairB_1_N_703_0 ), .Q0(MB_m1_c_0));
  COM_I_M1_SLICE_77 \COM_I_M1/SLICE_77 ( .A0(hall2_old), .DI0(\COM_I_M1/n6 ), 
    .LSR(hall1_old), .CLK(clkout_c), .F0(\COM_I_M1/n6 ), .Q0(MB_m1_c_1));
  COM_I_M2_SLICE_78 \COM_I_M2/SLICE_78 ( .D0(hall2_old_adj_736), 
    .A0(hall1_old_adj_735), .DI0(\COM_I_M2/MospairB_1_N_703_1 ), .LSR(LED2_c), 
    .CLK(clkout_c), .F0(\COM_I_M2/MospairB_1_N_703_1 ), .Q0(MB_m2_c_1));
  COM_I_M3_SLICE_79 \COM_I_M3/SLICE_79 ( .C0(hall1_old_adj_738), 
    .A0(hall2_old_adj_739), .DI0(\COM_I_M3/MospairB_1_N_703_1 ), .LSR(LED3_c), 
    .CLK(clkout_c), .F0(\COM_I_M3/MospairB_1_N_703_1 ), .Q0(MB_m3_c_1));
  COM_I_M4_SLICE_80 \COM_I_M4/SLICE_80 ( .D0(hall1_old_adj_741), 
    .B0(hall2_old_adj_742), .DI0(\COM_I_M4/MospairB_1_N_703_1 ), .LSR(LED4_c), 
    .CLK(clkout_c), .F0(\COM_I_M4/MospairB_1_N_703_1 ), .Q0(MB_m4_c_1));
  COM_I_M1_SLICE_81 \COM_I_M1/SLICE_81 ( .D0(PWM_m1), .C0(hall2_old), 
    .A0(hall3_old), .DI0(\COM_I_M1/MospairC_1_N_707_0 ), .CLK(clkout_c), 
    .F0(\COM_I_M1/MospairC_1_N_707_0 ), .Q0(MC_m1_c_0));
  COM_I_M1_SLICE_82 \COM_I_M1/SLICE_82 ( .A0(hall3_old), .DI0(\COM_I_M1/n2 ), 
    .LSR(hall2_old), .CLK(clkout_c), .F0(\COM_I_M1/n2 ), .Q0(MC_m1_c_1));
  COM_I_M2_SLICE_83 \COM_I_M2/SLICE_83 ( .D0(hall2_old_adj_736), 
    .B0(hall3_old_adj_737), .DI0(\COM_I_M2/MospairC_1_N_707_1 ), .LSR(LED2_c), 
    .CLK(clkout_c), .F0(\COM_I_M2/MospairC_1_N_707_1 ), .Q0(MC_m2_c_1));
  COM_I_M3_SLICE_84 \COM_I_M3/SLICE_84 ( .D0(hall3_old_adj_740), 
    .B0(hall2_old_adj_739), .DI0(\COM_I_M3/MospairC_1_N_707_1 ), .LSR(LED3_c), 
    .CLK(clkout_c), .F0(\COM_I_M3/MospairC_1_N_707_1 ), .Q0(MC_m3_c_1));
  COM_I_M4_SLICE_85 \COM_I_M4/SLICE_85 ( .D0(hall2_old_adj_742), 
    .C0(hall3_old_adj_743), .DI0(\COM_I_M4/MospairC_1_N_707_1 ), .LSR(LED4_c), 
    .CLK(clkout_c), .F0(\COM_I_M4/MospairC_1_N_707_1 ), .Q0(MC_m4_c_1));
  SPI_I_SLICE_86 \SPI_I/SLICE_86 ( .B1(\SPI_I/CSlatched ), .A1(\SPI_I/n3030 ), 
    .D0(\SPI_I/send_buffer_1 ), .C0(\SPI_I/n2949 ), .B0(\SPI_I/n2950 ), 
    .A0(\SPI_I/MISOb ), .DI0(\SPI_I/MISOb_N_590 ), .M1(\SPI_I/CSlatched ), 
    .CLK(clkout_c), .F0(\SPI_I/MISOb_N_590 ), .Q0(MISO_N_569), 
    .F1(\SPI_I/n2949 ), .Q1(\SPI_I/n3030 ));
  PWM_I_M1_SLICE_87 \PWM_I_M1/SLICE_87 ( .D1(\PWM_I_M1/cnt_5 ), 
    .C1(\PWM_I_M1/cnt_7 ), .B1(\PWM_I_M1/cnt_6 ), .A1(\PWM_I_M1/cnt_8 ), 
    .D0(\PWM_I_M1/cnt_4 ), .C0(\PWM_I_M1/n2770 ), .B0(\PWM_I_M1/cnt_2 ), 
    .A0(\PWM_I_M1/cnt_3 ), .DI0(\PWM_I_M1/n2772 ), .LSR(\PWM_I_M1/cnt_9 ), 
    .CLK(pwm_clk), .F0(\PWM_I_M1/n2772 ), .Q0(PWM_m1), .F1(\PWM_I_M1/n2770 ));
  SPI_I_SLICE_90 \SPI_I/SLICE_90 ( .D1(\SPI_I/SCKlatched ), 
    .A1(\SPI_I/SCKold ), .C0(\SPI_I/CSlatched ), .DI0(\SPI_I/n2948 ), 
    .M1(SCK_c), .CLK(clkout_c), .F0(\SPI_I/n2948 ), .Q0(\SPI_I/MISO_N_570 ), 
    .F1(\SPI_I/n2950 ), .Q1(\SPI_I/SCKlatched ));
  SPI_I_SLICE_91 \SPI_I/SLICE_91 ( .D1(\SPI_I/send_buffer_1 ), 
    .C1(\SPI_I/CSold ), .B1(\SPI_I/MISOb ), .A1(\SPI_I/CSlatched ), 
    .D0(\SPI_I/MISOb ), .C0(\SPI_I/CSold ), .A0(\SPI_I/CSlatched ), 
    .DI0(\SPI_I/MISOb_N_585 ), .M0(\SPI_I/n2950 ), .CLK(clkout_c), 
    .OFX0(\SPI_I/MISOb_N_585 ), .Q0(\SPI_I/MISOb ));
  SPI_I_SLICE_139 \SPI_I/SLICE_139 ( .D1(\SPI_I/send_buffer_1 ), 
    .C1(\SPI_I/CSold ), .B1(\SPI_I/CSlatched ), .A1(\SPI_I/send_buffer_2 ), 
    .C0(\SPI_I/CSold ), .B0(\SPI_I/CSlatched ), .A0(\SPI_I/send_buffer_1 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_1 ), .M0(\SPI_I/n2950 ), .CLK(clkout_c), 
    .OFX0(\SPI_I/send_buffer_95_N_291_1 ), .Q0(\SPI_I/send_buffer_1 ));
  SPI_I_SLICE_140 \SPI_I/SLICE_140 ( .D1(\SPI_I/CSold ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/send_buffer_3 ), 
    .A1(\SPI_I/send_buffer_2 ), .D0(\SPI_I/CSold ), .C0(\SPI_I/CSlatched ), 
    .A0(\SPI_I/send_buffer_2 ), .DI0(\SPI_I/send_buffer_95_N_291_2 ), 
    .M0(\SPI_I/n2950 ), .CLK(clkout_c), .OFX0(\SPI_I/send_buffer_95_N_291_2 ), 
    .Q0(\SPI_I/send_buffer_2 ));
  SPI_I_SLICE_141 \SPI_I/SLICE_141 ( .D1(\SPI_I/CSlatched ), .C1(\SPI_I/n99 ), 
    .B1(\SPI_I/n100 ), .A1(\SPI_I/n2950 ), .D0(\SPI_I/CSlatched ), 
    .C0(\SPI_I/n2950 ), .B0(\SPI_I/n101 ), .A0(\SPI_I/n100 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_4 ), .DI0(\SPI_I/send_buffer_95_N_291_3 ), 
    .CLK(clkout_c), .F0(\SPI_I/send_buffer_95_N_291_3 ), 
    .Q0(\SPI_I/send_buffer_3 ), .F1(\SPI_I/send_buffer_95_N_291_4 ), 
    .Q1(\SPI_I/send_buffer_4 ));
  SPI_I_SLICE_142 \SPI_I/SLICE_142 ( .D1(\SPI_I/n98 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n97 ), .A1(\SPI_I/n2950 ), .D0(\SPI_I/n98 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n99 ), .A0(\SPI_I/n2950 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_6 ), .DI0(\SPI_I/send_buffer_95_N_291_5 ), 
    .CLK(clkout_c), .F0(\SPI_I/send_buffer_95_N_291_5 ), 
    .Q0(\SPI_I/send_buffer_5 ), .F1(\SPI_I/send_buffer_95_N_291_6 ), 
    .Q1(\SPI_I/send_buffer_6 ));
  SPI_I_SLICE_143 \SPI_I/SLICE_143 ( .D1(\SPI_I/n2950 ), .C1(\SPI_I/n96 ), 
    .B1(\SPI_I/n95 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n2950 ), 
    .C0(\SPI_I/n97 ), .B0(\SPI_I/n96 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_8 ), .DI0(\SPI_I/send_buffer_95_N_291_7 ), 
    .CLK(clkout_c), .F0(\SPI_I/send_buffer_95_N_291_7 ), 
    .Q0(\SPI_I/send_buffer_7 ), .F1(\SPI_I/send_buffer_95_N_291_8 ), 
    .Q1(\SPI_I/send_buffer_8 ));
  SPI_I_SLICE_144 \SPI_I/SLICE_144 ( .D1(\SPI_I/n94 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n93 ), .D0(\SPI_I/n94 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n95 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_10 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_9 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_9 ), .Q0(\SPI_I/send_buffer_9 ), 
    .F1(\SPI_I/send_buffer_95_N_291_10 ), .Q1(\SPI_I/send_buffer_10 ));
  SPI_I_SLICE_145 \SPI_I/SLICE_145 ( .D1(\SPI_I/n91 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n92 ), .A1(\SPI_I/n2950 ), .D0(\SPI_I/n92 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n93 ), .A0(\SPI_I/n2950 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_12 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_11 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_11 ), .Q0(\SPI_I/send_buffer_11 ), 
    .F1(\SPI_I/send_buffer_95_N_291_12 ), .Q1(\SPI_I/send_buffer_12 ));
  SPI_I_SLICE_146 \SPI_I/SLICE_146 ( .D1(\SPI_I/n90 ), .C1(\SPI_I/n2950 ), 
    .B1(\SPI_I/n89 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n90 ), 
    .C0(\SPI_I/n2950 ), .B0(\SPI_I/n91 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_14 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_13 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_13 ), .Q0(\SPI_I/send_buffer_13 ), 
    .F1(\SPI_I/send_buffer_95_N_291_14 ), .Q1(\SPI_I/send_buffer_14 ));
  SPI_I_SLICE_147 \SPI_I/SLICE_147 ( .D1(\SPI_I/n2950 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n88 ), .A1(\SPI_I/n87 ), 
    .D0(\SPI_I/n2950 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n88 ), 
    .A0(\SPI_I/n89 ), .DI1(\SPI_I/send_buffer_95_N_291_16 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_15 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_15 ), .Q0(\SPI_I/send_buffer_15 ), 
    .F1(\SPI_I/send_buffer_95_N_291_16 ), .Q1(\SPI_I/send_buffer_16 ));
  SPI_I_SLICE_148 \SPI_I/SLICE_148 ( .D1(\SPI_I/n85 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n86 ), .D0(\SPI_I/n87 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n86 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_18 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_17 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_17 ), .Q0(\SPI_I/send_buffer_17 ), 
    .F1(\SPI_I/send_buffer_95_N_291_18 ), .Q1(\SPI_I/send_buffer_18 ));
  SPI_I_SLICE_149 \SPI_I/SLICE_149 ( .D1(\SPI_I/n84 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n83 ), .D0(\SPI_I/n84 ), .C0(\SPI_I/n85 ), 
    .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_20 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_19 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_19 ), .Q0(\SPI_I/send_buffer_19 ), 
    .F1(\SPI_I/send_buffer_95_N_291_20 ), .Q1(\SPI_I/send_buffer_20 ));
  SPI_I_SLICE_150 \SPI_I/SLICE_150 ( .D1(\SPI_I/CSlatched ), 
    .C1(\SPI_I/n2950 ), .B1(\SPI_I/n82 ), .A1(\SPI_I/n81 ), 
    .D0(\SPI_I/CSlatched ), .C0(\SPI_I/n2950 ), .B0(\SPI_I/n82 ), 
    .A0(\SPI_I/n83 ), .DI1(\SPI_I/send_buffer_95_N_291_22 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_21 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_21 ), .Q0(\SPI_I/send_buffer_21 ), 
    .F1(\SPI_I/send_buffer_95_N_291_22 ), .Q1(\SPI_I/send_buffer_22 ));
  SPI_I_SLICE_151 \SPI_I/SLICE_151 ( .D1(\SPI_I/n80 ), .C1(\SPI_I/n79 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n80 ), 
    .C0(\SPI_I/n81 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_24 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_23 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_23 ), .Q0(\SPI_I/send_buffer_23 ), 
    .F1(\SPI_I/send_buffer_95_N_291_24 ), .Q1(\SPI_I/send_buffer_24 ));
  SPI_I_SLICE_152 \SPI_I/SLICE_152 ( .D1(\SPI_I/n78 ), .C1(\SPI_I/n1700 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n78 ), 
    .C0(\SPI_I/n79 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_26 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_25 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_25 ), .Q0(\SPI_I/send_buffer_25 ), 
    .F1(\SPI_I/send_buffer_95_N_291_26 ), .Q1(\SPI_I/send_buffer_26 ));
  SPI_I_SLICE_153 \SPI_I/SLICE_153 ( .D1(\SPI_I/n75 ), .C1(\SPI_I/n76 ), 
    .B1(\SPI_I/CSlatched ), .A1(\SPI_I/n2950 ), .D0(\SPI_I/n1700 ), 
    .C0(\SPI_I/n76 ), .B0(\SPI_I/CSlatched ), .A0(\SPI_I/n2950 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_28 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_27 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_27 ), .Q0(\SPI_I/send_buffer_27 ), 
    .F1(\SPI_I/send_buffer_95_N_291_28 ), .Q1(\SPI_I/send_buffer_28 ));
  SPI_I_SLICE_154 \SPI_I/SLICE_154 ( .D1(\SPI_I/n73 ), .C1(\SPI_I/n2950 ), 
    .B1(\SPI_I/CSlatched ), .A1(\SPI_I/n74 ), .D0(\SPI_I/n75 ), 
    .C0(\SPI_I/n2950 ), .B0(\SPI_I/CSlatched ), .A0(\SPI_I/n74 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_30 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_29 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_29 ), .Q0(\SPI_I/send_buffer_29 ), 
    .F1(\SPI_I/send_buffer_95_N_291_30 ), .Q1(\SPI_I/send_buffer_30 ));
  SPI_I_SLICE_155 \SPI_I/SLICE_155 ( .D1(\SPI_I/n71 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n72 ), .D0(\SPI_I/n73 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n72 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_32 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_31 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_31 ), .Q0(\SPI_I/send_buffer_31 ), 
    .F1(\SPI_I/send_buffer_95_N_291_32 ), .Q1(\SPI_I/send_buffer_32 ));
  SPI_I_SLICE_156 \SPI_I/SLICE_156 ( .D1(\SPI_I/n70 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n69 ), .D0(\SPI_I/n70 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n71 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_34 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_33 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_33 ), .Q0(\SPI_I/send_buffer_33 ), 
    .F1(\SPI_I/send_buffer_95_N_291_34 ), .Q1(\SPI_I/send_buffer_34 ));
  SPI_I_SLICE_157 \SPI_I/SLICE_157 ( .D1(\SPI_I/n67 ), .C1(\SPI_I/n68 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n69 ), 
    .C0(\SPI_I/n68 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_36 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_35 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_35 ), .Q0(\SPI_I/send_buffer_35 ), 
    .F1(\SPI_I/send_buffer_95_N_291_36 ), .Q1(\SPI_I/send_buffer_36 ));
  SPI_I_SLICE_158 \SPI_I/SLICE_158 ( .D1(\SPI_I/n66 ), .C1(\SPI_I/n65 ), 
    .B1(\SPI_I/CSlatched ), .A1(\SPI_I/n2950 ), .D0(\SPI_I/n66 ), 
    .C0(\SPI_I/n67 ), .B0(\SPI_I/CSlatched ), .A0(\SPI_I/n2950 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_38 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_37 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_37 ), .Q0(\SPI_I/send_buffer_37 ), 
    .F1(\SPI_I/send_buffer_95_N_291_38 ), .Q1(\SPI_I/send_buffer_38 ));
  SPI_I_SLICE_159 \SPI_I/SLICE_159 ( .D1(\SPI_I/CSlatched ), 
    .C1(\SPI_I/n2950 ), .B1(\SPI_I/n64 ), .A1(\SPI_I/n63 ), 
    .D0(\SPI_I/CSlatched ), .C0(\SPI_I/n2950 ), .B0(\SPI_I/n64 ), 
    .A0(\SPI_I/n65 ), .DI1(\SPI_I/send_buffer_95_N_291_40 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_39 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_39 ), .Q0(\SPI_I/send_buffer_39 ), 
    .F1(\SPI_I/send_buffer_95_N_291_40 ), .Q1(\SPI_I/send_buffer_40 ));
  SPI_I_SLICE_160 \SPI_I/SLICE_160 ( .D1(\SPI_I/CSlatched ), .C1(\SPI_I/n62 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n61 ), .D0(\SPI_I/CSlatched ), 
    .C0(\SPI_I/n62 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n63 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_42 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_41 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_41 ), .Q0(\SPI_I/send_buffer_41 ), 
    .F1(\SPI_I/send_buffer_95_N_291_42 ), .Q1(\SPI_I/send_buffer_42 ));
  SPI_I_SLICE_161 \SPI_I/SLICE_161 ( .D1(\SPI_I/n60 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n59 ), .D0(\SPI_I/n60 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n61 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_44 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_43 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_43 ), .Q0(\SPI_I/send_buffer_43 ), 
    .F1(\SPI_I/send_buffer_95_N_291_44 ), .Q1(\SPI_I/send_buffer_44 ));
  SPI_I_SLICE_162 \SPI_I/SLICE_162 ( .D1(\SPI_I/n58 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n57 ), .D0(\SPI_I/n58 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n59 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_46 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_45 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_45 ), .Q0(\SPI_I/send_buffer_45 ), 
    .F1(\SPI_I/send_buffer_95_N_291_46 ), .Q1(\SPI_I/send_buffer_46 ));
  SPI_I_SLICE_163 \SPI_I/SLICE_163 ( .D1(\SPI_I/n55 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n56 ), .D0(\SPI_I/n57 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n56 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_48 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_47 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_47 ), .Q0(\SPI_I/send_buffer_47 ), 
    .F1(\SPI_I/send_buffer_95_N_291_48 ), .Q1(\SPI_I/send_buffer_48 ));
  SPI_I_SLICE_164 \SPI_I/SLICE_164 ( .D1(\SPI_I/n53 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n54 ), .D0(\SPI_I/n54 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n55 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_50 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_49 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_49 ), .Q0(\SPI_I/send_buffer_49 ), 
    .F1(\SPI_I/send_buffer_95_N_291_50 ), .Q1(\SPI_I/send_buffer_50 ));
  SPI_I_SLICE_165 \SPI_I/SLICE_165 ( .D1(\SPI_I/n2950 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n51 ), .A1(\SPI_I/n52 ), 
    .D0(\SPI_I/n2950 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n53 ), 
    .A0(\SPI_I/n52 ), .DI1(\SPI_I/send_buffer_95_N_291_52 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_51 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_51 ), .Q0(\SPI_I/send_buffer_51 ), 
    .F1(\SPI_I/send_buffer_95_N_291_52 ), .Q1(\SPI_I/send_buffer_52 ));
  SPI_I_SLICE_166 \SPI_I/SLICE_166 ( .D1(\SPI_I/n50 ), .C1(\SPI_I/n49 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n50 ), 
    .C0(\SPI_I/n51 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_54 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_53 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_53 ), .Q0(\SPI_I/send_buffer_53 ), 
    .F1(\SPI_I/send_buffer_95_N_291_54 ), .Q1(\SPI_I/send_buffer_54 ));
  SPI_I_SLICE_167 \SPI_I/SLICE_167 ( .D1(\SPI_I/CSlatched ), .C1(\SPI_I/n47 ), 
    .B1(\SPI_I/n48 ), .A1(\SPI_I/n2950 ), .D0(\SPI_I/CSlatched ), 
    .C0(\SPI_I/n49 ), .B0(\SPI_I/n48 ), .A0(\SPI_I/n2950 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_56 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_55 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_55 ), .Q0(\SPI_I/send_buffer_55 ), 
    .F1(\SPI_I/send_buffer_95_N_291_56 ), .Q1(\SPI_I/send_buffer_56 ));
  SPI_I_SLICE_168 \SPI_I/SLICE_168 ( .D1(\SPI_I/n46 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n45 ), .D0(\SPI_I/n46 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n47 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_58 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_57 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_57 ), .Q0(\SPI_I/send_buffer_57 ), 
    .F1(\SPI_I/send_buffer_95_N_291_58 ), .Q1(\SPI_I/send_buffer_58 ));
  SPI_I_SLICE_169 \SPI_I/SLICE_169 ( .D1(\SPI_I/CSlatched ), .C1(\SPI_I/n43 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n44 ), .D0(\SPI_I/CSlatched ), 
    .C0(\SPI_I/n45 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n44 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_60 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_59 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_59 ), .Q0(\SPI_I/send_buffer_59 ), 
    .F1(\SPI_I/send_buffer_95_N_291_60 ), .Q1(\SPI_I/send_buffer_60 ));
  SPI_I_SLICE_170 \SPI_I/SLICE_170 ( .D1(\SPI_I/CSlatched ), .C1(\SPI_I/n41 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n1743 ), .D0(\SPI_I/CSlatched ), 
    .C0(\SPI_I/n1743 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n43 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_62 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_61 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_61 ), .Q0(\SPI_I/send_buffer_61 ), 
    .F1(\SPI_I/send_buffer_95_N_291_62 ), .Q1(\SPI_I/send_buffer_62 ));
  SPI_I_SLICE_171 \SPI_I/SLICE_171 ( .D1(\SPI_I/n39 ), .C1(\SPI_I/n40 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n40 ), 
    .C0(\SPI_I/n41 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_64 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_63 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_63 ), .Q0(\SPI_I/send_buffer_63 ), 
    .F1(\SPI_I/send_buffer_95_N_291_64 ), .Q1(\SPI_I/send_buffer_64 ));
  SPI_I_SLICE_172 \SPI_I/SLICE_172 ( .D1(\SPI_I/n38 ), .C1(\SPI_I/n2950 ), 
    .B1(\SPI_I/CSlatched ), .A1(\SPI_I/n37 ), .D0(\SPI_I/n39 ), 
    .C0(\SPI_I/n2950 ), .B0(\SPI_I/CSlatched ), .A0(\SPI_I/n38 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_66 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_65 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_65 ), .Q0(\SPI_I/send_buffer_65 ), 
    .F1(\SPI_I/send_buffer_95_N_291_66 ), .Q1(\SPI_I/send_buffer_66 ));
  SPI_I_SLICE_173 \SPI_I/SLICE_173 ( .D1(\SPI_I/n2950 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n35 ), .A1(\SPI_I/n36 ), 
    .D0(\SPI_I/n2950 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n37 ), 
    .A0(\SPI_I/n36 ), .DI1(\SPI_I/send_buffer_95_N_291_68 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_67 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_67 ), .Q0(\SPI_I/send_buffer_67 ), 
    .F1(\SPI_I/send_buffer_95_N_291_68 ), .Q1(\SPI_I/send_buffer_68 ));
  SPI_I_SLICE_174 \SPI_I/SLICE_174 ( .D1(\SPI_I/n33 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n34 ), .D0(\SPI_I/n35 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n34 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_70 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_69 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_69 ), .Q0(\SPI_I/send_buffer_69 ), 
    .F1(\SPI_I/send_buffer_95_N_291_70 ), .Q1(\SPI_I/send_buffer_70 ));
  SPI_I_SLICE_175 \SPI_I/SLICE_175 ( .D1(\SPI_I/n32 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n1786 ), .D0(\SPI_I/n32 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n33 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_72 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_71 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_71 ), .Q0(\SPI_I/send_buffer_71 ), 
    .F1(\SPI_I/send_buffer_95_N_291_72 ), .Q1(\SPI_I/send_buffer_72 ));
  SPI_I_SLICE_176 \SPI_I/SLICE_176 ( .D1(\SPI_I/CSlatched ), 
    .C1(\SPI_I/n2950 ), .B1(\SPI_I/n30 ), .A1(\SPI_I/n29 ), 
    .D0(\SPI_I/CSlatched ), .C0(\SPI_I/n2950 ), .B0(\SPI_I/n30 ), 
    .A0(\SPI_I/n1786 ), .DI1(\SPI_I/send_buffer_95_N_291_74 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_73 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_73 ), .Q0(\SPI_I/send_buffer_73 ), 
    .F1(\SPI_I/send_buffer_95_N_291_74 ), .Q1(\SPI_I/send_buffer_74 ));
  SPI_I_SLICE_177 \SPI_I/SLICE_177 ( .D1(\SPI_I/CSlatched ), .C1(\SPI_I/n27 ), 
    .B1(\SPI_I/n28 ), .A1(\SPI_I/n2950 ), .D0(\SPI_I/CSlatched ), 
    .C0(\SPI_I/n28 ), .B0(\SPI_I/n29 ), .A0(\SPI_I/n2950 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_76 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_75 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_75 ), .Q0(\SPI_I/send_buffer_75 ), 
    .F1(\SPI_I/send_buffer_95_N_291_76 ), .Q1(\SPI_I/send_buffer_76 ));
  SPI_I_SLICE_178 \SPI_I/SLICE_178 ( .D1(\SPI_I/n26 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n25 ), .D0(\SPI_I/n26 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n27 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_78 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_77 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_77 ), .Q0(\SPI_I/send_buffer_77 ), 
    .F1(\SPI_I/send_buffer_95_N_291_78 ), .Q1(\SPI_I/send_buffer_78 ));
  SPI_I_SLICE_179 \SPI_I/SLICE_179 ( .D1(\SPI_I/n23 ), .C1(\SPI_I/n24 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n24 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n25 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_80 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_79 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_79 ), .Q0(\SPI_I/send_buffer_79 ), 
    .F1(\SPI_I/send_buffer_95_N_291_80 ), .Q1(\SPI_I/send_buffer_80 ));
  SPI_I_SLICE_180 \SPI_I/SLICE_180 ( .D1(\SPI_I/n22 ), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/n21 ), .D0(\SPI_I/n22 ), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/n23 ), 
    .DI1(\SPI_I/send_buffer_95_N_291_82 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_81 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_81 ), .Q0(\SPI_I/send_buffer_81 ), 
    .F1(\SPI_I/send_buffer_95_N_291_82 ), .Q1(\SPI_I/send_buffer_82 ));
  SPI_I_SLICE_181 \SPI_I/SLICE_181 ( .D1(\SPI_I/n2950 ), .C1(\SPI_I/n19 ), 
    .B1(\SPI_I/n20 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n2950 ), 
    .C0(\SPI_I/n20 ), .B0(\SPI_I/n21 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_84 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_83 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_83 ), .Q0(\SPI_I/send_buffer_83 ), 
    .F1(\SPI_I/send_buffer_95_N_291_84 ), .Q1(\SPI_I/send_buffer_84 ));
  SPI_I_SLICE_182 \SPI_I/SLICE_182 ( .D1(\SPI_I/n2950 ), .C1(\SPI_I/n17 ), 
    .B1(\SPI_I/n18 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n2950 ), 
    .C0(\SPI_I/n19 ), .B0(\SPI_I/n18 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_86 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_85 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_85 ), .Q0(\SPI_I/send_buffer_85 ), 
    .F1(\SPI_I/send_buffer_95_N_291_86 ), .Q1(\SPI_I/send_buffer_86 ));
  SPI_I_SLICE_183 \SPI_I/SLICE_183 ( .D1(\SPI_I/n16 ), .C1(\SPI_I/n15 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n16 ), 
    .C0(\SPI_I/n17 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_88 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_87 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_87 ), .Q0(\SPI_I/send_buffer_87 ), 
    .F1(\SPI_I/send_buffer_95_N_291_88 ), .Q1(\SPI_I/send_buffer_88 ));
  SPI_I_SLICE_184 \SPI_I/SLICE_184 ( .D1(\SPI_I/n14 ), .C1(\SPI_I/n13 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n14 ), 
    .C0(\SPI_I/n15 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_90 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_89 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_89 ), .Q0(\SPI_I/send_buffer_89 ), 
    .F1(\SPI_I/send_buffer_95_N_291_90 ), .Q1(\SPI_I/send_buffer_90 ));
  SPI_I_SLICE_185 \SPI_I/SLICE_185 ( .D1(\SPI_I/n12 ), .C1(\SPI_I/n11 ), 
    .B1(\SPI_I/n2950 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n13 ), 
    .C0(\SPI_I/n12 ), .B0(\SPI_I/n2950 ), .A0(\SPI_I/CSlatched ), 
    .DI1(\SPI_I/send_buffer_95_N_291_92 ), 
    .DI0(\SPI_I/send_buffer_95_N_291_91 ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_91 ), .Q0(\SPI_I/send_buffer_91 ), 
    .F1(\SPI_I/send_buffer_95_N_291_92 ), .Q1(\SPI_I/send_buffer_92 ));
  SPI_I_SLICE_186 \SPI_I/SLICE_186 ( .D1(speed_m1_18), 
    .C1(\SPI_I/send_buffer_93 ), .B1(\SPI_I/CSold ), .A1(\SPI_I/CSlatched ), 
    .D0(\SPI_I/n2950 ), .C0(\SPI_I/n10 ), .B0(\SPI_I/n11 ), 
    .A0(\SPI_I/CSlatched ), .DI0(\SPI_I/send_buffer_95_N_291_93 ), 
    .M1(\SPI_I/SCKlatched ), .CLK(clkout_c), 
    .F0(\SPI_I/send_buffer_95_N_291_93 ), .Q0(\SPI_I/send_buffer_93 ), 
    .F1(\SPI_I/n11 ), .Q1(\SPI_I/SCKold ));
  SPI_I_SLICE_187 \SPI_I/SLICE_187 ( .D1(speed_m3_11), 
    .C1(\SPI_I/send_buffer_44 ), .B1(\SPI_I/CSlatched ), .A1(\SPI_I/n3030 ), 
    .D0(\SPI_I/send_buffer_94 ), .C0(speed_m1_19), .B0(\SPI_I/CSlatched ), 
    .A0(\SPI_I/n3030 ), .DI0(\SPI_I/n10 ), .LSR(\SPI_I/n2941 ), .CLK(clkout_c), 
    .F0(\SPI_I/n10 ), .Q0(\SPI_I/send_buffer_94 ), .F1(\SPI_I/n60 ));
  HALL_I_M1_SLICE_199 \HALL_I_M1/SLICE_199 ( .D0(\HALL_I_M1/n2938 ), 
    .B0(\HALL_I_M1/n2942 ), .A0(\HALL_I_M1/speed_19_N_640_0 ), 
    .DI0(\HALL_I_M1/speed_19_N_598_0 ), .CE(\HALL_I_M1/clk_1mhz_enable_9 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M1/speed_19_N_598_0 ), .Q0(speed_m1_0));
  HALL_I_M1_SLICE_200 \HALL_I_M1/SLICE_200 ( .D1(\HALL_I_M1/n2938 ), 
    .C1(\HALL_I_M1/speed_19_N_640_2 ), .B1(\HALL_I_M1/n2942 ), .A1(speed_m1_2), 
    .D0(\HALL_I_M1/n2938 ), .C0(\HALL_I_M1/n2942 ), 
    .B0(\HALL_I_M1/speed_19_N_640_1 ), .A0(speed_m1_1), 
    .DI1(\HALL_I_M1/n1272 ), .DI0(\HALL_I_M1/n1270 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M1/n1270 ), .Q0(speed_m1_1), .F1(\HALL_I_M1/n1272 ), 
    .Q1(speed_m1_2));
  HALL_I_M1_SLICE_201 \HALL_I_M1/SLICE_201 ( .D1(\HALL_I_M1/speed_19_N_640_4 ), 
    .C1(\HALL_I_M1/n2938 ), .B1(\HALL_I_M1/n2942 ), .A1(speed_m1_4), 
    .D0(\HALL_I_M1/speed_19_N_640_3 ), .C0(\HALL_I_M1/n2938 ), 
    .B0(\HALL_I_M1/n2942 ), .A0(speed_m1_3), .DI1(\HALL_I_M1/n1268 ), 
    .DI0(\HALL_I_M1/n1276 ), .CLK(clk_1mhz), .F0(\HALL_I_M1/n1276 ), 
    .Q0(speed_m1_3), .F1(\HALL_I_M1/n1268 ), .Q1(speed_m1_4));
  HALL_I_M1_SLICE_202 \HALL_I_M1/SLICE_202 ( .D1(\HALL_I_M1/n2938 ), 
    .C1(\HALL_I_M1/speed_19_N_640_6 ), .B1(\HALL_I_M1/n2942 ), .A1(speed_m1_6), 
    .D0(\HALL_I_M1/n2938 ), .C0(\HALL_I_M1/speed_19_N_640_5 ), 
    .B0(\HALL_I_M1/n2942 ), .A0(speed_m1_5), .DI1(\HALL_I_M1/n1256 ), 
    .DI0(\HALL_I_M1/n1274 ), .CLK(clk_1mhz), .F0(\HALL_I_M1/n1274 ), 
    .Q0(speed_m1_5), .F1(\HALL_I_M1/n1256 ), .Q1(speed_m1_6));
  HALL_I_M1_SLICE_203 \HALL_I_M1/SLICE_203 ( .D1(\HALL_I_M1/speed_19_N_640_8 ), 
    .C1(\HALL_I_M1/n2942 ), .B1(\HALL_I_M1/n2938 ), .A1(speed_m1_8), 
    .D0(\HALL_I_M1/n2942 ), .C0(\HALL_I_M1/speed_19_N_640_7 ), 
    .B0(\HALL_I_M1/n2938 ), .A0(speed_m1_7), .DI1(\HALL_I_M1/n1244 ), 
    .DI0(\HALL_I_M1/n1210 ), .CLK(clk_1mhz), .F0(\HALL_I_M1/n1210 ), 
    .Q0(speed_m1_7), .F1(\HALL_I_M1/n1244 ), .Q1(speed_m1_8));
  HALL_I_M1_SLICE_204 \HALL_I_M1/SLICE_204 ( 
    .D1(\HALL_I_M1/speed_19_N_640_10 ), .C1(\HALL_I_M1/n2938 ), 
    .B1(\HALL_I_M1/n2942 ), .A1(speed_m1_10), .D0(\HALL_I_M1/n2942 ), 
    .C0(\HALL_I_M1/n2938 ), .B0(\HALL_I_M1/speed_19_N_640_9 ), .A0(speed_m1_9), 
    .DI1(\HALL_I_M1/n1204 ), .DI0(\HALL_I_M1/n1200 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M1/n1200 ), .Q0(speed_m1_9), .F1(\HALL_I_M1/n1204 ), 
    .Q1(speed_m1_10));
  HALL_I_M1_SLICE_205 \HALL_I_M1/SLICE_205 ( .D1(\HALL_I_M1/n2942 ), 
    .C1(\HALL_I_M1/n2938 ), .B1(\HALL_I_M1/speed_19_N_640_12 ), 
    .A1(speed_m1_12), .D0(\HALL_I_M1/n2942 ), .C0(\HALL_I_M1/n2938 ), 
    .B0(\HALL_I_M1/speed_19_N_640_11 ), .A0(speed_m1_11), 
    .DI1(\HALL_I_M1/n1242 ), .DI0(\HALL_I_M1/n1206 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M1/n1206 ), .Q0(speed_m1_11), .F1(\HALL_I_M1/n1242 ), 
    .Q1(speed_m1_12));
  HALL_I_M1_SLICE_206 \HALL_I_M1/SLICE_206 ( .D1(\HALL_I_M1/n2942 ), 
    .C1(\HALL_I_M1/speed_19_N_640_14 ), .B1(\HALL_I_M1/n2938 ), 
    .A1(speed_m1_14), .D0(\HALL_I_M1/n2942 ), .C0(\HALL_I_M1/n2938 ), 
    .B0(\HALL_I_M1/speed_19_N_640_13 ), .A0(speed_m1_13), 
    .DI1(\HALL_I_M1/n1246 ), .DI0(\HALL_I_M1/n1230 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M1/n1230 ), .Q0(speed_m1_13), .F1(\HALL_I_M1/n1246 ), 
    .Q1(speed_m1_14));
  HALL_I_M1_SLICE_207 \HALL_I_M1/SLICE_207 ( .D1(\HALL_I_M1/n2938 ), 
    .C1(\HALL_I_M1/speed_19_N_640_16 ), .B1(\HALL_I_M1/n2942 ), 
    .A1(speed_m1_16), .D0(\HALL_I_M1/n2938 ), .C0(\HALL_I_M1/n2942 ), 
    .B0(\HALL_I_M1/speed_19_N_640_15 ), .A0(speed_m1_15), 
    .DI1(\HALL_I_M1/n1208 ), .DI0(\HALL_I_M1/n1218 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M1/n1218 ), .Q0(speed_m1_15), .F1(\HALL_I_M1/n1208 ), 
    .Q1(speed_m1_16));
  HALL_I_M1_SLICE_208 \HALL_I_M1/SLICE_208 ( 
    .D1(\HALL_I_M1/speed_19_N_640_18 ), .C1(\HALL_I_M1/n2942 ), 
    .B1(\HALL_I_M1/n2938 ), .A1(speed_m1_18), 
    .D0(\HALL_I_M1/speed_19_N_640_17 ), .C0(\HALL_I_M1/n2942 ), 
    .B0(\HALL_I_M1/n2938 ), .A0(speed_m1_17), .DI1(\HALL_I_M1/n1238 ), 
    .DI0(\HALL_I_M1/n1202 ), .CLK(clk_1mhz), .F0(\HALL_I_M1/n1202 ), 
    .Q0(speed_m1_17), .F1(\HALL_I_M1/n1238 ), .Q1(speed_m1_18));
  HALL_I_M1_SLICE_209 \HALL_I_M1/SLICE_209 ( .D1(hall3_old), 
    .C1(\HALL_I_M1/n4 ), .A1(\HALL_I_M1/hall3_lat ), .D0(\HALL_I_M1/n2942 ), 
    .C0(\HALL_I_M1/n2938 ), .B0(\HALL_I_M1/speed_19_N_640_19 ), 
    .A0(speed_m1_19), .DI0(\HALL_I_M1/n1258 ), .M1(H_C_m1_c), .CLK(clk_1mhz), 
    .F0(\HALL_I_M1/n1258 ), .Q0(speed_m1_19), .F1(\HALL_I_M1/n2942 ), 
    .Q1(\HALL_I_M1/hall3_lat ));
  HALL_I_M2_SLICE_210 \HALL_I_M2/SLICE_210 ( .D1(\HALL_I_M2/n2939 ), 
    .C1(\HALL_I_M2/n2944 ), .B1(\HALL_I_M2/speed_19_N_640_1 ), .A1(speed_m2_1), 
    .D0(\HALL_I_M2/n2939 ), .C0(\HALL_I_M2/n2944 ), 
    .B0(\HALL_I_M2/speed_19_N_640_0 ), .A0(speed_m2_0), 
    .DI1(\HALL_I_M2/n1260 ), .DI0(\HALL_I_M2/n1196 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M2/n1196 ), .Q0(speed_m2_0), .F1(\HALL_I_M2/n1260 ), 
    .Q1(speed_m2_1));
  HALL_I_M2_SLICE_211 \HALL_I_M2/SLICE_211 ( .D1(\HALL_I_M2/n2939 ), 
    .C1(\HALL_I_M2/n2944 ), .B1(\HALL_I_M2/speed_19_N_640_3 ), .A1(speed_m2_3), 
    .D0(\HALL_I_M2/n2939 ), .C0(\HALL_I_M2/n2944 ), 
    .B0(\HALL_I_M2/speed_19_N_640_2 ), .A0(speed_m2_2), 
    .DI1(\HALL_I_M2/n1220 ), .DI0(\HALL_I_M2/n1250 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M2/n1250 ), .Q0(speed_m2_2), .F1(\HALL_I_M2/n1220 ), 
    .Q1(speed_m2_3));
  HALL_I_M2_SLICE_212 \HALL_I_M2/SLICE_212 ( .D1(\HALL_I_M2/speed_19_N_640_5 ), 
    .C1(\HALL_I_M2/n2939 ), .B1(\HALL_I_M2/n2944 ), .A1(speed_m2_5), 
    .D0(\HALL_I_M2/speed_19_N_640_4 ), .C0(\HALL_I_M2/n2939 ), 
    .B0(\HALL_I_M2/n2944 ), .A0(speed_m2_4), .DI1(\HALL_I_M2/n1236 ), 
    .DI0(\HALL_I_M2/n1224 ), .CLK(clk_1mhz), .F0(\HALL_I_M2/n1224 ), 
    .Q0(speed_m2_4), .F1(\HALL_I_M2/n1236 ), .Q1(speed_m2_5));
  HALL_I_M2_SLICE_213 \HALL_I_M2/SLICE_213 ( .D1(\HALL_I_M2/n2944 ), 
    .C1(\HALL_I_M2/n2939 ), .B1(\HALL_I_M2/speed_19_N_640_7 ), .A1(speed_m2_7), 
    .D0(\HALL_I_M2/speed_19_N_640_6 ), .C0(\HALL_I_M2/n2944 ), 
    .B0(\HALL_I_M2/n2939 ), .A0(speed_m2_6), .DI1(\HALL_I_M2/n1216 ), 
    .DI0(\HALL_I_M2/n1222 ), .CLK(clk_1mhz), .F0(\HALL_I_M2/n1222 ), 
    .Q0(speed_m2_6), .F1(\HALL_I_M2/n1216 ), .Q1(speed_m2_7));
  HALL_I_M2_SLICE_214 \HALL_I_M2/SLICE_214 ( .D1(\HALL_I_M2/n2939 ), 
    .C1(\HALL_I_M2/n2944 ), .B1(\HALL_I_M2/speed_19_N_640_9 ), .A1(speed_m2_9), 
    .D0(\HALL_I_M2/speed_19_N_640_8 ), .C0(\HALL_I_M2/n2939 ), 
    .B0(\HALL_I_M2/n2944 ), .A0(speed_m2_8), .DI1(\HALL_I_M2/n1226 ), 
    .DI0(\HALL_I_M2/n1232 ), .CLK(clk_1mhz), .F0(\HALL_I_M2/n1232 ), 
    .Q0(speed_m2_8), .F1(\HALL_I_M2/n1226 ), .Q1(speed_m2_9));
  HALL_I_M2_SLICE_215 \HALL_I_M2/SLICE_215 ( .D1(\HALL_I_M2/n2944 ), 
    .C1(\HALL_I_M2/n2939 ), .B1(\HALL_I_M2/speed_19_N_640_11 ), 
    .A1(speed_m2_11), .D0(\HALL_I_M2/n2944 ), .C0(\HALL_I_M2/n2939 ), 
    .B0(\HALL_I_M2/speed_19_N_640_10 ), .A0(speed_m2_10), 
    .DI1(\HALL_I_M2/n1234 ), .DI0(\HALL_I_M2/n1214 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M2/n1214 ), .Q0(speed_m2_10), .F1(\HALL_I_M2/n1234 ), 
    .Q1(speed_m2_11));
  HALL_I_M2_SLICE_216 \HALL_I_M2/SLICE_216 ( 
    .D1(\HALL_I_M2/speed_19_N_640_13 ), .C1(\HALL_I_M2/n2939 ), 
    .B1(\HALL_I_M2/n2944 ), .A1(speed_m2_13), .D0(\HALL_I_M2/n2939 ), 
    .C0(\HALL_I_M2/n2944 ), .B0(\HALL_I_M2/speed_19_N_640_12 ), 
    .A0(speed_m2_12), .DI1(\HALL_I_M2/n1192 ), .DI0(\HALL_I_M2/n1212 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M2/n1212 ), .Q0(speed_m2_12), 
    .F1(\HALL_I_M2/n1192 ), .Q1(speed_m2_13));
  HALL_I_M2_SLICE_217 \HALL_I_M2/SLICE_217 ( .D1(\HALL_I_M2/n2944 ), 
    .C1(\HALL_I_M2/speed_19_N_640_15 ), .B1(\HALL_I_M2/n2939 ), 
    .A1(speed_m2_15), .D0(\HALL_I_M2/n2944 ), 
    .C0(\HALL_I_M2/speed_19_N_640_14 ), .B0(\HALL_I_M2/n2939 ), 
    .A0(speed_m2_14), .DI1(\HALL_I_M2/n1190 ), .DI0(\HALL_I_M2/n1266 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M2/n1266 ), .Q0(speed_m2_14), 
    .F1(\HALL_I_M2/n1190 ), .Q1(speed_m2_15));
  HALL_I_M2_SLICE_218 \HALL_I_M2/SLICE_218 ( 
    .D1(\HALL_I_M2/speed_19_N_640_17 ), .C1(\HALL_I_M2/n2939 ), 
    .B1(\HALL_I_M2/n2944 ), .A1(speed_m2_17), .D0(\HALL_I_M2/n2939 ), 
    .C0(\HALL_I_M2/speed_19_N_640_16 ), .B0(\HALL_I_M2/n2944 ), 
    .A0(speed_m2_16), .DI1(\HALL_I_M2/n1262 ), .DI0(\HALL_I_M2/n1188 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M2/n1188 ), .Q0(speed_m2_16), 
    .F1(\HALL_I_M2/n1262 ), .Q1(speed_m2_17));
  HALL_I_M2_SLICE_219 \HALL_I_M2/SLICE_219 ( .D1(\HALL_I_M2/n2939 ), 
    .C1(\HALL_I_M2/speed_19_N_640_19 ), .B1(\HALL_I_M2/n2944 ), 
    .A1(speed_m2_19), .D0(\HALL_I_M2/n2944 ), .C0(\HALL_I_M2/n2939 ), 
    .B0(\HALL_I_M2/speed_19_N_640_18 ), .A0(speed_m2_18), 
    .DI1(\HALL_I_M2/n1186 ), .DI0(\HALL_I_M2/n1194 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M2/n1194 ), .Q0(speed_m2_18), .F1(\HALL_I_M2/n1186 ), 
    .Q1(speed_m2_19));
  HALL_I_M3_SLICE_220 \HALL_I_M3/SLICE_220 ( .D0(\HALL_I_M3/speed_19_N_640_0 ), 
    .C0(\HALL_I_M3/n2943 ), .B0(\HALL_I_M3/n39 ), 
    .DI0(\HALL_I_M3/speed_19_N_598_0 ), .CE(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M3/speed_19_N_598_0 ), .Q0(speed_m3_0));
  HALL_I_M3_SLICE_221 \HALL_I_M3/SLICE_221 ( .D1(\HALL_I_M3/n2943 ), 
    .C1(\HALL_I_M3/speed_19_N_640_2 ), .B1(\HALL_I_M3/n39 ), .A1(speed_m3_2), 
    .D0(\HALL_I_M3/n2943 ), .C0(\HALL_I_M3/n39 ), 
    .B0(\HALL_I_M3/speed_19_N_640_1 ), .A0(speed_m3_1), 
    .DI1(\HALL_I_M3/n1184 ), .DI0(\HALL_I_M3/n1264 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M3/n1264 ), .Q0(speed_m3_1), .F1(\HALL_I_M3/n1184 ), 
    .Q1(speed_m3_2));
  HALL_I_M3_SLICE_222 \HALL_I_M3/SLICE_222 ( .D0(\HALL_I_M3/n2943 ), 
    .C0(\HALL_I_M3/n39 ), .A0(\HALL_I_M3/speed_19_N_640_3 ), 
    .DI0(\HALL_I_M3/speed_19_N_598_3 ), .CE(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M3/speed_19_N_598_3 ), .Q0(speed_m3_3));
  SLICE_223 SLICE_223( .D1(\CLKDIV_I/count_0 ), .A1(\CLKDIV_I/count_3 ), 
    .D0(\HALL_I_M3/speed_19_N_640_4 ), .C0(\HALL_I_M3/n39 ), 
    .B0(\HALL_I_M3/n2943 ), .A0(speed_m3_4), .DI0(\HALL_I_M3/n1252 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M3/n1252 ), .Q0(speed_m3_4), 
    .F1(\CLKDIV_I/n6 ));
  HALL_I_M3_SLICE_224 \HALL_I_M3/SLICE_224 ( .D1(\HALL_I_M3/n2943 ), 
    .C1(\HALL_I_M3/n39 ), .A1(\HALL_I_M3/speed_19_N_640_6 ), 
    .D0(\HALL_I_M3/n2943 ), .C0(\HALL_I_M3/n39 ), 
    .B0(\HALL_I_M3/speed_19_N_640_5 ), .DI1(\HALL_I_M3/speed_19_N_598_6 ), 
    .DI0(\HALL_I_M3/speed_19_N_598_5 ), .CE(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M3/speed_19_N_598_5 ), .Q0(speed_m3_5), 
    .F1(\HALL_I_M3/speed_19_N_598_6 ), .Q1(speed_m3_6));
  SLICE_225 SLICE_225( .D1(\HALL_I_M4/count_13 ), .C1(\HALL_I_M4/count_0 ), 
    .B1(\HALL_I_M4/count_6 ), .A1(\HALL_I_M4/count_7 ), .D0(\HALL_I_M3/n39 ), 
    .B0(\HALL_I_M3/speed_19_N_640_7 ), .A0(\HALL_I_M3/n2943 ), 
    .DI0(\HALL_I_M3/speed_19_N_598_7 ), .CE(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M3/speed_19_N_598_7 ), .Q0(speed_m3_7), 
    .F1(\HALL_I_M4/n15 ));
  HALL_I_M3_SLICE_226 \HALL_I_M3/SLICE_226 ( .D1(\HALL_I_M3/n2943 ), 
    .C1(\HALL_I_M3/n39 ), .B1(\HALL_I_M3/speed_19_N_640_9 ), .A1(speed_m3_9), 
    .D0(\HALL_I_M3/speed_19_N_640_8 ), .C0(\HALL_I_M3/n39 ), 
    .B0(\HALL_I_M3/n2943 ), .A0(speed_m3_8), .DI1(\HALL_I_M3/n1282 ), 
    .DI0(\HALL_I_M3/n1332 ), .CLK(clk_1mhz), .F0(\HALL_I_M3/n1332 ), 
    .Q0(speed_m3_8), .F1(\HALL_I_M3/n1282 ), .Q1(speed_m3_9));
  HALL_I_M3_SLICE_227 \HALL_I_M3/SLICE_227 ( .D1(\HALL_I_M3/n39 ), 
    .C1(\HALL_I_M3/n2943 ), .B1(\HALL_I_M3/speed_19_N_640_11 ), 
    .A1(speed_m3_11), .D0(\HALL_I_M3/n39 ), .C0(\HALL_I_M3/n2943 ), 
    .B0(\HALL_I_M3/speed_19_N_640_10 ), .A0(speed_m3_10), 
    .DI1(\HALL_I_M3/n1278 ), .DI0(\HALL_I_M3/n1280 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M3/n1280 ), .Q0(speed_m3_10), .F1(\HALL_I_M3/n1278 ), 
    .Q1(speed_m3_11));
  HALL_I_M3_SLICE_228 \HALL_I_M3/SLICE_228 ( .D1(\HALL_I_M3/n2780 ), 
    .C1(\HALL_I_M3/n2774 ), .B1(\HALL_I_M3/count_5 ), .A1(\HALL_I_M3/count_2 ), 
    .D0(\HALL_I_M3/speed_19_N_640_12 ), .C0(\HALL_I_M3/n39 ), 
    .B0(\HALL_I_M3/n2943 ), .A0(speed_m3_12), .DI0(\HALL_I_M3/n1198 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M3/n1198 ), .Q0(speed_m3_12), 
    .F1(\HALL_I_M3/n39 ));
  HALL_I_M3_SLICE_229 \HALL_I_M3/SLICE_229 ( 
    .C1(\HALL_I_M3/speed_19_N_640_14 ), .B1(\HALL_I_M3/n2943 ), 
    .A1(\HALL_I_M3/n39 ), .D0(\HALL_I_M3/n2943 ), 
    .B0(\HALL_I_M3/speed_19_N_640_13 ), .A0(\HALL_I_M3/n39 ), 
    .DI1(\HALL_I_M3/speed_19_N_598_14 ), .DI0(\HALL_I_M3/speed_19_N_598_13 ), 
    .CE(\HALL_I_M3/clk_1mhz_enable_8 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M3/speed_19_N_598_13 ), .Q0(speed_m3_13), 
    .F1(\HALL_I_M3/speed_19_N_598_14 ), .Q1(speed_m3_14));
  HALL_I_M3_SLICE_230 \HALL_I_M3/SLICE_230 ( .D1(\HALL_I_M3/n2943 ), 
    .C1(\HALL_I_M3/speed_19_N_640_16 ), .B1(\HALL_I_M3/n39 ), .A1(speed_m3_16), 
    .D0(\HALL_I_M3/n2943 ), .C0(\HALL_I_M3/n39 ), 
    .B0(\HALL_I_M3/speed_19_N_640_15 ), .A0(speed_m3_15), 
    .DI1(\HALL_I_M3/n1406 ), .DI0(\HALL_I_M3/n1408 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M3/n1408 ), .Q0(speed_m3_15), .F1(\HALL_I_M3/n1406 ), 
    .Q1(speed_m3_16));
  HALL_I_M3_SLICE_231 \HALL_I_M3/SLICE_231 ( 
    .D1(\HALL_I_M3/speed_19_N_640_18 ), .C1(\HALL_I_M3/n39 ), 
    .B1(\HALL_I_M3/n2943 ), .A1(speed_m3_18), 
    .D0(\HALL_I_M3/speed_19_N_640_17 ), .C0(\HALL_I_M3/n39 ), 
    .B0(\HALL_I_M3/n2943 ), .A0(speed_m3_17), .DI1(\HALL_I_M3/n1402 ), 
    .DI0(\HALL_I_M3/n1404 ), .CLK(clk_1mhz), .F0(\HALL_I_M3/n1404 ), 
    .Q0(speed_m3_17), .F1(\HALL_I_M3/n1402 ), .Q1(speed_m3_18));
  HALL_I_M3_SLICE_232 \HALL_I_M3/SLICE_232 ( .D1(\HALL_I_M3/hall3_lat ), 
    .C1(hall3_old_adj_740), .A1(\HALL_I_M3/n4 ), .D0(\HALL_I_M3/n39 ), 
    .C0(\HALL_I_M3/n2943 ), .B0(\HALL_I_M3/speed_19_N_640_19 ), 
    .A0(speed_m3_19), .DI0(\HALL_I_M3/n1400 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M3/n1400 ), .Q0(speed_m3_19), .F1(\HALL_I_M3/n2943 ));
  HALL_I_M4_SLICE_233 \HALL_I_M4/SLICE_233 ( .D1(\HALL_I_M4/n2262 ), 
    .C1(\HALL_I_M4/n13 ), .B1(\HALL_I_M4/n15 ), .A1(\HALL_I_M4/n14 ), 
    .C0(\HALL_I_M4/speed_19_N_640_0 ), .B0(\HALL_I_M4/n2937 ), 
    .A0(\HALL_I_M4/n2940 ), .DI0(\HALL_I_M4/speed_19_N_598_0 ), 
    .CE(\HALL_I_M4/clk_1mhz_enable_7 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M4/speed_19_N_598_0 ), .Q0(speed_m4_0), .F1(\HALL_I_M4/n2937 ));
  HALL_I_M4_SLICE_234 \HALL_I_M4/SLICE_234 ( .D1(\HALL_I_M4/n2940 ), 
    .C1(\HALL_I_M4/n2937 ), .B1(\HALL_I_M4/speed_19_N_640_2 ), .A1(speed_m4_2), 
    .D0(\HALL_I_M4/n2940 ), .C0(\HALL_I_M4/n2937 ), 
    .B0(\HALL_I_M4/speed_19_N_640_1 ), .A0(speed_m4_1), 
    .DI1(\HALL_I_M4/n1396 ), .DI0(\HALL_I_M4/n1398 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M4/n1398 ), .Q0(speed_m4_1), .F1(\HALL_I_M4/n1396 ), 
    .Q1(speed_m4_2));
  HALL_I_M4_SLICE_235 \HALL_I_M4/SLICE_235 ( .D1(\HALL_I_M4/speed_19_N_640_4 ), 
    .C1(\HALL_I_M4/n2937 ), .B1(\HALL_I_M4/n2940 ), .A1(speed_m4_4), 
    .D0(\HALL_I_M4/speed_19_N_640_3 ), .C0(\HALL_I_M4/n2937 ), 
    .B0(\HALL_I_M4/n2940 ), .A0(speed_m4_3), .DI1(\HALL_I_M4/n1392 ), 
    .DI0(\HALL_I_M4/n1394 ), .CLK(clk_1mhz), .F0(\HALL_I_M4/n1394 ), 
    .Q0(speed_m4_3), .F1(\HALL_I_M4/n1392 ), .Q1(speed_m4_4));
  HALL_I_M4_SLICE_236 \HALL_I_M4/SLICE_236 ( .D1(\HALL_I_M4/n2937 ), 
    .C1(\HALL_I_M4/n2940 ), .B1(\HALL_I_M4/speed_19_N_640_6 ), .A1(speed_m4_6), 
    .D0(\HALL_I_M4/n2937 ), .C0(\HALL_I_M4/speed_19_N_640_5 ), 
    .B0(\HALL_I_M4/n2940 ), .A0(speed_m4_5), .DI1(\HALL_I_M4/n1388 ), 
    .DI0(\HALL_I_M4/n1390 ), .CLK(clk_1mhz), .F0(\HALL_I_M4/n1390 ), 
    .Q0(speed_m4_5), .F1(\HALL_I_M4/n1388 ), .Q1(speed_m4_6));
  HALL_I_M4_SLICE_237 \HALL_I_M4/SLICE_237 ( .D1(\HALL_I_M4/n2940 ), 
    .C1(\HALL_I_M4/speed_19_N_640_8 ), .B1(\HALL_I_M4/n2937 ), .A1(speed_m4_8), 
    .D0(\HALL_I_M4/speed_19_N_640_7 ), .C0(\HALL_I_M4/n2940 ), 
    .B0(\HALL_I_M4/n2937 ), .A0(speed_m4_7), .DI1(\HALL_I_M4/n1384 ), 
    .DI0(\HALL_I_M4/n1386 ), .CLK(clk_1mhz), .F0(\HALL_I_M4/n1386 ), 
    .Q0(speed_m4_7), .F1(\HALL_I_M4/n1384 ), .Q1(speed_m4_8));
  HALL_I_M4_SLICE_238 \HALL_I_M4/SLICE_238 ( .D1(\HALL_I_M4/n2937 ), 
    .C1(\HALL_I_M4/n2940 ), .B1(\HALL_I_M4/speed_19_N_640_10 ), 
    .A1(speed_m4_10), .D0(\HALL_I_M4/n2937 ), .C0(\HALL_I_M4/n2940 ), 
    .B0(\HALL_I_M4/speed_19_N_640_9 ), .A0(speed_m4_9), 
    .DI1(\HALL_I_M4/n1380 ), .DI0(\HALL_I_M4/n1382 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M4/n1382 ), .Q0(speed_m4_9), .F1(\HALL_I_M4/n1380 ), 
    .Q1(speed_m4_10));
  HALL_I_M4_SLICE_239 \HALL_I_M4/SLICE_239 ( .D1(\HALL_I_M4/n2940 ), 
    .C1(\HALL_I_M4/speed_19_N_640_12 ), .B1(\HALL_I_M4/n2937 ), 
    .A1(speed_m4_12), .D0(\HALL_I_M4/n2940 ), 
    .C0(\HALL_I_M4/speed_19_N_640_11 ), .B0(\HALL_I_M4/n2937 ), 
    .A0(speed_m4_11), .DI1(\HALL_I_M4/n1376 ), .DI0(\HALL_I_M4/n1378 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M4/n1378 ), .Q0(speed_m4_11), 
    .F1(\HALL_I_M4/n1376 ), .Q1(speed_m4_12));
  HALL_I_M4_SLICE_240 \HALL_I_M4/SLICE_240 ( .D1(\HALL_I_M4/n2940 ), 
    .C1(\HALL_I_M4/speed_19_N_640_14 ), .B1(\HALL_I_M4/n2937 ), 
    .A1(speed_m4_14), .D0(\HALL_I_M4/n2940 ), 
    .C0(\HALL_I_M4/speed_19_N_640_13 ), .B0(\HALL_I_M4/n2937 ), 
    .A0(speed_m4_13), .DI1(\HALL_I_M4/n1372 ), .DI0(\HALL_I_M4/n1374 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M4/n1374 ), .Q0(speed_m4_13), 
    .F1(\HALL_I_M4/n1372 ), .Q1(speed_m4_14));
  HALL_I_M4_SLICE_241 \HALL_I_M4/SLICE_241 ( .D1(\HALL_I_M4/n2937 ), 
    .C1(\HALL_I_M4/speed_19_N_640_16 ), .B1(\HALL_I_M4/n2940 ), 
    .A1(speed_m4_16), .D0(\HALL_I_M4/n2937 ), .C0(\HALL_I_M4/n2940 ), 
    .B0(\HALL_I_M4/speed_19_N_640_15 ), .A0(speed_m4_15), 
    .DI1(\HALL_I_M4/n1290 ), .DI0(\HALL_I_M4/n1330 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M4/n1330 ), .Q0(speed_m4_15), .F1(\HALL_I_M4/n1290 ), 
    .Q1(speed_m4_16));
  HALL_I_M4_SLICE_242 \HALL_I_M4/SLICE_242 ( .D1(\HALL_I_M4/n2937 ), 
    .C1(\HALL_I_M4/n2940 ), .B1(\HALL_I_M4/speed_19_N_640_18 ), 
    .A1(speed_m4_18), .D0(\HALL_I_M4/n2937 ), 
    .C0(\HALL_I_M4/speed_19_N_640_17 ), .B0(\HALL_I_M4/n2940 ), 
    .A0(speed_m4_17), .DI1(\HALL_I_M4/n1286 ), .DI0(\HALL_I_M4/n1288 ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M4/n1288 ), .Q0(speed_m4_17), 
    .F1(\HALL_I_M4/n1286 ), .Q1(speed_m4_18));
  HALL_I_M4_SLICE_243 \HALL_I_M4/SLICE_243 ( .C1(\HALL_I_M4/hall3_lat ), 
    .B1(\HALL_I_M4/n4 ), .A1(hall3_old_adj_743), .D0(\HALL_I_M4/n2937 ), 
    .C0(\HALL_I_M4/speed_19_N_640_19 ), .B0(\HALL_I_M4/n2940 ), 
    .A0(speed_m4_19), .DI0(\HALL_I_M4/n1284 ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M4/n1284 ), .Q0(speed_m4_19), .F1(\HALL_I_M4/n2940 ));
  HALL_I_M1_SLICE_244 \HALL_I_M1/SLICE_244 ( .D1(\HALL_I_M1/n15 ), 
    .C1(\HALL_I_M1/n13 ), .B1(\HALL_I_M1/n14 ), .A1(\HALL_I_M1/n2263 ), 
    .D0(\HALL_I_M1/count_13 ), .C0(\HALL_I_M1/count_6 ), 
    .B0(\HALL_I_M1/count_0 ), .A0(\HALL_I_M1/count_7 ), 
    .M1(\HALL_I_M1/hall1_lat ), .M0(H_A_m1_c), .CLK(clk_1mhz), 
    .F0(\HALL_I_M1/n15 ), .Q0(\HALL_I_M1/hall1_lat ), .F1(\HALL_I_M1/n2938 ), 
    .Q1(hall1_old));
  SLICE_245 SLICE_245( .C1(\HALL_I_M1/count_2 ), .B1(\HALL_I_M1/count_3 ), 
    .D0(\HALL_I_M1/n20 ), .C0(\HALL_I_M1/n16 ), .B0(\HALL_I_M1/count_9 ), 
    .A0(\HALL_I_M1/count_17 ), .M0(hall3_old), .LSR(hall1_old), .CLK(clkout_c), 
    .F0(\HALL_I_M1/n2263 ), .Q0(MA_m1_c_1), .F1(\HALL_I_M1/n16 ));
  HALL_I_M1_SLICE_246 \HALL_I_M1/SLICE_246 ( .D1(\HALL_I_M1/count_5 ), 
    .C1(\HALL_I_M1/count_1 ), .B1(\HALL_I_M1/count_18 ), 
    .A1(\HALL_I_M1/count_14 ), .D0(\HALL_I_M1/count_16 ), 
    .C0(\HALL_I_M1/count_4 ), .B0(\HALL_I_M1/n18 ), .A0(\HALL_I_M1/count_19 ), 
    .M1(\HALL_I_M1/hall2_lat ), .M0(H_B_m1_c), .CLK(clk_1mhz), 
    .F0(\HALL_I_M1/n20 ), .Q0(\HALL_I_M1/hall2_lat ), .F1(\HALL_I_M1/n18 ), 
    .Q1(hall2_old));
  SLICE_247 SLICE_247( .D1(hall2_old), .C1(hall1_old), 
    .B1(\HALL_I_M1/hall2_lat ), .A1(\HALL_I_M1/hall1_lat ), .D0(hall3_old), 
    .C0(\HALL_I_M1/n4 ), .B0(\HALL_I_M1/n2938 ), .A0(\HALL_I_M1/hall3_lat ), 
    .M1(\SPI_I/recv_buffer_8 ), .M0(\SPI_I/recv_buffer_9 ), 
    .CE(\SPI_I/enable_m1_N_573 ), .CLK(clkout_c), 
    .F0(\HALL_I_M1/clk_1mhz_enable_9 ), .Q0(LED3_c), .F1(\HALL_I_M1/n4 ), 
    .Q1(LED4_c));
  HALL_I_M4_SLICE_248 \HALL_I_M4/SLICE_248 ( .D1(hall1_old_adj_741), 
    .C1(\HALL_I_M4/hall2_lat ), .B1(\HALL_I_M4/hall1_lat ), 
    .A1(hall2_old_adj_742), .D0(\HALL_I_M4/n4 ), .C0(\HALL_I_M4/n2937 ), 
    .B0(hall3_old_adj_743), .A0(\HALL_I_M4/hall3_lat ), 
    .M1(\HALL_I_M4/hall2_lat ), .M0(H_B_m4_c), .CLK(clk_1mhz), 
    .F0(\HALL_I_M4/clk_1mhz_enable_7 ), .Q0(\HALL_I_M4/hall2_lat ), 
    .F1(\HALL_I_M4/n4 ), .Q1(hall2_old_adj_742));
  HALL_I_M4_SLICE_249 \HALL_I_M4/SLICE_249 ( .C1(\HALL_I_M4/count_2 ), 
    .A1(\HALL_I_M4/count_3 ), .D0(\HALL_I_M4/n20 ), .C0(\HALL_I_M4/count_17 ), 
    .B0(\HALL_I_M4/n16 ), .A0(\HALL_I_M4/count_9 ), .M1(\HALL_I_M4/hall1_lat ), 
    .M0(H_A_m4_c), .CLK(clk_1mhz), .F0(\HALL_I_M4/n2262 ), 
    .Q0(\HALL_I_M4/hall1_lat ), .F1(\HALL_I_M4/n16 ), .Q1(hall1_old_adj_741));
  HALL_I_M4_SLICE_250 \HALL_I_M4/SLICE_250 ( .D1(\HALL_I_M4/count_14 ), 
    .C1(\HALL_I_M4/count_18 ), .B1(\HALL_I_M4/count_1 ), 
    .A1(\HALL_I_M4/count_5 ), .D0(\HALL_I_M4/count_16 ), .C0(\HALL_I_M4/n18 ), 
    .B0(\HALL_I_M4/count_19 ), .A0(\HALL_I_M4/count_4 ), .F0(\HALL_I_M4/n20 ), 
    .F1(\HALL_I_M4/n18 ));
  HALL_I_M2_SLICE_251 \HALL_I_M2/SLICE_251 ( .D1(hall1_old_adj_735), 
    .C1(\HALL_I_M2/hall1_lat ), .B1(hall2_old_adj_736), 
    .A1(\HALL_I_M2/hall2_lat ), .D0(\HALL_I_M2/hall3_lat ), 
    .C0(\HALL_I_M2/n4 ), .A0(hall3_old_adj_737), .M1(H_C_m2_c), 
    .M0(\HALL_I_M2/hall2_lat ), .CLK(clk_1mhz), .F0(\HALL_I_M2/n2944 ), 
    .Q0(hall2_old_adj_736), .F1(\HALL_I_M2/n4 ), .Q1(\HALL_I_M2/hall3_lat ));
  HALL_I_M2_SLICE_252 \HALL_I_M2/SLICE_252 ( .D1(\HALL_I_M2/count_2 ), 
    .C1(\HALL_I_M2/n2782 ), .B1(\HALL_I_M2/count_5 ), .A1(\HALL_I_M2/n2776 ), 
    .D0(\HALL_I_M2/hall3_lat ), .C0(\HALL_I_M2/n2939 ), .B0(hall3_old_adj_737), 
    .A0(\HALL_I_M2/n4 ), .M1(H_B_m2_c), .M0(\HALL_I_M2/hall1_lat ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M2/n1485 ), .Q0(hall1_old_adj_735), 
    .F1(\HALL_I_M2/n2939 ), .Q1(\HALL_I_M2/hall2_lat ));
  HALL_I_M2_SLICE_253 \HALL_I_M2/SLICE_253 ( .D1(\HALL_I_M2/count_4 ), 
    .C1(\HALL_I_M2/count_1 ), .A1(\HALL_I_M2/count_16 ), .D0(\HALL_I_M2/n16 ), 
    .C0(\HALL_I_M2/n2790 ), .B0(\HALL_I_M2/n17 ), .A0(\HALL_I_M2/count_11 ), 
    .F0(\HALL_I_M2/n2776 ), .F1(\HALL_I_M2/n2790 ));
  SLICE_254 SLICE_254( .D1(\HALL_I_M2/count_9 ), .C1(\HALL_I_M2/count_14 ), 
    .B1(\HALL_I_M2/count_18 ), .A1(\HALL_I_M2/count_19 ), 
    .D0(\HALL_I_M2/count_17 ), .C0(\HALL_I_M2/n2264 ), 
    .A0(\HALL_I_M2/count_3 ), .M1(H_A_m2_c), .M0(\HALL_I_M1/hall3_lat ), 
    .CLK(clk_1mhz), .F0(\HALL_I_M2/n2782 ), .Q0(hall3_old), 
    .F1(\HALL_I_M2/n2264 ), .Q1(\HALL_I_M2/hall1_lat ));
  HALL_I_M3_SLICE_255 \HALL_I_M3/SLICE_255 ( .D1(\HALL_I_M3/hall2_lat ), 
    .C1(\HALL_I_M3/hall1_lat ), .B1(hall2_old_adj_739), .A1(hall1_old_adj_738), 
    .D0(\HALL_I_M3/hall3_lat ), .C0(\HALL_I_M3/n39 ), .B0(hall3_old_adj_740), 
    .A0(\HALL_I_M3/n4 ), .M1(\HALL_I_M3/hall1_lat ), .M0(H_A_m3_c), 
    .CLK(clk_1mhz), .F0(\HALL_I_M3/clk_1mhz_enable_8 ), 
    .Q0(\HALL_I_M3/hall1_lat ), .F1(\HALL_I_M3/n4 ), .Q1(hall1_old_adj_738));
  HALL_I_M3_SLICE_256 \HALL_I_M3/SLICE_256 ( .C1(\HALL_I_M3/count_1 ), 
    .B1(\HALL_I_M3/count_4 ), .A1(\HALL_I_M3/count_16 ), 
    .D0(\HALL_I_M3/count_11 ), .C0(\HALL_I_M3/n2792 ), .B0(\HALL_I_M3/n17 ), 
    .A0(\HALL_I_M3/n16 ), .F0(\HALL_I_M3/n2774 ), .F1(\HALL_I_M3/n2792 ));
  HALL_I_M3_SLICE_257 \HALL_I_M3/SLICE_257 ( .D1(\HALL_I_M3/count_14 ), 
    .C1(\HALL_I_M3/count_18 ), .B1(\HALL_I_M3/count_19 ), 
    .A1(\HALL_I_M3/count_9 ), .D0(\HALL_I_M3/count_17 ), 
    .C0(\HALL_I_M3/n2265 ), .A0(\HALL_I_M3/count_3 ), 
    .M1(\HALL_I_M3/hall2_lat ), .M0(H_B_m3_c), .CLK(clk_1mhz), 
    .F0(\HALL_I_M3/n2780 ), .Q0(\HALL_I_M3/hall2_lat ), .F1(\HALL_I_M3/n2265 ), 
    .Q1(hall2_old_adj_739));
  PWM_I_M1_SLICE_258 \PWM_I_M1/SLICE_258 ( .D1(\PWM_I_M1/cnt_4 ), 
    .C1(\PWM_I_M1/cnt_1 ), .B1(\PWM_I_M1/cnt_0 ), .A1(\PWM_I_M1/cnt_2 ), 
    .D0(\PWM_I_M1/cnt_9 ), .C0(\PWM_I_M1/n2788 ), .B0(\PWM_I_M1/n2770 ), 
    .A0(\PWM_I_M1/cnt_3 ), .F0(\PWM_I_M1/n1494 ), .F1(\PWM_I_M1/n2788 ));
  SPI_I_SLICE_259 \SPI_I/SLICE_259 ( .D1(\SPI_I/SCKold ), 
    .C1(\SPI_I/SCKlatched ), .B1(\SPI_I/CSlatched ), .D0(\SPI_I/SCKold ), 
    .C0(\SPI_I/SCKlatched ), .B0(\SPI_I/CSlatched ), 
    .M1(\SPI_I/recv_buffer_33 ), .M0(\SPI_I/recv_buffer_32 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), 
    .F0(\SPI_I/clkout_c_enable_88 ), .Q0(\SPI_I/recv_buffer_31 ), 
    .F1(\SPI_I/n2941 ), .Q1(\SPI_I/recv_buffer_32 ));
  SPI_I_SLICE_260 \SPI_I/SLICE_260 ( .D1(\SPI_I/send_buffer_62 ), 
    .C1(\SPI_I/CSold ), .B1(speed_m2_8), .A1(\SPI_I/CSlatched ), 
    .C0(\SPI_I/CSold ), .A0(\SPI_I/CSlatched ), .M1(\SPI_I/CSlatched ), 
    .M0(CS_c), .CLK(clkout_c), .F0(\SPI_I/enable_m1_N_573 ), 
    .Q0(\SPI_I/CSlatched ), .F1(\SPI_I/n1743 ), .Q1(\SPI_I/CSold ));
  SPI_I_SLICE_261 \SPI_I/SLICE_261 ( .C1(\SPI_I/send_buffer_7 ), 
    .B1(\SPI_I/CSlatched ), .A1(\SPI_I/n3030 ), .D0(speed_m3_10), 
    .C0(\SPI_I/send_buffer_43 ), .B0(\SPI_I/CSlatched ), .A0(\SPI_I/n3030 ), 
    .M1(\SPI_I/recv_buffer_37 ), .M0(\SPI_I/recv_buffer_36 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n61 ), 
    .Q0(\SPI_I/recv_buffer_35 ), .F1(\SPI_I/n97 ), .Q1(\SPI_I/recv_buffer_36 ));
  SPI_I_SLICE_262 \SPI_I/SLICE_262 ( .D1(\SPI_I/send_buffer_8 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n3030 ), .A1(LED4_c), .D0(speed_m3_9), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n3030 ), .A0(\SPI_I/send_buffer_42 ), 
    .M1(\SPI_I/recv_buffer_35 ), .M0(\SPI_I/recv_buffer_34 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n62 ), 
    .Q0(\SPI_I/recv_buffer_33 ), .F1(\SPI_I/n96 ), .Q1(\SPI_I/recv_buffer_34 ));
  SPI_I_SLICE_263 \SPI_I/SLICE_263 ( .D1(LED3_c), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/send_buffer_9 ), .A1(\SPI_I/n3030 ), .D0(speed_m2_5), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_59 ), .A0(\SPI_I/n3030 ), 
    .M1(\SPI_I/recv_buffer_60 ), .M0(\SPI_I/recv_buffer_59 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n45 ), 
    .Q0(\SPI_I/recv_buffer_58 ), .F1(\SPI_I/n95 ), .Q1(\SPI_I/recv_buffer_59 ));
  SPI_I_SLICE_264 \SPI_I/SLICE_264 ( .D1(LED2_c), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/send_buffer_10 ), .A1(\SPI_I/n3030 ), .D0(\SPI_I/CSlatched ), 
    .B0(\SPI_I/send_buffer_6 ), .A0(\SPI_I/n3030 ), 
    .M1(\SPI_I/recv_buffer_29 ), .M0(\SPI_I/recv_buffer_28 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n98 ), 
    .Q0(\SPI_I/recv_buffer_27 ), .F1(\SPI_I/n94 ), .Q1(\SPI_I/recv_buffer_28 ));
  SPI_I_SLICE_265 \SPI_I/SLICE_265 ( .D1(\SPI_I/CSlatched ), 
    .C1(\SPI_I/CSold ), .B1(\SPI_I/send_buffer_23 ), .A1(speed_m4_11), 
    .D0(\SPI_I/CSlatched ), .C0(\SPI_I/CSold ), .B0(\SPI_I/send_buffer_58 ), 
    .A0(speed_m2_4), .M1(\SPI_I/recv_buffer_18 ), .M0(\SPI_I/recv_buffer_9 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n46 ), 
    .Q0(\SPI_I/recv_buffer_8 ), .F1(\SPI_I/n81 ), .Q1(\SPI_I/recv_buffer_17 ));
  SPI_I_SLICE_266 \SPI_I/SLICE_266 ( .D1(\SPI_I/send_buffer_11 ), 
    .C1(\SPI_I/CSlatched ), .B1(LED1_c), .A1(\SPI_I/n3030 ), .D0(speed_m2_3), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_57 ), .A0(\SPI_I/n3030 ), 
    .M1(\SPI_I/recv_buffer_58 ), .M0(\SPI_I/recv_buffer_13 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n47 ), 
    .Q0(\SPI_I/recv_buffer_12 ), .F1(\SPI_I/n93 ), .Q1(\SPI_I/recv_buffer_57 ));
  SPI_I_SLICE_267 \SPI_I/SLICE_267 ( .D1(speed_m4_0), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/send_buffer_12 ), .A1(\SPI_I/n3030 ), 
    .D0(\SPI_I/send_buffer_56 ), .C0(\SPI_I/CSlatched ), .B0(speed_m2_2), 
    .A0(\SPI_I/n3030 ), .M1(\SPI_I/recv_buffer_57 ), 
    .M0(\SPI_I/recv_buffer_56 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n48 ), .Q0(\SPI_I/recv_buffer_55 ), 
    .F1(\SPI_I/n92 ), .Q1(\SPI_I/recv_buffer_56 ));
  SPI_I_SLICE_268 \SPI_I/SLICE_268 ( .D1(\SPI_I/send_buffer_13 ), 
    .C1(speed_m4_1), .B1(\SPI_I/n3030 ), .A1(\SPI_I/CSlatched ), 
    .D0(\SPI_I/CSlatched ), .C0(\SPI_I/send_buffer_60 ), .B0(\SPI_I/n3030 ), 
    .A0(speed_m2_6), .M1(\SPI_I/recv_buffer_62 ), .M0(\SPI_I/recv_buffer_61 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n44 ), 
    .Q0(\SPI_I/recv_buffer_60 ), .F1(\SPI_I/n91 ), .Q1(\SPI_I/recv_buffer_61 ));
  SPI_I_SLICE_269 \SPI_I/SLICE_269 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/send_buffer_14 ), .B1(\SPI_I/CSlatched ), .A1(speed_m4_2), 
    .D0(\SPI_I/n3030 ), .C0(speed_m2_1), .B0(\SPI_I/CSlatched ), 
    .A0(\SPI_I/send_buffer_55 ), .M1(\SPI_I/recv_buffer_55 ), 
    .M0(\SPI_I/recv_buffer_54 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n49 ), .Q0(\SPI_I/recv_buffer_53 ), 
    .F1(\SPI_I/n90 ), .Q1(\SPI_I/recv_buffer_54 ));
  SPI_I_SLICE_270 \SPI_I/SLICE_270 ( .D1(speed_m2_7), .C1(\SPI_I/n3030 ), 
    .B1(\SPI_I/send_buffer_61 ), .A1(\SPI_I/CSlatched ), .D0(speed_m2_0), 
    .C0(\SPI_I/n3030 ), .B0(\SPI_I/send_buffer_54 ), .A0(\SPI_I/CSlatched ), 
    .M1(\SPI_I/recv_buffer_53 ), .M0(\SPI_I/recv_buffer_52 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n50 ), 
    .Q0(\SPI_I/recv_buffer_51 ), .F1(\SPI_I/n43 ), .Q1(\SPI_I/recv_buffer_52 ));
  SPI_I_SLICE_271 \SPI_I/SLICE_271 ( .D1(\SPI_I/send_buffer_15 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m4_3), .A1(\SPI_I/n3030 ), 
    .D0(\SPI_I/send_buffer_53 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n3030 ), 
    .M1(\SPI_I/recv_buffer_10 ), .M0(\SPI_I/recv_buffer_27 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n51 ), 
    .Q0(\SPI_I/recv_buffer_26 ), .F1(\SPI_I/n89 ), .Q1(\SPI_I/recv_buffer_9 ));
  SPI_I_SLICE_272 \SPI_I/SLICE_272 ( .D1(speed_m4_4), .C1(\SPI_I/CSlatched ), 
    .B1(\SPI_I/send_buffer_16 ), .A1(\SPI_I/n3030 ), .D0(speed_m3_19), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_52 ), .A0(\SPI_I/n3030 ), 
    .M1(\SPI_I/recv_buffer_51 ), .M0(\SPI_I/recv_buffer_50 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n52 ), 
    .Q0(\SPI_I/recv_buffer_49 ), .F1(\SPI_I/n88 ), .Q1(\SPI_I/recv_buffer_50 ));
  SPI_I_SLICE_273 \SPI_I/SLICE_273 ( .D1(\SPI_I/send_buffer_17 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m4_5), .A1(\SPI_I/n3030 ), 
    .D0(\SPI_I/send_buffer_51 ), .C0(\SPI_I/CSlatched ), .B0(speed_m3_18), 
    .A0(\SPI_I/n3030 ), .M1(\SPI_I/recv_buffer_49 ), 
    .M0(\SPI_I/recv_buffer_48 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n53 ), .Q0(\SPI_I/recv_buffer_47 ), 
    .F1(\SPI_I/n87 ), .Q1(\SPI_I/recv_buffer_48 ));
  SPI_I_SLICE_274 \SPI_I/SLICE_274 ( .D1(\SPI_I/send_buffer_18 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m4_6), .A1(\SPI_I/n3030 ), 
    .D0(speed_m3_17), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_50 ), 
    .A0(\SPI_I/n3030 ), .M1(\SPI_I/recv_buffer_12 ), 
    .M0(\SPI_I/recv_buffer_47 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n54 ), .Q0(\SPI_I/recv_buffer_46 ), 
    .F1(\SPI_I/n86 ), .Q1(\SPI_I/recv_buffer_11 ));
  SPI_I_SLICE_275 \SPI_I/SLICE_275 ( .D1(\SPI_I/send_buffer_19 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n3030 ), .A1(speed_m4_7), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/CSlatched ), .A0(\SPI_I/send_buffer_5 ), 
    .M1(\SPI_I/recv_buffer_31 ), .M0(\SPI_I/recv_buffer_30 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n99 ), 
    .Q0(\SPI_I/recv_buffer_29 ), .F1(\SPI_I/n85 ), .Q1(\SPI_I/recv_buffer_30 ));
  SPI_I_SLICE_276 \SPI_I/SLICE_276 ( .D1(\SPI_I/send_buffer_20 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n3030 ), .A1(speed_m4_8), 
    .D0(\SPI_I/send_buffer_49 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n3030 ), 
    .A0(speed_m3_16), .M1(\SPI_I/recv_buffer_46 ), .M0(\SPI_I/recv_buffer_45 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n55 ), 
    .Q0(\SPI_I/recv_buffer_44 ), .F1(\SPI_I/n84 ), .Q1(\SPI_I/recv_buffer_45 ));
  SPI_I_SLICE_277 \SPI_I/SLICE_277 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/send_buffer_21 ), .B1(\SPI_I/CSlatched ), .A1(speed_m4_9), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/send_buffer_92 ), .B0(\SPI_I/CSlatched ), 
    .A0(speed_m1_17), .M1(\SPI_I/recv_buffer_10 ), .M0(\SPI_I/recv_buffer_11 ), 
    .CE(\SPI_I/enable_m1_N_573 ), .CLK(clkout_c), .F0(\SPI_I/n12 ), 
    .Q0(LED1_c), .F1(\SPI_I/n83 ), .Q1(LED2_c));
  SPI_I_SLICE_278 \SPI_I/SLICE_278 ( .D1(\SPI_I/n3030 ), .C1(speed_m4_10), 
    .B1(\SPI_I/CSlatched ), .A1(\SPI_I/send_buffer_22 ), .D0(\SPI_I/n3030 ), 
    .C0(speed_m1_16), .B0(\SPI_I/CSlatched ), .A0(\SPI_I/send_buffer_91 ), 
    .M1(\SPI_I/recv_buffer_17 ), .M0(MOSI_c), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n13 ), .Q0(\SPI_I/recv_buffer_95 ), 
    .F1(\SPI_I/n82 ), .Q1(\SPI_I/recv_buffer_16 ));
  SPI_I_SLICE_279 \SPI_I/SLICE_279 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/send_buffer_63 ), .B1(speed_m2_9), .A1(\SPI_I/CSlatched ), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/send_buffer_90 ), .B0(speed_m1_15), 
    .A0(\SPI_I/CSlatched ), .M1(\SPI_I/recv_buffer_95 ), 
    .M0(\SPI_I/recv_buffer_94 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n14 ), .Q0(\SPI_I/recv_buffer_93 ), 
    .F1(\SPI_I/n41 ), .Q1(\SPI_I/recv_buffer_94 ));
  SPI_I_SLICE_280 \SPI_I/SLICE_280 ( .D1(\SPI_I/send_buffer_24 ), 
    .C1(speed_m4_12), .B1(\SPI_I/n3030 ), .A1(\SPI_I/CSlatched ), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/send_buffer_89 ), .B0(speed_m1_14), 
    .A0(\SPI_I/CSlatched ), .M1(\SPI_I/recv_buffer_93 ), 
    .M0(\SPI_I/recv_buffer_92 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n15 ), .Q0(\SPI_I/recv_buffer_91 ), 
    .F1(\SPI_I/n80 ), .Q1(\SPI_I/recv_buffer_92 ));
  SPI_I_SLICE_281 \SPI_I/SLICE_281 ( .D1(\SPI_I/CSold ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m4_15), .A1(\SPI_I/send_buffer_27 ), 
    .D0(\SPI_I/CSold ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_73 ), 
    .A0(speed_m2_19), .M1(\SPI_I/recv_buffer_20 ), .M0(\SPI_I/recv_buffer_19 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n1786 ), 
    .Q0(\SPI_I/recv_buffer_18 ), .F1(\SPI_I/n1700 ), 
    .Q1(\SPI_I/recv_buffer_19 ));
  SPI_I_SLICE_282 \SPI_I/SLICE_282 ( .D1(\SPI_I/n3030 ), .C1(speed_m4_13), 
    .B1(\SPI_I/send_buffer_25 ), .A1(\SPI_I/CSlatched ), .D0(\SPI_I/n3030 ), 
    .C0(\SPI_I/send_buffer_88 ), .B0(speed_m1_13), .A0(\SPI_I/CSlatched ), 
    .M1(\SPI_I/recv_buffer_91 ), .M0(\SPI_I/recv_buffer_90 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n16 ), 
    .Q0(\SPI_I/recv_buffer_89 ), .F1(\SPI_I/n79 ), .Q1(\SPI_I/recv_buffer_90 ));
  SPI_I_SLICE_283 \SPI_I/SLICE_283 ( .D1(\SPI_I/send_buffer_26 ), 
    .C1(\SPI_I/n3030 ), .B1(speed_m4_14), .A1(\SPI_I/CSlatched ), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/send_buffer_87 ), .B0(speed_m1_12), 
    .A0(\SPI_I/CSlatched ), .M1(\SPI_I/recv_buffer_89 ), 
    .M0(\SPI_I/recv_buffer_88 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n17 ), .Q0(\SPI_I/recv_buffer_87 ), 
    .F1(\SPI_I/n78 ), .Q1(\SPI_I/recv_buffer_88 ));
  SPI_I_SLICE_284 \SPI_I/SLICE_284 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m4_16), .A1(\SPI_I/send_buffer_28 ), 
    .D0(\SPI_I/send_buffer_86 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n3030 ), 
    .A0(speed_m1_11), .M1(\SPI_I/recv_buffer_16 ), .M0(\SPI_I/recv_buffer_87 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n18 ), 
    .Q0(\SPI_I/recv_buffer_86 ), .F1(\SPI_I/n76 ), .Q1(\SPI_I/recv_buffer_15 ));
  SPI_I_SLICE_285 \SPI_I/SLICE_285 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/send_buffer_29 ), .B1(speed_m4_17), .A1(\SPI_I/CSlatched ), 
    .D0(\SPI_I/n3030 ), .C0(speed_m1_10), .B0(\SPI_I/send_buffer_85 ), 
    .A0(\SPI_I/CSlatched ), .M1(\SPI_I/recv_buffer_86 ), 
    .M0(\SPI_I/recv_buffer_85 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n19 ), .Q0(\SPI_I/recv_buffer_84 ), 
    .F1(\SPI_I/n75 ), .Q1(\SPI_I/recv_buffer_85 ));
  SPI_I_SLICE_286 \SPI_I/SLICE_286 ( .D1(speed_m4_18), 
    .C1(\SPI_I/send_buffer_30 ), .B1(\SPI_I/n3030 ), .A1(\SPI_I/CSlatched ), 
    .D0(speed_m1_9), .C0(\SPI_I/send_buffer_84 ), .B0(\SPI_I/n3030 ), 
    .A0(\SPI_I/CSlatched ), .M1(\SPI_I/recv_buffer_84 ), 
    .M0(\SPI_I/recv_buffer_83 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n20 ), .Q0(\SPI_I/recv_buffer_82 ), 
    .F1(\SPI_I/n74 ), .Q1(\SPI_I/recv_buffer_83 ));
  SPI_I_SLICE_287 \SPI_I/SLICE_287 ( .D1(speed_m4_19), 
    .C1(\SPI_I/send_buffer_31 ), .B1(\SPI_I/n3030 ), .A1(\SPI_I/CSlatched ), 
    .D0(speed_m1_8), .C0(\SPI_I/send_buffer_83 ), .B0(\SPI_I/n3030 ), 
    .A0(\SPI_I/CSlatched ), .M1(\SPI_I/recv_buffer_82 ), 
    .M0(\SPI_I/recv_buffer_81 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n21 ), .Q0(\SPI_I/recv_buffer_80 ), 
    .F1(\SPI_I/n73 ), .Q1(\SPI_I/recv_buffer_81 ));
  SPI_I_SLICE_288 \SPI_I/SLICE_288 ( .D1(\SPI_I/CSlatched ), 
    .C1(\SPI_I/n3030 ), .B1(speed_m2_10), .A1(\SPI_I/send_buffer_64 ), 
    .D0(\SPI_I/CSlatched ), .C0(\SPI_I/n3030 ), .B0(\SPI_I/send_buffer_82 ), 
    .A0(speed_m1_7), .M1(\SPI_I/recv_buffer_80 ), .M0(\SPI_I/recv_buffer_79 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n22 ), 
    .Q0(\SPI_I/recv_buffer_78 ), .F1(\SPI_I/n40 ), .Q1(\SPI_I/recv_buffer_79 ));
  SPI_I_SLICE_289 \SPI_I/SLICE_289 ( .D1(\SPI_I/send_buffer_32 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n3030 ), .D0(speed_m1_6), 
    .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n3030 ), .A0(\SPI_I/send_buffer_81 ), 
    .M1(\SPI_I/recv_buffer_78 ), .M0(\SPI_I/recv_buffer_15 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n23 ), 
    .Q0(\SPI_I/recv_buffer_14 ), .F1(\SPI_I/n72 ), .Q1(\SPI_I/recv_buffer_77 ));
  SPI_I_SLICE_290 \SPI_I/SLICE_290 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/send_buffer_33 ), .A1(speed_m3_0), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/CSlatched ), .B0(speed_m1_5), 
    .A0(\SPI_I/send_buffer_80 ), .M1(\SPI_I/recv_buffer_77 ), 
    .M0(\SPI_I/recv_buffer_76 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n24 ), .Q0(\SPI_I/recv_buffer_75 ), 
    .F1(\SPI_I/n71 ), .Q1(\SPI_I/recv_buffer_76 ));
  SPI_I_SLICE_291 \SPI_I/SLICE_291 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/send_buffer_34 ), .A1(speed_m3_1), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_79 ), 
    .A0(speed_m1_4), .M1(\SPI_I/recv_buffer_75 ), .M0(\SPI_I/recv_buffer_74 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n25 ), 
    .Q0(\SPI_I/recv_buffer_73 ), .F1(\SPI_I/n70 ), .Q1(\SPI_I/recv_buffer_74 ));
  SPI_I_SLICE_292 \SPI_I/SLICE_292 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m3_2), .A1(\SPI_I/send_buffer_35 ), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_78 ), 
    .A0(speed_m1_3), .M1(\SPI_I/recv_buffer_73 ), .M0(\SPI_I/recv_buffer_72 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n26 ), 
    .Q0(\SPI_I/recv_buffer_71 ), .F1(\SPI_I/n69 ), .Q1(\SPI_I/recv_buffer_72 ));
  SPI_I_SLICE_293 \SPI_I/SLICE_293 ( .D1(\SPI_I/send_buffer_36 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n3030 ), .A1(speed_m3_3), 
    .D0(\SPI_I/send_buffer_77 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n3030 ), 
    .A0(speed_m1_2), .M1(\SPI_I/recv_buffer_71 ), .M0(\SPI_I/recv_buffer_70 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n27 ), 
    .Q0(\SPI_I/recv_buffer_69 ), .F1(\SPI_I/n68 ), .Q1(\SPI_I/recv_buffer_70 ));
  SPI_I_SLICE_294 \SPI_I/SLICE_294 ( .D1(speed_m3_4), 
    .C1(\SPI_I/send_buffer_37 ), .B1(\SPI_I/CSlatched ), .A1(\SPI_I/n3030 ), 
    .D0(\SPI_I/send_buffer_76 ), .C0(speed_m1_1), .B0(\SPI_I/CSlatched ), 
    .A0(\SPI_I/n3030 ), .M1(\SPI_I/recv_buffer_69 ), 
    .M0(\SPI_I/recv_buffer_68 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n28 ), .Q0(\SPI_I/recv_buffer_67 ), 
    .F1(\SPI_I/n67 ), .Q1(\SPI_I/recv_buffer_68 ));
  SPI_I_SLICE_295 \SPI_I/SLICE_295 ( .D1(\SPI_I/CSlatched ), 
    .C1(\SPI_I/n3030 ), .B1(speed_m3_5), .A1(\SPI_I/send_buffer_38 ), 
    .D0(\SPI_I/CSlatched ), .C0(\SPI_I/n3030 ), .B0(\SPI_I/send_buffer_75 ), 
    .A0(speed_m1_0), .M1(\SPI_I/recv_buffer_14 ), .M0(\SPI_I/recv_buffer_67 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n29 ), 
    .Q0(\SPI_I/recv_buffer_66 ), .F1(\SPI_I/n66 ), .Q1(\SPI_I/recv_buffer_13 ));
  SPI_I_SLICE_296 \SPI_I/SLICE_296 ( .D1(\SPI_I/send_buffer_39 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m3_6), .A1(\SPI_I/n3030 ), 
    .D0(\SPI_I/send_buffer_74 ), .C0(\SPI_I/CSlatched ), .A0(\SPI_I/n3030 ), 
    .M1(\SPI_I/recv_buffer_26 ), .M0(\SPI_I/recv_buffer_25 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n30 ), 
    .Q0(\SPI_I/recv_buffer_24 ), .F1(\SPI_I/n65 ), .Q1(\SPI_I/recv_buffer_25 ));
  SPI_I_SLICE_297 \SPI_I/SLICE_297 ( .D1(\SPI_I/send_buffer_40 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m3_7), .A1(\SPI_I/n3030 ), 
    .D0(\SPI_I/send_buffer_48 ), .C0(\SPI_I/CSlatched ), .B0(speed_m3_15), 
    .A0(\SPI_I/n3030 ), .M1(\SPI_I/recv_buffer_44 ), 
    .M0(\SPI_I/recv_buffer_43 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n56 ), .Q0(\SPI_I/recv_buffer_42 ), 
    .F1(\SPI_I/n64 ), .Q1(\SPI_I/recv_buffer_43 ));
  SPI_I_SLICE_298 \SPI_I/SLICE_298 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/send_buffer_41 ), .A1(speed_m3_8), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_4 ), 
    .M1(\SPI_I/recv_buffer_22 ), .M0(\SPI_I/recv_buffer_21 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n100 ), 
    .Q0(\SPI_I/recv_buffer_20 ), .F1(\SPI_I/n63 ), .Q1(\SPI_I/recv_buffer_21 ));
  SPI_I_SLICE_299 \SPI_I/SLICE_299 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m2_11), .A1(\SPI_I/send_buffer_65 ), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_47 ), 
    .A0(speed_m3_14), .M1(\SPI_I/recv_buffer_42 ), .M0(\SPI_I/recv_buffer_41 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n57 ), 
    .Q0(\SPI_I/recv_buffer_40 ), .F1(\SPI_I/n39 ), .Q1(\SPI_I/recv_buffer_41 ));
  SPI_I_SLICE_300 \SPI_I/SLICE_300 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m2_12), .A1(\SPI_I/send_buffer_66 ), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_46 ), 
    .A0(speed_m3_13), .M1(\SPI_I/recv_buffer_40 ), .M0(\SPI_I/recv_buffer_39 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n58 ), 
    .Q0(\SPI_I/recv_buffer_38 ), .F1(\SPI_I/n38 ), .Q1(\SPI_I/recv_buffer_39 ));
  SPI_I_SLICE_301 \SPI_I/SLICE_301 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/send_buffer_67 ), .B1(\SPI_I/CSlatched ), .A1(speed_m2_13), 
    .D0(\SPI_I/n3030 ), .B0(\SPI_I/CSlatched ), .A0(\SPI_I/send_buffer_3 ), 
    .M1(\SPI_I/recv_buffer_24 ), .M0(\SPI_I/recv_buffer_23 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n101 ), 
    .Q0(\SPI_I/recv_buffer_22 ), .F1(\SPI_I/n37 ), .Q1(\SPI_I/recv_buffer_23 ));
  SPI_I_SLICE_302 \SPI_I/SLICE_302 ( .D1(\SPI_I/n3030 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/send_buffer_68 ), .A1(speed_m2_14), 
    .D0(\SPI_I/n3030 ), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_45 ), 
    .A0(speed_m3_12), .M1(\SPI_I/recv_buffer_38 ), .M0(\SPI_I/recv_buffer_11 ), 
    .CE(\SPI_I/clkout_c_enable_88 ), .CLK(clkout_c), .F0(\SPI_I/n59 ), 
    .Q0(\SPI_I/recv_buffer_10 ), .F1(\SPI_I/n36 ), .Q1(\SPI_I/recv_buffer_37 ));
  SPI_I_SLICE_303 \SPI_I/SLICE_303 ( .D1(\SPI_I/send_buffer_69 ), 
    .C1(\SPI_I/CSlatched ), .B1(speed_m2_15), .A1(\SPI_I/n3030 ), 
    .D0(speed_m2_18), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/send_buffer_72 ), 
    .A0(\SPI_I/n3030 ), .M1(\SPI_I/recv_buffer_66 ), 
    .M0(\SPI_I/recv_buffer_65 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n32 ), .Q0(\SPI_I/recv_buffer_64 ), 
    .F1(\SPI_I/n35 ), .Q1(\SPI_I/recv_buffer_65 ));
  SPI_I_SLICE_304 \SPI_I/SLICE_304 ( .D1(\SPI_I/send_buffer_70 ), 
    .C1(\SPI_I/CSlatched ), .B1(\SPI_I/n3030 ), .A1(speed_m2_16), 
    .D0(speed_m2_17), .C0(\SPI_I/CSlatched ), .B0(\SPI_I/n3030 ), 
    .A0(\SPI_I/send_buffer_71 ), .M1(\SPI_I/recv_buffer_64 ), 
    .M0(\SPI_I/recv_buffer_63 ), .CE(\SPI_I/clkout_c_enable_88 ), 
    .CLK(clkout_c), .F0(\SPI_I/n33 ), .Q0(\SPI_I/recv_buffer_62 ), 
    .F1(\SPI_I/n34 ), .Q1(\SPI_I/recv_buffer_63 ));
  HALL_I_M3_SLICE_305 \HALL_I_M3/SLICE_305 ( .D1(\HALL_I_M3/count_13 ), 
    .C1(\HALL_I_M3/count_15 ), .B1(\HALL_I_M3/count_12 ), 
    .A1(\HALL_I_M3/count_10 ), .D0(\HALL_I_M3/count_8 ), 
    .C0(\HALL_I_M3/count_7 ), .B0(\HALL_I_M3/count_0 ), 
    .A0(\HALL_I_M3/count_6 ), .M1(\HALL_I_M3/hall3_lat ), .M0(H_C_m3_c), 
    .CLK(clk_1mhz), .F0(\HALL_I_M3/n16 ), .Q0(\HALL_I_M3/hall3_lat ), 
    .F1(\HALL_I_M3/n17 ), .Q1(hall3_old_adj_740));
  HALL_I_M2_SLICE_306 \HALL_I_M2/SLICE_306 ( .D1(\HALL_I_M2/count_12 ), 
    .C1(\HALL_I_M2/count_10 ), .B1(\HALL_I_M2/count_15 ), 
    .A1(\HALL_I_M2/count_13 ), .D0(\HALL_I_M2/count_8 ), 
    .C0(\HALL_I_M2/count_0 ), .B0(\HALL_I_M2/count_7 ), 
    .A0(\HALL_I_M2/count_6 ), .M0(\HALL_I_M2/hall3_lat ), .CLK(clk_1mhz), 
    .F0(\HALL_I_M2/n16 ), .Q0(hall3_old_adj_737), .F1(\HALL_I_M2/n17 ));
  HALL_I_M4_SLICE_307 \HALL_I_M4/SLICE_307 ( .D1(\HALL_I_M4/count_15 ), 
    .C1(\HALL_I_M4/count_10 ), .D0(\HALL_I_M4/count_8 ), 
    .B0(\HALL_I_M4/count_12 ), .A0(\HALL_I_M4/count_11 ), 
    .M1(\HALL_I_M4/hall3_lat ), .M0(H_C_m4_c), .CLK(clk_1mhz), 
    .F0(\HALL_I_M4/n14 ), .Q0(\HALL_I_M4/hall3_lat ), .F1(\HALL_I_M4/n13 ), 
    .Q1(hall3_old_adj_743));
  SLICE_308 SLICE_308( .C1(\HALL_I_M1/count_15 ), .A1(\HALL_I_M1/count_10 ), 
    .D0(\HALL_I_M1/count_8 ), .C0(\HALL_I_M1/count_12 ), 
    .A0(\HALL_I_M1/count_11 ), .M0(\CLKDIV_I/pwm_buf ), .CLK(clkout_c), 
    .F0(\HALL_I_M1/n14 ), .Q0(pwm_clk), .F1(\HALL_I_M1/n13 ));
  LED1 LED1_I( .PADDO(LED1_c), .LED1(LED1));
  MISO MISO_I( .PADDT(\SPI_I/MISO_N_570 ), .PADDO(MISO_N_569), .MISO(MISO));
  LED2 LED2_I( .PADDO(LED2_c), .LED2(LED2));
  LED3 LED3_I( .PADDO(LED3_c), .LED3(LED3));
  LED4 LED4_I( .PADDO(LED4_c), .LED4(LED4));
  clkout clkout_I( .PADDO(clkout_c), .clkout(clkout));
  MA_m1_1_ \MA_m1[1]_I ( .PADDO(MA_m1_c_1), .MAm11(MA_m1[1]));
  MA_m1_0_ \MA_m1[0]_I ( .PADDO(MA_m1_c_0), .MAm10(MA_m1[0]));
  MB_m1_1_ \MB_m1[1]_I ( .PADDO(MB_m1_c_1), .MBm11(MB_m1[1]));
  MB_m1_0_ \MB_m1[0]_I ( .PADDO(MB_m1_c_0), .MBm10(MB_m1[0]));
  MC_m1_1_ \MC_m1[1]_I ( .PADDO(MC_m1_c_1), .MCm11(MC_m1[1]));
  MC_m1_0_ \MC_m1[0]_I ( .PADDO(MC_m1_c_0), .MCm10(MC_m1[0]));
  MA_m2_1_ \MA_m2[1]_I ( .PADDO(MA_m2_c_1), .MAm21(MA_m2[1]));
  MA_m2_0_ \MA_m2[0]_I ( .PADDO(MA_m2_c_0), .MAm20(MA_m2[0]));
  MB_m2_1_ \MB_m2[1]_I ( .PADDO(MB_m2_c_1), .MBm21(MB_m2[1]));
  MB_m2_0_ \MB_m2[0]_I ( .PADDO(MA_m2_c_0), .MBm20(MB_m2[0]));
  MC_m2_1_ \MC_m2[1]_I ( .PADDO(MC_m2_c_1), .MCm21(MC_m2[1]));
  MC_m2_0_ \MC_m2[0]_I ( .PADDO(MA_m2_c_0), .MCm20(MC_m2[0]));
  MA_m3_1_ \MA_m3[1]_I ( .PADDO(MA_m3_c_1), .MAm31(MA_m3[1]));
  MA_m3_0_ \MA_m3[0]_I ( .PADDO(MA_m3_c_0), .MAm30(MA_m3[0]));
  MB_m3_1_ \MB_m3[1]_I ( .PADDO(MB_m3_c_1), .MBm31(MB_m3[1]));
  MB_m3_0_ \MB_m3[0]_I ( .PADDO(MA_m3_c_0), .MBm30(MB_m3[0]));
  MC_m3_1_ \MC_m3[1]_I ( .PADDO(MC_m3_c_1), .MCm31(MC_m3[1]));
  MC_m3_0_ \MC_m3[0]_I ( .PADDO(MA_m3_c_0), .MCm30(MC_m3[0]));
  MA_m4_1_ \MA_m4[1]_I ( .PADDO(MA_m4_c_1), .MAm41(MA_m4[1]));
  MA_m4_0_ \MA_m4[0]_I ( .PADDO(MA_m4_c_0), .MAm40(MA_m4[0]));
  MB_m4_1_ \MB_m4[1]_I ( .PADDO(MB_m4_c_1), .MBm41(MB_m4[1]));
  MB_m4_0_ \MB_m4[0]_I ( .PADDO(MA_m4_c_0), .MBm40(MB_m4[0]));
  MC_m4_1_ \MC_m4[1]_I ( .PADDO(MC_m4_c_1), .MCm41(MC_m4[1]));
  MC_m4_0_ \MC_m4[0]_I ( .PADDO(MA_m4_c_0), .MCm40(MC_m4[0]));
  CS CS_I( .PADDI(CS_c), .CS(CS));
  SCK SCK_I( .PADDI(SCK_c), .SCK(SCK));
  MOSI MOSI_I( .PADDI(MOSI_c), .MOSI(MOSI));
  H_A_m1 H_A_m1_I( .PADDI(H_A_m1_c), .H_A_m1(H_A_m1));
  H_B_m1 H_B_m1_I( .PADDI(H_B_m1_c), .H_B_m1(H_B_m1));
  H_C_m1 H_C_m1_I( .PADDI(H_C_m1_c), .H_C_m1(H_C_m1));
  H_A_m2 H_A_m2_I( .PADDI(H_A_m2_c), .H_A_m2(H_A_m2));
  H_B_m2 H_B_m2_I( .PADDI(H_B_m2_c), .H_B_m2(H_B_m2));
  H_C_m2 H_C_m2_I( .PADDI(H_C_m2_c), .H_C_m2(H_C_m2));
  H_A_m3 H_A_m3_I( .PADDI(H_A_m3_c), .H_A_m3(H_A_m3));
  H_B_m3 H_B_m3_I( .PADDI(H_B_m3_c), .H_B_m3(H_B_m3));
  H_C_m3 H_C_m3_I( .PADDI(H_C_m3_c), .H_C_m3(H_C_m3));
  H_A_m4 H_A_m4_I( .PADDI(H_A_m4_c), .H_A_m4(H_A_m4));
  H_B_m4 H_B_m4_I( .PADDI(H_B_m4_c), .H_B_m4(H_B_m4));
  H_C_m4 H_C_m4_I( .PADDI(H_C_m4_c), .H_C_m4(H_C_m4));
  OSCInst0 OSCInst0( .OSC(clkout_c));
  GSR_INST GSR_INST( .GSRNET(LED1_c));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
endmodule

module HALL_I_M1_SLICE_0 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \HALL_I_M1/add_7_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module HALL_I_M1_SLICE_1 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module HALL_I_M1_SLICE_2 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \HALL_I_M1/add_7_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module HALL_I_M1_SLICE_3 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_4 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_5 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_6 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_7 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_8 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_9 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_10 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M1/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M1/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M1/add_7_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_11 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \HALL_I_M4/add_7_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_12 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_13 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_14 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_15 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_16 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_17 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_18 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_19 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_20 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M4/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M4/add_7_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_21 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \HALL_I_M4/count__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \HALL_I_M4/add_7_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_22 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \HALL_I_M2/add_7_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_23 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_24 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_25 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_26 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_27 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_28 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \HALL_I_M2/add_7_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_29 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_30 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_31 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_32 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M2/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M2/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M2/add_7_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_33 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu2 \HALL_I_M3/add_7_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_34 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_35 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_36 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_37 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_38 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_39 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_40 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_41 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_42 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \HALL_I_M3/count__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20001 \HALL_I_M3/add_7_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_43 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \HALL_I_M3/count__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \HALL_I_M3/add_7_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM_I_M1_SLICE_44 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \PWM_I_M1/cnt_57__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20003 \PWM_I_M1/cnt_57_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM_I_M1_SLICE_45 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \PWM_I_M1/cnt_57__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \PWM_I_M1/cnt_57__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20004 \PWM_I_M1/cnt_57_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module PWM_I_M1_SLICE_46 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \PWM_I_M1/cnt_57__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \PWM_I_M1/cnt_57__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20004 \PWM_I_M1/cnt_57_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM_I_M1_SLICE_47 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \PWM_I_M1/cnt_57__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \PWM_I_M1/cnt_57__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20004 \PWM_I_M1/cnt_57_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM_I_M1_SLICE_48 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \PWM_I_M1/cnt_57__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \PWM_I_M1/cnt_57__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20004 \PWM_I_M1/cnt_57_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module PWM_I_M1_SLICE_49 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \PWM_I_M1/cnt_57__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20005 \PWM_I_M1/cnt_57_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module CLKDIV_I_SLICE_50 ( input D1, A1, A0, DI1, DI0, LSR, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 \CLKDIV_I/i1575_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \CLKDIV_I/i1573_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  vmuxregsre \CLKDIV_I/count_56__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CLKDIV_I/count_56__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CLKDIV_I_SLICE_51 ( input D1, C1, B1, A1, D0, B0, A0, DI1, DI0, LSR, 
    CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40007 \CLKDIV_I/i1589_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40008 \CLKDIV_I/i1582_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \CLKDIV_I/count_56__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \CLKDIV_I/count_56__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h66AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CLKDIV_I_SLICE_52 ( input D1, B1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40009 \CLKDIV_I/i1578_2_lut_rep_90 ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \CLKDIV_I/i1596_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \CLKDIV_I/count_56__i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6CCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module CLKDIV_I_SLICE_53 ( input D1, C1, B1, A1, B0, A0, DI0, M1, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40011 \CLKDIV_I/i2156_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 \CLKDIV_I/i1_2_lut_adj_5 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \CLKDIV_I/clk_1mhz_21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \CLKDIV_I/mhz_buf_19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0013 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module CLKDIV_I_SLICE_54 ( input A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40006 \CLKDIV_I/pwm_buf_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \CLKDIV_I/pwm_buf_20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module COM_I_M1_SLICE_71 ( input D0, C0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40014 \COM_I_M1/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \COM_I_M1/MospairA_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0015 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module SLICE_73 ( input C1, A1, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40016 \COM_I_M2/i1231_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 m1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0013 \COM_I_M2/MospairA_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0013 \COM_I_M2/MospairA_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module COM_I_M3_SLICE_74 ( input D1, B1, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40018 \COM_I_M3/i1240_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \COM_I_M3/n3029\001/BUF1/BUF1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0013 \COM_I_M3/MospairA_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0013 \COM_I_M3/MospairA_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module COM_I_M4_SLICE_75 ( input C1, B1, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, LSR_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40019 \COM_I_M4/i1234_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40017 \COM_I_M4/n3029\000/BUF1/BUF1 ( .A(GNDI), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0013 \COM_I_M4/MospairA_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));
  vmuxregsre0013 \COM_I_M4/MospairA_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module COM_I_M1_SLICE_76 ( input C0, B0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40020 \COM_I_M1/i2147_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \COM_I_M1/MospairB_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module COM_I_M1_SLICE_77 ( input A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40006 \COM_I_M1/i177_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \COM_I_M1/MospairB_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0021 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module COM_I_M2_SLICE_78 ( input D0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40022 \COM_I_M2/i1229_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \COM_I_M2/MospairB_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module COM_I_M3_SLICE_79 ( input C0, A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40023 \COM_I_M3/i1232_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \COM_I_M3/MospairB_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module COM_I_M4_SLICE_80 ( input D0, B0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40024 \COM_I_M4/i1235_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \COM_I_M4/MospairB_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module COM_I_M1_SLICE_81 ( input D0, C0, A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40025 \COM_I_M1/i2161_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0015 \COM_I_M1/MospairC_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module COM_I_M1_SLICE_82 ( input A0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40006 \COM_I_M1/i175_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0021 \COM_I_M1/MospairC_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module COM_I_M2_SLICE_83 ( input D0, B0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40024 \COM_I_M2/i1323_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \COM_I_M2/MospairC_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module COM_I_M3_SLICE_84 ( input D0, B0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40026 \COM_I_M3/i1324_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \COM_I_M3/MospairC_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module COM_I_M4_SLICE_85 ( input D0, C0, DI0, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, LSR_NOTIN, DI0_dly, CLK_dly, LSR_dly;

  lut40027 \COM_I_M4/i1325_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \COM_I_M4/MospairC_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_NOTIN), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter LSR_INVERTERIN( .I(LSR_dly), .Z(LSR_NOTIN));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_86 ( input B1, A1, D0, C0, B0, A0, DI0, M1, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40028 \SPI_I/CSold_I_0_2_lut_rep_92 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 \SPI_I/MISOb_N_586_I_0_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/CSold_81_rep_94 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/MISO_96 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCEC2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module PWM_I_M1_SLICE_87 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40030 \PWM_I_M1/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40031 \PWM_I_M1/i2159_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \PWM_I_M1/PWM_14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_90 ( input D1, A1, C0, DI0, M1, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40032 \SPI_I/SCKold_I_0_2_lut_rep_93 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40033 \SPI_I/CSlatched_I_0_1_lut_rep_91 ( .A(GNDI), .B(GNDI), .C(C0), 
    .D(GNDI), .Z(F0));
  vmuxregsre0013 \SPI_I/SCKlatched_84 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/i77_101 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_91 ( input D1, C1, B1, A1, D0, C0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \SPI_I/SLICE_91/SPI_I/SLICE_91_K1_H1 , GNDI, 
         \SPI_I/SLICE_91/SPI_I/i2170/GATE_H0 , VCCI, DI0_dly, CLK_dly;

  lut40034 \SPI_I/SLICE_91_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SPI_I/SLICE_91/SPI_I/SLICE_91_K1_H1 ));
  lut40035 \SPI_I/i2170/GATE ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\SPI_I/SLICE_91/SPI_I/i2170/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/MISOb_86 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \SPI_I/SLICE_91_K0K1MUX ( .D0(\SPI_I/SLICE_91/SPI_I/i2170/GATE_H0 ), 
    .D1(\SPI_I/SLICE_91/SPI_I/SLICE_91_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDD8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SPI_I_SLICE_139 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \SPI_I/SLICE_139/SPI_I/SLICE_139_K1_H1 , GNDI, 
         \SPI_I/SLICE_139/SPI_I/i2201/GATE_H0 , VCCI, DI0_dly, CLK_dly;

  lut40036 \SPI_I/SLICE_139_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SPI_I/SLICE_139/SPI_I/SLICE_139_K1_H1 ));
  lut40037 \SPI_I/i2201/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SPI_I/SLICE_139/SPI_I/i2201/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \SPI_I/SLICE_139_K0K1MUX ( 
    .D0(\SPI_I/SLICE_139/SPI_I/i2201/GATE_H0 ), 
    .D1(\SPI_I/SLICE_139/SPI_I/SLICE_139_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCE02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBABA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_140 ( input D1, C1, B1, A1, D0, C0, A0, DI0, M0, CLK, 
    output OFX0, Q0 );
  wire   \SPI_I/SLICE_140/SPI_I/SLICE_140_K1_H1 , GNDI, 
         \SPI_I/SLICE_140/SPI_I/i2203/GATE_H0 , VCCI, DI0_dly, CLK_dly;

  lut40038 \SPI_I/SLICE_140_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\SPI_I/SLICE_140/SPI_I/SLICE_140_K1_H1 ));
  lut40039 \SPI_I/i2203/GATE ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\SPI_I/SLICE_140/SPI_I/i2203/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \SPI_I/SLICE_140_K0K1MUX ( 
    .D0(\SPI_I/SLICE_140/SPI_I/i2203/GATE_H0 ), 
    .D1(\SPI_I/SLICE_140/SPI_I/SLICE_140_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_141 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40040 \SPI_I/mux_23_i5_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40041 \SPI_I/mux_23_i4_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCE4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCAC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_142 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40042 \SPI_I/mux_23_i7_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \SPI_I/mux_23_i6_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCEC4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_143 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40044 \SPI_I/mux_23_i9_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40044 \SPI_I/mux_23_i8_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_144 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/mux_23_i11_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/mux_23_i10_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFB08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAEA2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_145 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40043 \SPI_I/mux_23_i13_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \SPI_I/mux_23_i12_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_146 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40047 \SPI_I/mux_23_i15_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40048 \SPI_I/mux_23_i14_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC8C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_147 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40049 \SPI_I/mux_23_i17_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40050 \SPI_I/mux_23_i16_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCACC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_148 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \SPI_I/mux_23_i19_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \SPI_I/mux_23_i18_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_149 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/mux_23_i21_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \SPI_I/mux_23_i20_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_150 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40041 \SPI_I/mux_23_i23_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \SPI_I/mux_23_i22_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAACA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \SPI_I/i1092_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \SPI_I/i1090_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFB40) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_152 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \SPI_I/i1087_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \SPI_I/i1094_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_153 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40054 \SPI_I/i1091_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \SPI_I/i1088_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF2D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFD20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40056 \SPI_I/i1095_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \SPI_I/i1093_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBA8A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEF20) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_155 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \SPI_I/i1098_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \SPI_I/i1097_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i32 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/mux_23_i35_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/i1099_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i34 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_157 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 \SPI_I/mux_23_i37_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40053 \SPI_I/mux_23_i36_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i36 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i35 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_158 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40055 \SPI_I/mux_23_i39_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40054 \SPI_I/mux_23_i38_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i38 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i37 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_159 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40041 \SPI_I/mux_23_i41_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40052 \SPI_I/mux_23_i40_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i40 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i39 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_160 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40058 \SPI_I/mux_23_i43_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40059 \SPI_I/mux_23_i42_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i42 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i41 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAE2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_161 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/mux_23_i45_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/mux_23_i44_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i44 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i43 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/mux_23_i47_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/mux_23_i46_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i46 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i45 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_163 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \SPI_I/mux_23_i49_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \SPI_I/mux_23_i48_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i48 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i47 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_164 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \SPI_I/mux_23_i51_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/mux_23_i50_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i50 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i49 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_165 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 \SPI_I/mux_23_i53_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40049 \SPI_I/mux_23_i52_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i52 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i51 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_166 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \SPI_I/mux_23_i55_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \SPI_I/mux_23_i54_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i54 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i53 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40040 \SPI_I/mux_23_i57_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40060 \SPI_I/mux_23_i56_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i56 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i55 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0D8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_168 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/i1134_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \SPI_I/mux_23_i58_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i58 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i57 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_169 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \SPI_I/i1138_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \SPI_I/i1136_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i60 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i59 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_170 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40059 \SPI_I/i1132_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \SPI_I/i1131_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i62 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i61 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 \SPI_I/i1137_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40051 \SPI_I/i1135_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i64 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i63 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_172 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40057 \SPI_I/i1141_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40057 \SPI_I/i1139_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i66 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i65 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_173 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 \SPI_I/i1143_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \SPI_I/i1142_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i68 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i67 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40046 \SPI_I/i1180_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \SPI_I/i1178_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i70 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i69 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_175 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/i1175_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \SPI_I/i1182_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i72 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i71 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_176 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40041 \SPI_I/i1179_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 \SPI_I/i1176_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i74 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i73 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_177 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40040 \SPI_I/i1183_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 \SPI_I/i1181_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i76 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i75 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/i1186_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40046 \SPI_I/i1185_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i78 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i77 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40051 \SPI_I/mux_23_i81_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/i1187_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i80 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i79 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 \SPI_I/mux_23_i83_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/mux_23_i82_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i82 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i81 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_181 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40061 \SPI_I/mux_23_i85_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40061 \SPI_I/mux_23_i84_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i84 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i83 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD8CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_182 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40061 \SPI_I/mux_23_i87_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40044 \SPI_I/mux_23_i86_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i86 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i85 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_183 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \SPI_I/mux_23_i89_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \SPI_I/mux_23_i88_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i88 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i87 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_184 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \SPI_I/mux_23_i91_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \SPI_I/mux_23_i90_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i90 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i89 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_185 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 \SPI_I/mux_23_i93_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40053 \SPI_I/mux_23_i92_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/send_buffer_i92 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i91 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_186 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, M1_dly;

  lut40051 \SPI_I/mux_9_i94_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40061 \SPI_I/mux_23_i94_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/SCKold_82 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/send_buffer_i93 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_187 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40054 \SPI_I/mux_9_i45_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40055 \SPI_I/mux_9_i95_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre \SPI_I/send_buffer_i94 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_199 ( input D0, B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40062 \HALL_I_M1/i1227_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M1_SLICE_200 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \HALL_I_M1/i656_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \HALL_I_M1/i654_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE230) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCA0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M1_SLICE_201 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \HALL_I_M1/i652_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \HALL_I_M1/i660_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE320) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M1_SLICE_202 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \HALL_I_M1/i640_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \HALL_I_M1/i658_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_203 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 \HALL_I_M1/i628_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \HALL_I_M1/i594_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCB08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M1_SLICE_204 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \HALL_I_M1/i588_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \HALL_I_M1/i584_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0AC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M1_SLICE_205 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 \HALL_I_M1/i626_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \HALL_I_M1/i590_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_206 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 \HALL_I_M1/i630_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \HALL_I_M1/i614_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_207 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \HALL_I_M1/i592_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \HALL_I_M1/i602_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_208 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40066 \HALL_I_M1/i622_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 \HALL_I_M1/i586_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/speed_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/speed_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M1_SLICE_209 ( input D1, C1, A1, D0, C0, B0, A0, DI0, M1, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40069 \HALL_I_M1/i2_3_lut_rep_85 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \HALL_I_M1/i642_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/hall3_lat_40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \HALL_I_M1/speed_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5FA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M2_SLICE_210 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \HALL_I_M2/i644_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \HALL_I_M2/i580_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_211 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \HALL_I_M2/i604_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \HALL_I_M2/i634_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_212 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \HALL_I_M2/i620_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \HALL_I_M2/i608_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_213 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 \HALL_I_M2/i600_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 \HALL_I_M2/i606_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_214 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \HALL_I_M2/i610_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \HALL_I_M2/i616_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_215 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 \HALL_I_M2/i618_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \HALL_I_M2/i598_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_216 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \HALL_I_M2/i576_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \HALL_I_M2/i596_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_217 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 \HALL_I_M2/i574_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \HALL_I_M2/i650_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_218 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \HALL_I_M2/i646_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \HALL_I_M2/i572_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M2_SLICE_219 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \HALL_I_M2/i570_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \HALL_I_M2/i578_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/speed_i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/speed_i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_220 ( input D0, C0, B0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40070 \HALL_I_M3/i1_2_lut_3_lut_adj_10 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/speed_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M3_SLICE_221 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 \HALL_I_M3/i568_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \HALL_I_M3/i648_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/speed_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_222 ( input D0, C0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40071 \HALL_I_M3/i1_2_lut_3_lut_adj_9 ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/speed_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_223 ( input D1, A1, D0, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40072 \CLKDIV_I/i1_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40065 \HALL_I_M3/i636_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M3_SLICE_224 ( input D1, C1, A1, D0, C0, B0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40071 \HALL_I_M3/i1_2_lut_3_lut_adj_7 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 \HALL_I_M3/i1_2_lut_3_lut_adj_8 ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \HALL_I_M3/speed_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_225 ( input D1, C1, B1, A1, D0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40074 \HALL_I_M4/i6_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 \HALL_I_M3/i1_2_lut_3_lut_adj_6 ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/speed_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M3_SLICE_226 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 \HALL_I_M3/i666_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \HALL_I_M3/i716_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/speed_i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_227 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \HALL_I_M3/i662_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \HALL_I_M3/i664_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/speed_i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_228 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  lut40076 \HALL_I_M3/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \HALL_I_M3/i582_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M3_SLICE_229 ( input C1, B1, A1, D0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40077 \HALL_I_M3/i1_2_lut_3_lut_adj_12 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \HALL_I_M3/i1_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \HALL_I_M3/speed_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB0B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M3_SLICE_230 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 \HALL_I_M3/i790_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \HALL_I_M3/i792_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/speed_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_231 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \HALL_I_M3/i786_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \HALL_I_M3/i788_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/speed_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_232 ( input D1, C1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40079 \HALL_I_M3/i2_3_lut_rep_86 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 \HALL_I_M3/i784_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/speed_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M4_SLICE_233 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40080 \HALL_I_M4/i1_4_lut_rep_80 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 \HALL_I_M4/i1223_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD0D0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M4_SLICE_234 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40068 \HALL_I_M4/i780_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 \HALL_I_M4/i782_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_235 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40065 \HALL_I_M4/i776_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40065 \HALL_I_M4/i778_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i5 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i4 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_236 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \HALL_I_M4/i772_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \HALL_I_M4/i774_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i7 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i6 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_237 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 \HALL_I_M4/i768_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 \HALL_I_M4/i770_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i9 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i8 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_238 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \HALL_I_M4/i764_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \HALL_I_M4/i766_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i11 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i10 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_239 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 \HALL_I_M4/i760_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \HALL_I_M4/i762_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i13 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i12 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_240 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40067 \HALL_I_M4/i756_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40067 \HALL_I_M4/i758_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i15 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i14 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_241 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40063 \HALL_I_M4/i674_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 \HALL_I_M4/i714_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i17 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_242 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, 
    CLK, output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40064 \HALL_I_M4/i670_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \HALL_I_M4/i672_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i19 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/speed_i18 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M4_SLICE_243 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CLK, 
    output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40082 \HALL_I_M4/i2_3_lut_rep_83 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 \HALL_I_M4/i668_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/speed_i20 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDEDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M1_SLICE_244 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40083 \HALL_I_M1/i1_4_lut_rep_81 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 \HALL_I_M1/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/hall1_old_35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/hall1_lat_38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_245 ( input C1, B1, D0, C0, B0, A0, M0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, LSR_dly;

  lut40085 \HALL_I_M1/i5_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 \HALL_I_M1/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0021 \COM_I_M1/MospairA_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M1_SLICE_246 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40087 \HALL_I_M1/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40088 \HALL_I_M1/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M1/hall2_old_36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M1/hall2_lat_39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_247 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40089 \HALL_I_M1/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 \HALL_I_M1/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/enable_m4_100 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/enable_m3_99 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7FB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M4_SLICE_248 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40091 \HALL_I_M4/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40092 \HALL_I_M4/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/hall2_old_36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M4/hall2_lat_39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF6F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M4_SLICE_249 ( input C1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40093 \HALL_I_M4/i5_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \HALL_I_M4/i10_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/hall1_old_35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \HALL_I_M4/hall1_lat_38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M4_SLICE_250 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40088 \HALL_I_M4/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40095 \HALL_I_M4/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M2_SLICE_251 ( input D1, C1, B1, A1, D0, C0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40096 \HALL_I_M2/i1_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40097 \HALL_I_M2/i2_3_lut_rep_87 ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/hall3_lat_40 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \HALL_I_M2/hall2_old_36 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6FF6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5FA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M2_SLICE_252 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40098 \HALL_I_M2/i1_4_lut_rep_82 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \HALL_I_M2/i2145_2_lut_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \HALL_I_M2/hall2_lat_39 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/hall1_old_35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M2_SLICE_253 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40100 \HALL_I_M2/i2136_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40101 \HALL_I_M2/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_254 ( input D1, C1, B1, A1, D0, C0, A0, M1, M0, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40102 \HALL_I_M2/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 \HALL_I_M2/i2128_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M2/hall1_lat_38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \HALL_I_M1/hall3_old_37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M3_SLICE_255 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40104 \HALL_I_M3/i1_4_lut_adj_11 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \HALL_I_M3/i1_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/hall1_old_35 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/hall1_lat_38 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M3_SLICE_256 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40105 \HALL_I_M3/i2138_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40106 \HALL_I_M3/i9_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M3_SLICE_257 ( input D1, C1, B1, A1, D0, C0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40107 \HALL_I_M3/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40103 \HALL_I_M3/i2126_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/hall2_old_36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \HALL_I_M3/hall2_lat_39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module PWM_I_M1_SLICE_258 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40108 \PWM_I_M1/i2134_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40109 \PWM_I_M1/i3_4_lut_adj_4 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_259 ( input D1, C1, B1, D0, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40110 \SPI_I/i14_2_lut_rep_84_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40111 \SPI_I/i2_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i25 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i24 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_260 ( input D1, C1, B1, A1, C0, A0, M1, M0, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40047 \SPI_I/i1130_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40112 \SPI_I/CSold_I_0_103_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/CSold_81 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/CSlatched_83 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_261 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40113 \SPI_I/i1243_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 \SPI_I/mux_9_i44_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i29 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i28 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF2F2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_262 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40045 \SPI_I/mux_9_i9_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/mux_9_i43_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i27 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i26 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_263 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40043 \SPI_I/mux_9_i10_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \SPI_I/mux_9_i60_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i52 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i51 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_264 ( input D1, C1, B1, A1, D0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40043 \SPI_I/mux_9_i11_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40075 \SPI_I/i1244_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i21 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i20 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_265 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40041 \SPI_I/i1089_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 \SPI_I/i1133_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_266 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 \SPI_I/mux_9_i12_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \SPI_I/mux_9_i58_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i50 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40043 \SPI_I/mux_9_i13_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40042 \SPI_I/mux_9_i57_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i49 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i48 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_268 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40053 \SPI_I/mux_9_i14_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40058 \SPI_I/mux_9_i61_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i54 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i53 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_269 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40114 \SPI_I/mux_9_i15_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40115 \SPI_I/mux_9_i56_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i47 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i46 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_270 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40048 \SPI_I/mux_9_i62_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40048 \SPI_I/mux_9_i55_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i45 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i44 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_271 ( input D1, C1, B1, A1, D0, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 \SPI_I/mux_9_i16_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40116 \SPI_I/i1241_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i19 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_272 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40043 \SPI_I/mux_9_i17_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \SPI_I/mux_9_i53_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i43 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i42 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_273 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 \SPI_I/mux_9_i18_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40042 \SPI_I/mux_9_i52_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i41 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_274 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 \SPI_I/mux_9_i19_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40043 \SPI_I/mux_9_i51_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i39 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_275 ( input D1, C1, B1, A1, D0, C0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40045 \SPI_I/mux_9_i20_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40117 \SPI_I/i1245_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i23 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_276 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40045 \SPI_I/mux_9_i21_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \SPI_I/mux_9_i50_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i38 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_277 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40114 \SPI_I/mux_9_i22_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40114 \SPI_I/mux_9_i93_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/enable_m2_98 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/enable_m1_97 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_278 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40115 \SPI_I/mux_9_i23_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40115 \SPI_I/mux_9_i92_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i9 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i88 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_279 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40044 \SPI_I/mux_9_i64_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40044 \SPI_I/mux_9_i91_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i87 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i86 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_280 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40053 \SPI_I/mux_9_i25_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40044 \SPI_I/mux_9_i90_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i85 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i84 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_281 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40050 \SPI_I/i1086_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \SPI_I/i1174_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_282 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40061 \SPI_I/mux_9_i26_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40044 \SPI_I/mux_9_i89_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i83 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i82 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_283 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40047 \SPI_I/mux_9_i27_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40044 \SPI_I/mux_9_i88_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i81 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i80 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_284 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40050 \SPI_I/mux_9_i29_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \SPI_I/mux_9_i87_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i79 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_285 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40044 \SPI_I/mux_9_i30_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40061 \SPI_I/mux_9_i86_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i78 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i77 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_286 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40051 \SPI_I/mux_9_i31_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \SPI_I/mux_9_i85_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i76 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i75 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_287 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40051 \SPI_I/mux_9_i32_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40051 \SPI_I/mux_9_i84_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i74 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i73 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_288 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \SPI_I/mux_9_i65_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40041 \SPI_I/mux_9_i83_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i72 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i71 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_289 ( input D1, C1, B1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40116 \SPI_I/i1242_2_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 \SPI_I/mux_9_i82_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i70 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_290 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40049 \SPI_I/mux_9_i34_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40050 \SPI_I/mux_9_i81_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i69 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i68 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_291 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40049 \SPI_I/mux_9_i35_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40049 \SPI_I/mux_9_i80_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i67 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i66 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_292 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40050 \SPI_I/mux_9_i36_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40049 \SPI_I/mux_9_i79_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i65 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i64 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_293 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40045 \SPI_I/mux_9_i37_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40045 \SPI_I/mux_9_i78_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i63 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i62 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_294 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40054 \SPI_I/mux_9_i38_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40055 \SPI_I/mux_9_i77_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i61 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i60 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_295 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40052 \SPI_I/mux_9_i39_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40041 \SPI_I/mux_9_i76_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i59 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_296 ( input D1, C1, B1, A1, D0, C0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 \SPI_I/mux_9_i40_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40118 \SPI_I/i1238_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i18 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i17 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_297 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 \SPI_I/mux_9_i41_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40042 \SPI_I/mux_9_i49_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i36 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i35 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_298 ( input D1, C1, B1, A1, D0, C0, B0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40049 \SPI_I/mux_9_i42_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40073 \SPI_I/i1219_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_299 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40050 \SPI_I/mux_9_i66_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40049 \SPI_I/mux_9_i48_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i34 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i33 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_300 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40050 \SPI_I/mux_9_i67_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40049 \SPI_I/mux_9_i47_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i32 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_301 ( input D1, C1, B1, A1, D0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40114 \SPI_I/mux_9_i68_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40119 \SPI_I/i1222_2_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i16 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \SPI_I/\SPI__7__i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SPI_I_SLICE_302 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40049 \SPI_I/mux_9_i69_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40049 \SPI_I/mux_9_i46_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i30 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_303 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 \SPI_I/i1177_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 \SPI_I/mux_9_i73_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i58 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i57 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SPI_I_SLICE_304 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40045 \SPI_I/mux_9_i71_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40046 \SPI_I/mux_9_i72_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \SPI_I/\SPI__7__i56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \SPI_I/\SPI__7__i55 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module HALL_I_M3_SLICE_305 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40120 \HALL_I_M3/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40084 \HALL_I_M3/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M3/hall3_old_37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \HALL_I_M3/hall3_lat_40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M2_SLICE_306 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  lut40121 \HALL_I_M2/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 \HALL_I_M2/i6_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M2/hall3_old_37 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module HALL_I_M4_SLICE_307 ( input D1, C1, D0, B0, A0, M1, M0, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly;

  lut40122 \HALL_I_M4/i4_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \HALL_I_M4/i5_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0013 \HALL_I_M4/hall3_old_37 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \HALL_I_M4/hall3_lat_40 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_308 ( input C1, A1, D0, C0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40124 \HALL_I_M1/i4_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 \HALL_I_M1/i5_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \CLKDIV_I/pwm_clk_22 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module LED1 ( input PADDO, output LED1 );
  wire   GNDI;

  xo2iobuf LED1_pad( .I(PADDO), .T(GNDI), .PAD(LED1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED1) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module MISO ( input PADDT, PADDO, output MISO );
  wire   PADDT_NOTIN;

  xo2iobuf0126 MISO_pad( .I(PADDO), .T(PADDT_NOTIN), .PAD(MISO));
  inverter PADDT_INVERTERIN( .I(PADDT), .Z(PADDT_NOTIN));

  specify
    (PADDT => MISO) = (0:0:0,0:0:0,0:0:0,0:0:0,0:0:0,0:0:0);
    (PADDO => MISO) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0126 ( input I, T, output PAD );

  OBZ INST5( .I(I), .T(T), .O(PAD));
endmodule

module LED2 ( input PADDO, output LED2 );
  wire   GNDI;

  xo2iobuf LED2_pad( .I(PADDO), .T(GNDI), .PAD(LED2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED2) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED3 ( input PADDO, output LED3 );
  wire   GNDI;

  xo2iobuf LED3_pad( .I(PADDO), .T(GNDI), .PAD(LED3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED3) = (0:0:0,0:0:0);
  endspecify

endmodule

module LED4 ( input PADDO, output LED4 );
  wire   GNDI;

  xo2iobuf LED4_pad( .I(PADDO), .T(GNDI), .PAD(LED4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => LED4) = (0:0:0,0:0:0);
  endspecify

endmodule

module clkout ( input PADDO, output clkout );
  wire   GNDI;

  xo2iobuf clkout_pad( .I(PADDO), .T(GNDI), .PAD(clkout));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => clkout) = (0:0:0,0:0:0);
  endspecify

endmodule

module MA_m1_1_ ( input PADDO, output MAm11 );
  wire   GNDI;

  xo2iobuf MA_m1_pad_1( .I(PADDO), .T(GNDI), .PAD(MAm11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MAm11) = (0:0:0,0:0:0);
  endspecify

endmodule

module MA_m1_0_ ( input PADDO, output MAm10 );
  wire   GNDI;

  xo2iobuf MA_m1_pad_0( .I(PADDO), .T(GNDI), .PAD(MAm10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MAm10) = (0:0:0,0:0:0);
  endspecify

endmodule

module MB_m1_1_ ( input PADDO, output MBm11 );
  wire   GNDI;

  xo2iobuf MB_m1_pad_1( .I(PADDO), .T(GNDI), .PAD(MBm11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MBm11) = (0:0:0,0:0:0);
  endspecify

endmodule

module MB_m1_0_ ( input PADDO, output MBm10 );
  wire   GNDI;

  xo2iobuf MB_m1_pad_0( .I(PADDO), .T(GNDI), .PAD(MBm10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MBm10) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_m1_1_ ( input PADDO, output MCm11 );
  wire   GNDI;

  xo2iobuf MC_m1_pad_1( .I(PADDO), .T(GNDI), .PAD(MCm11));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MCm11) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_m1_0_ ( input PADDO, output MCm10 );
  wire   GNDI;

  xo2iobuf MC_m1_pad_0( .I(PADDO), .T(GNDI), .PAD(MCm10));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MCm10) = (0:0:0,0:0:0);
  endspecify

endmodule

module MA_m2_1_ ( input PADDO, output MAm21 );
  wire   GNDI;

  xo2iobuf MA_m2_pad_1( .I(PADDO), .T(GNDI), .PAD(MAm21));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MAm21) = (0:0:0,0:0:0);
  endspecify

endmodule

module MA_m2_0_ ( input PADDO, output MAm20 );
  wire   GNDI;

  xo2iobuf MA_m2_pad_0( .I(PADDO), .T(GNDI), .PAD(MAm20));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MAm20) = (0:0:0,0:0:0);
  endspecify

endmodule

module MB_m2_1_ ( input PADDO, output MBm21 );
  wire   GNDI;

  xo2iobuf MB_m2_pad_1( .I(PADDO), .T(GNDI), .PAD(MBm21));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MBm21) = (0:0:0,0:0:0);
  endspecify

endmodule

module MB_m2_0_ ( input PADDO, output MBm20 );
  wire   GNDI;

  xo2iobuf MB_m2_pad_0( .I(PADDO), .T(GNDI), .PAD(MBm20));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MBm20) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_m2_1_ ( input PADDO, output MCm21 );
  wire   GNDI;

  xo2iobuf MC_m2_pad_1( .I(PADDO), .T(GNDI), .PAD(MCm21));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MCm21) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_m2_0_ ( input PADDO, output MCm20 );
  wire   GNDI;

  xo2iobuf MC_m2_pad_0( .I(PADDO), .T(GNDI), .PAD(MCm20));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MCm20) = (0:0:0,0:0:0);
  endspecify

endmodule

module MA_m3_1_ ( input PADDO, output MAm31 );
  wire   GNDI;

  xo2iobuf MA_m3_pad_1( .I(PADDO), .T(GNDI), .PAD(MAm31));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MAm31) = (0:0:0,0:0:0);
  endspecify

endmodule

module MA_m3_0_ ( input PADDO, output MAm30 );
  wire   GNDI;

  xo2iobuf MA_m3_pad_0( .I(PADDO), .T(GNDI), .PAD(MAm30));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MAm30) = (0:0:0,0:0:0);
  endspecify

endmodule

module MB_m3_1_ ( input PADDO, output MBm31 );
  wire   GNDI;

  xo2iobuf MB_m3_pad_1( .I(PADDO), .T(GNDI), .PAD(MBm31));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MBm31) = (0:0:0,0:0:0);
  endspecify

endmodule

module MB_m3_0_ ( input PADDO, output MBm30 );
  wire   GNDI;

  xo2iobuf MB_m3_pad_0( .I(PADDO), .T(GNDI), .PAD(MBm30));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MBm30) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_m3_1_ ( input PADDO, output MCm31 );
  wire   GNDI;

  xo2iobuf MC_m3_pad_1( .I(PADDO), .T(GNDI), .PAD(MCm31));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MCm31) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_m3_0_ ( input PADDO, output MCm30 );
  wire   GNDI;

  xo2iobuf MC_m3_pad_0( .I(PADDO), .T(GNDI), .PAD(MCm30));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MCm30) = (0:0:0,0:0:0);
  endspecify

endmodule

module MA_m4_1_ ( input PADDO, output MAm41 );
  wire   GNDI;

  xo2iobuf MA_m4_pad_1( .I(PADDO), .T(GNDI), .PAD(MAm41));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MAm41) = (0:0:0,0:0:0);
  endspecify

endmodule

module MA_m4_0_ ( input PADDO, output MAm40 );
  wire   GNDI;

  xo2iobuf MA_m4_pad_0( .I(PADDO), .T(GNDI), .PAD(MAm40));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MAm40) = (0:0:0,0:0:0);
  endspecify

endmodule

module MB_m4_1_ ( input PADDO, output MBm41 );
  wire   GNDI;

  xo2iobuf MB_m4_pad_1( .I(PADDO), .T(GNDI), .PAD(MBm41));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MBm41) = (0:0:0,0:0:0);
  endspecify

endmodule

module MB_m4_0_ ( input PADDO, output MBm40 );
  wire   GNDI;

  xo2iobuf MB_m4_pad_0( .I(PADDO), .T(GNDI), .PAD(MBm40));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MBm40) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_m4_1_ ( input PADDO, output MCm41 );
  wire   GNDI;

  xo2iobuf MC_m4_pad_1( .I(PADDO), .T(GNDI), .PAD(MCm41));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MCm41) = (0:0:0,0:0:0);
  endspecify

endmodule

module MC_m4_0_ ( input PADDO, output MCm40 );
  wire   GNDI;

  xo2iobuf MC_m4_pad_0( .I(PADDO), .T(GNDI), .PAD(MCm40));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => MCm40) = (0:0:0,0:0:0);
  endspecify

endmodule

module CS ( output PADDI, input CS );

  xo2iobuf0127 CS_pad( .Z(PADDI), .PAD(CS));

  specify
    (CS => PADDI) = (0:0:0,0:0:0);
    $width (posedge CS, 0:0:0);
    $width (negedge CS, 0:0:0);
  endspecify

endmodule

module xo2iobuf0127 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module SCK ( output PADDI, input SCK );

  xo2iobuf0127 SCK_pad( .Z(PADDI), .PAD(SCK));

  specify
    (SCK => PADDI) = (0:0:0,0:0:0);
    $width (posedge SCK, 0:0:0);
    $width (negedge SCK, 0:0:0);
  endspecify

endmodule

module MOSI ( output PADDI, input MOSI );

  xo2iobuf0127 MOSI_pad( .Z(PADDI), .PAD(MOSI));

  specify
    (MOSI => PADDI) = (0:0:0,0:0:0);
    $width (posedge MOSI, 0:0:0);
    $width (negedge MOSI, 0:0:0);
  endspecify

endmodule

module H_A_m1 ( output PADDI, input H_A_m1 );

  xo2iobuf0127 H_A_m1_pad( .Z(PADDI), .PAD(H_A_m1));

  specify
    (H_A_m1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_A_m1, 0:0:0);
    $width (negedge H_A_m1, 0:0:0);
  endspecify

endmodule

module H_B_m1 ( output PADDI, input H_B_m1 );

  xo2iobuf0127 H_B_m1_pad( .Z(PADDI), .PAD(H_B_m1));

  specify
    (H_B_m1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_B_m1, 0:0:0);
    $width (negedge H_B_m1, 0:0:0);
  endspecify

endmodule

module H_C_m1 ( output PADDI, input H_C_m1 );

  xo2iobuf0127 H_C_m1_pad( .Z(PADDI), .PAD(H_C_m1));

  specify
    (H_C_m1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_C_m1, 0:0:0);
    $width (negedge H_C_m1, 0:0:0);
  endspecify

endmodule

module H_A_m2 ( output PADDI, input H_A_m2 );

  xo2iobuf0127 H_A_m2_pad( .Z(PADDI), .PAD(H_A_m2));

  specify
    (H_A_m2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_A_m2, 0:0:0);
    $width (negedge H_A_m2, 0:0:0);
  endspecify

endmodule

module H_B_m2 ( output PADDI, input H_B_m2 );

  xo2iobuf0127 H_B_m2_pad( .Z(PADDI), .PAD(H_B_m2));

  specify
    (H_B_m2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_B_m2, 0:0:0);
    $width (negedge H_B_m2, 0:0:0);
  endspecify

endmodule

module H_C_m2 ( output PADDI, input H_C_m2 );

  xo2iobuf0127 H_C_m2_pad( .Z(PADDI), .PAD(H_C_m2));

  specify
    (H_C_m2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_C_m2, 0:0:0);
    $width (negedge H_C_m2, 0:0:0);
  endspecify

endmodule

module H_A_m3 ( output PADDI, input H_A_m3 );

  xo2iobuf0127 H_A_m3_pad( .Z(PADDI), .PAD(H_A_m3));

  specify
    (H_A_m3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_A_m3, 0:0:0);
    $width (negedge H_A_m3, 0:0:0);
  endspecify

endmodule

module H_B_m3 ( output PADDI, input H_B_m3 );

  xo2iobuf0127 H_B_m3_pad( .Z(PADDI), .PAD(H_B_m3));

  specify
    (H_B_m3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_B_m3, 0:0:0);
    $width (negedge H_B_m3, 0:0:0);
  endspecify

endmodule

module H_C_m3 ( output PADDI, input H_C_m3 );

  xo2iobuf0127 H_C_m3_pad( .Z(PADDI), .PAD(H_C_m3));

  specify
    (H_C_m3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_C_m3, 0:0:0);
    $width (negedge H_C_m3, 0:0:0);
  endspecify

endmodule

module H_A_m4 ( output PADDI, input H_A_m4 );

  xo2iobuf0127 H_A_m4_pad( .Z(PADDI), .PAD(H_A_m4));

  specify
    (H_A_m4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_A_m4, 0:0:0);
    $width (negedge H_A_m4, 0:0:0);
  endspecify

endmodule

module H_B_m4 ( output PADDI, input H_B_m4 );

  xo2iobuf0127 H_B_m4_pad( .Z(PADDI), .PAD(H_B_m4));

  specify
    (H_B_m4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_B_m4, 0:0:0);
    $width (negedge H_B_m4, 0:0:0);
  endspecify

endmodule

module H_C_m4 ( output PADDI, input H_C_m4 );

  xo2iobuf0127 H_C_m4_pad( .Z(PADDI), .PAD(H_C_m4));

  specify
    (H_C_m4 => PADDI) = (0:0:0,0:0:0);
    $width (posedge H_C_m4, 0:0:0);
    $width (negedge H_C_m4, 0:0:0);
  endspecify

endmodule

module OSCInst0 ( output OSC );
  wire   GNDI;

  OSCH_B OSCInst0_OSCH( .STDBY(GNDI), .OSC(OSC), .SEDSTDBY());
  gnd DRIVEGND( .PWR0(GNDI));
endmodule

module OSCH_B ( input STDBY, output OSC, SEDSTDBY );

  OSCH INST10( .STDBY(STDBY), .SEDSTDBY(SEDSTDBY), .OSC(OSC));
  defparam INST10.NOM_FREQ = "38.00";
endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
